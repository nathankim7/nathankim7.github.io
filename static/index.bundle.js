/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js ***!
  \*********************************************************************/
/*! namespace exports */
/*! export ITERATE_KEY [provided] [no usage info] [missing usage info prevents renaming] */
/*! export computed [provided] [no usage info] [missing usage info prevents renaming] */
/*! export customRef [provided] [no usage info] [missing usage info prevents renaming] */
/*! export effect [provided] [no usage info] [missing usage info prevents renaming] */
/*! export enableTracking [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isProxy [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isReactive [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isReadonly [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isRef [provided] [no usage info] [missing usage info prevents renaming] */
/*! export markRaw [provided] [no usage info] [missing usage info prevents renaming] */
/*! export pauseTracking [provided] [no usage info] [missing usage info prevents renaming] */
/*! export proxyRefs [provided] [no usage info] [missing usage info prevents renaming] */
/*! export reactive [provided] [no usage info] [missing usage info prevents renaming] */
/*! export readonly [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ref [provided] [no usage info] [missing usage info prevents renaming] */
/*! export resetTracking [provided] [no usage info] [missing usage info prevents renaming] */
/*! export shallowReactive [provided] [no usage info] [missing usage info prevents renaming] */
/*! export shallowReadonly [provided] [no usage info] [missing usage info prevents renaming] */
/*! export shallowRef [provided] [no usage info] [missing usage info prevents renaming] */
/*! export stop [provided] [no usage info] [missing usage info prevents renaming] */
/*! export toRaw [provided] [no usage info] [missing usage info prevents renaming] */
/*! export toRef [provided] [no usage info] [missing usage info prevents renaming] */
/*! export toRefs [provided] [no usage info] [missing usage info prevents renaming] */
/*! export track [provided] [no usage info] [missing usage info prevents renaming] */
/*! export trigger [provided] [no usage info] [missing usage info prevents renaming] */
/*! export triggerRef [provided] [no usage info] [missing usage info prevents renaming] */
/*! export unref [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ITERATE_KEY\": () => /* binding */ ITERATE_KEY,\n/* harmony export */   \"computed\": () => /* binding */ computed,\n/* harmony export */   \"customRef\": () => /* binding */ customRef,\n/* harmony export */   \"effect\": () => /* binding */ effect,\n/* harmony export */   \"enableTracking\": () => /* binding */ enableTracking,\n/* harmony export */   \"isProxy\": () => /* binding */ isProxy,\n/* harmony export */   \"isReactive\": () => /* binding */ isReactive,\n/* harmony export */   \"isReadonly\": () => /* binding */ isReadonly,\n/* harmony export */   \"isRef\": () => /* binding */ isRef,\n/* harmony export */   \"markRaw\": () => /* binding */ markRaw,\n/* harmony export */   \"pauseTracking\": () => /* binding */ pauseTracking,\n/* harmony export */   \"proxyRefs\": () => /* binding */ proxyRefs,\n/* harmony export */   \"reactive\": () => /* binding */ reactive,\n/* harmony export */   \"readonly\": () => /* binding */ readonly,\n/* harmony export */   \"ref\": () => /* binding */ ref,\n/* harmony export */   \"resetTracking\": () => /* binding */ resetTracking,\n/* harmony export */   \"shallowReactive\": () => /* binding */ shallowReactive,\n/* harmony export */   \"shallowReadonly\": () => /* binding */ shallowReadonly,\n/* harmony export */   \"shallowRef\": () => /* binding */ shallowRef,\n/* harmony export */   \"stop\": () => /* binding */ stop,\n/* harmony export */   \"toRaw\": () => /* binding */ toRaw,\n/* harmony export */   \"toRef\": () => /* binding */ toRef,\n/* harmony export */   \"toRefs\": () => /* binding */ toRefs,\n/* harmony export */   \"track\": () => /* binding */ track,\n/* harmony export */   \"trigger\": () => /* binding */ trigger,\n/* harmony export */   \"triggerRef\": () => /* binding */ triggerRef,\n/* harmony export */   \"unref\": () => /* binding */ unref\n/* harmony export */ });\n/* harmony import */ var _vue_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vue/shared */ \"./node_modules/@vue/shared/dist/shared.esm-bundler.js\");\n\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol(( true) ? 'iterate' : 0);\r\nconst MAP_KEY_ITERATE_KEY = Symbol(( true) ? 'Map key iterate' : 0);\r\nfunction isEffect(fn) {\r\n    return fn && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = _vue_shared__WEBPACK_IMPORTED_MODULE_0__.EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nlet uid = 0;\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect() {\r\n        if (!effect.active) {\r\n            return options.scheduler ? undefined : fn();\r\n        }\r\n        if (!effectStack.includes(effect)) {\r\n            cleanup(effect);\r\n            try {\r\n                enableTracking();\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn();\r\n            }\r\n            finally {\r\n                effectStack.pop();\r\n                resetTracking();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    };\r\n    effect.id = uid++;\r\n    effect.allowRecurse = !!options.allowRecurse;\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if (( true) && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect || effect.allowRecurse) {\r\n                    effects.add(effect);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && (0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.isArray)(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!(0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.isArray)(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.isMap)(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.isIntegerKey)(key)) {\r\n                    // new index added to array -> length changes\r\n                    add(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!(0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.isArray)(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.isMap)(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.isMap)(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if (( true) && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    effects.forEach(run);\r\n}\n\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(_vue_shared__WEBPACK_IMPORTED_MODULE_0__.isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = {};\r\n['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        const arr = toRaw(this);\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            track(arr, \"get\" /* GET */, i + '');\r\n        }\r\n        // we run the method using the original args first (which may be reactive)\r\n        const res = method.apply(arr, args);\r\n        if (res === -1 || res === false) {\r\n            // if that didn't work, run it again using raw values.\r\n            return method.apply(arr, args.map(toRaw));\r\n        }\r\n        else {\r\n            return res;\r\n        }\r\n    };\r\n});\r\n['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        pauseTracking();\r\n        const res = method.apply(this, args);\r\n        resetTracking();\r\n        return res;\r\n    };\r\n});\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver === (isReadonly ? readonlyMap : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.isArray)(target);\r\n        if (targetIsArray && (0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.hasOwn)(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.isSymbol)(key)\r\n            ? builtInSymbols.has(key)\r\n            : key === `__proto__` || key === `__v_isRef`) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !(0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.isIntegerKey)(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.isObject)(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        const oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            if (!(0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.isArray)(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.isArray)(target) && (0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.isIntegerKey)(key)\r\n            ? Number(key) < target.length\r\n            : (0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.hasOwn)(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.hasChanged)(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.hasOwn)(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!(0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.isSymbol)(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, (0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.isArray)(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((true)) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((true)) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.extend)({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.extend)({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toReactive = (value) => (0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.isObject)(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => (0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.isObject)(value) ? readonly(value) : value;\r\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    const result = target.add(value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return result;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((true)) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    const result = target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.hasChanged)(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((true)) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = ( true)\r\n        ? (0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.isMap)(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : 0;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.isMap)(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((true)) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${(0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.capitalize)(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nconst mutableInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n};\r\nconst shallowInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, false, true);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n};\r\nconst readonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, true);\r\n    },\r\n    get size() {\r\n        return size(this, true);\r\n    },\r\n    has(key) {\r\n        return has$1.call(this, key, true);\r\n    },\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true, false)\r\n};\r\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\niteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n    readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n    shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n});\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get((0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.hasOwn)(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(true, false)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.toRawType)(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap((0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.toRawType)(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers);\r\n}\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers);\r\n}\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers);\r\n}\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, readonlyCollectionHandlers);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers) {\r\n    if (!(0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.isObject)(target)) {\r\n        if ((true)) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const proxyMap = isReadonly ? readonlyMap : reactiveMap;\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\r\nfunction markRaw(value) {\r\n    (0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.def)(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\n\nconst convert = (val) => (0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.isObject)(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return Boolean(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nclass RefImpl {\r\n    constructor(_rawValue, _shallow = false) {\r\n        this._rawValue = _rawValue;\r\n        this._shallow = _shallow;\r\n        this.__v_isRef = true;\r\n        this._value = _shallow ? _rawValue : convert(_rawValue);\r\n    }\r\n    get value() {\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.hasChanged)(toRaw(newVal), this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this._shallow ? newVal : convert(newVal);\r\n            trigger(toRaw(this), \"set\" /* SET */, 'value', newVal);\r\n        }\r\n    }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nfunction triggerRef(ref) {\r\n    trigger(toRaw(ref), \"set\" /* SET */, 'value', ( true) ? ref.value : 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => track(this, \"get\" /* GET */, 'value'), () => trigger(this, \"set\" /* SET */, 'value'));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if (( true) && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.isArray)(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        return this._object[this._key];\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key) {\r\n    return isRef(object[key])\r\n        ? object[key]\r\n        : new ObjectRefImpl(object, key);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly) {\r\n        this._setter = _setter;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this.effect = effect(getter, {\r\n            lazy: true,\r\n            scheduler: () => {\r\n                if (!this._dirty) {\r\n                    this._dirty = true;\r\n                    trigger(toRaw(this), \"set\" /* SET */, 'value');\r\n                }\r\n            }\r\n        });\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        if (this._dirty) {\r\n            this._value = this.effect();\r\n            this._dirty = false;\r\n        }\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.isFunction)(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = ( true)\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : 0;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    return new ComputedRefImpl(getter, setter, (0,_vue_shared__WEBPACK_IMPORTED_MODULE_0__.isFunction)(getterOrOptions) || !getterOrOptions.set);\r\n}\n\n\n\n\n//# sourceURL=webpack://nathankim7.github.io/./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js?");

/***/ }),

/***/ "./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export BaseTransition [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Comment [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Fragment [provided] [no usage info] [missing usage info prevents renaming] */
/*! export KeepAlive [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Static [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Suspense [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Teleport [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Text [provided] [no usage info] [missing usage info prevents renaming] */
/*! export callWithAsyncErrorHandling [provided] [no usage info] [missing usage info prevents renaming] */
/*! export callWithErrorHandling [provided] [no usage info] [missing usage info prevents renaming] */
/*! export camelize [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/shared/dist/shared.esm-bundler.js .camelize */
/*! export capitalize [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/shared/dist/shared.esm-bundler.js .capitalize */
/*! export cloneVNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export computed [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createBlock [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createCommentVNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createHydrationRenderer [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createRenderer [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createSlots [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createStaticVNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createTextVNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createVNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export customRef [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .customRef */
/*! export defineAsyncComponent [provided] [no usage info] [missing usage info prevents renaming] */
/*! export defineComponent [provided] [no usage info] [missing usage info prevents renaming] */
/*! export defineEmit [provided] [no usage info] [missing usage info prevents renaming] */
/*! export defineProps [provided] [no usage info] [missing usage info prevents renaming] */
/*! export devtools [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getCurrentInstance [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getTransitionRawChildren [provided] [no usage info] [missing usage info prevents renaming] */
/*! export h [provided] [no usage info] [missing usage info prevents renaming] */
/*! export handleError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export initCustomFormatter [provided] [no usage info] [missing usage info prevents renaming] */
/*! export inject [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isProxy [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .isProxy */
/*! export isReactive [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .isReactive */
/*! export isReadonly [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .isReadonly */
/*! export isRef [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .isRef */
/*! export isVNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export markRaw [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .markRaw */
/*! export mergeProps [provided] [no usage info] [missing usage info prevents renaming] */
/*! export nextTick [provided] [no usage info] [missing usage info prevents renaming] */
/*! export onActivated [provided] [no usage info] [missing usage info prevents renaming] */
/*! export onBeforeMount [provided] [no usage info] [missing usage info prevents renaming] */
/*! export onBeforeUnmount [provided] [no usage info] [missing usage info prevents renaming] */
/*! export onBeforeUpdate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export onDeactivated [provided] [no usage info] [missing usage info prevents renaming] */
/*! export onErrorCaptured [provided] [no usage info] [missing usage info prevents renaming] */
/*! export onMounted [provided] [no usage info] [missing usage info prevents renaming] */
/*! export onRenderTracked [provided] [no usage info] [missing usage info prevents renaming] */
/*! export onRenderTriggered [provided] [no usage info] [missing usage info prevents renaming] */
/*! export onUnmounted [provided] [no usage info] [missing usage info prevents renaming] */
/*! export onUpdated [provided] [no usage info] [missing usage info prevents renaming] */
/*! export openBlock [provided] [no usage info] [missing usage info prevents renaming] */
/*! export popScopeId [provided] [no usage info] [missing usage info prevents renaming] */
/*! export provide [provided] [no usage info] [missing usage info prevents renaming] */
/*! export proxyRefs [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .proxyRefs */
/*! export pushScopeId [provided] [no usage info] [missing usage info prevents renaming] */
/*! export queuePostFlushCb [provided] [no usage info] [missing usage info prevents renaming] */
/*! export reactive [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .reactive */
/*! export readonly [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .readonly */
/*! export ref [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .ref */
/*! export registerRuntimeCompiler [provided] [no usage info] [missing usage info prevents renaming] */
/*! export renderList [provided] [no usage info] [missing usage info prevents renaming] */
/*! export renderSlot [provided] [no usage info] [missing usage info prevents renaming] */
/*! export resolveComponent [provided] [no usage info] [missing usage info prevents renaming] */
/*! export resolveDirective [provided] [no usage info] [missing usage info prevents renaming] */
/*! export resolveDynamicComponent [provided] [no usage info] [missing usage info prevents renaming] */
/*! export resolveTransitionHooks [provided] [no usage info] [missing usage info prevents renaming] */
/*! export setBlockTracking [provided] [no usage info] [missing usage info prevents renaming] */
/*! export setDevtoolsHook [provided] [no usage info] [missing usage info prevents renaming] */
/*! export setTransitionHooks [provided] [no usage info] [missing usage info prevents renaming] */
/*! export shallowReactive [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .shallowReactive */
/*! export shallowReadonly [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .shallowReadonly */
/*! export shallowRef [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .shallowRef */
/*! export ssrContextKey [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ssrUtils [provided] [no usage info] [missing usage info prevents renaming] */
/*! export toDisplayString [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/shared/dist/shared.esm-bundler.js .toDisplayString */
/*! export toHandlerKey [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/shared/dist/shared.esm-bundler.js .toHandlerKey */
/*! export toHandlers [provided] [no usage info] [missing usage info prevents renaming] */
/*! export toRaw [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .toRaw */
/*! export toRef [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .toRef */
/*! export toRefs [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .toRefs */
/*! export transformVNodeArgs [provided] [no usage info] [missing usage info prevents renaming] */
/*! export triggerRef [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .triggerRef */
/*! export unref [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .unref */
/*! export useContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! export useSSRContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! export useTransitionState [provided] [no usage info] [missing usage info prevents renaming] */
/*! export version [provided] [no usage info] [missing usage info prevents renaming] */
/*! export warn [provided] [no usage info] [missing usage info prevents renaming] */
/*! export watch [provided] [no usage info] [missing usage info prevents renaming] */
/*! export watchEffect [provided] [no usage info] [missing usage info prevents renaming] */
/*! export withCtx [provided] [no usage info] [missing usage info prevents renaming] */
/*! export withDirectives [provided] [no usage info] [missing usage info prevents renaming] */
/*! export withScopeId [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.g, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"customRef\": () => /* reexport safe */ _vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.customRef,\n/* harmony export */   \"isProxy\": () => /* reexport safe */ _vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.isProxy,\n/* harmony export */   \"isReactive\": () => /* reexport safe */ _vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.isReactive,\n/* harmony export */   \"isReadonly\": () => /* reexport safe */ _vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.isReadonly,\n/* harmony export */   \"isRef\": () => /* reexport safe */ _vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.isRef,\n/* harmony export */   \"markRaw\": () => /* reexport safe */ _vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.markRaw,\n/* harmony export */   \"proxyRefs\": () => /* reexport safe */ _vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.proxyRefs,\n/* harmony export */   \"reactive\": () => /* reexport safe */ _vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.reactive,\n/* harmony export */   \"readonly\": () => /* reexport safe */ _vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.readonly,\n/* harmony export */   \"ref\": () => /* reexport safe */ _vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.ref,\n/* harmony export */   \"shallowReactive\": () => /* reexport safe */ _vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.shallowReactive,\n/* harmony export */   \"shallowReadonly\": () => /* reexport safe */ _vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.shallowReadonly,\n/* harmony export */   \"shallowRef\": () => /* reexport safe */ _vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.shallowRef,\n/* harmony export */   \"toRaw\": () => /* reexport safe */ _vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.toRaw,\n/* harmony export */   \"toRef\": () => /* reexport safe */ _vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.toRef,\n/* harmony export */   \"toRefs\": () => /* reexport safe */ _vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.toRefs,\n/* harmony export */   \"triggerRef\": () => /* reexport safe */ _vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.triggerRef,\n/* harmony export */   \"unref\": () => /* reexport safe */ _vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.unref,\n/* harmony export */   \"camelize\": () => /* reexport safe */ _vue_shared__WEBPACK_IMPORTED_MODULE_1__.camelize,\n/* harmony export */   \"capitalize\": () => /* reexport safe */ _vue_shared__WEBPACK_IMPORTED_MODULE_1__.capitalize,\n/* harmony export */   \"toDisplayString\": () => /* reexport safe */ _vue_shared__WEBPACK_IMPORTED_MODULE_1__.toDisplayString,\n/* harmony export */   \"toHandlerKey\": () => /* reexport safe */ _vue_shared__WEBPACK_IMPORTED_MODULE_1__.toHandlerKey,\n/* harmony export */   \"BaseTransition\": () => /* binding */ BaseTransition,\n/* harmony export */   \"Comment\": () => /* binding */ Comment,\n/* harmony export */   \"Fragment\": () => /* binding */ Fragment,\n/* harmony export */   \"KeepAlive\": () => /* binding */ KeepAlive,\n/* harmony export */   \"Static\": () => /* binding */ Static,\n/* harmony export */   \"Suspense\": () => /* binding */ Suspense,\n/* harmony export */   \"Teleport\": () => /* binding */ Teleport,\n/* harmony export */   \"Text\": () => /* binding */ Text,\n/* harmony export */   \"callWithAsyncErrorHandling\": () => /* binding */ callWithAsyncErrorHandling,\n/* harmony export */   \"callWithErrorHandling\": () => /* binding */ callWithErrorHandling,\n/* harmony export */   \"cloneVNode\": () => /* binding */ cloneVNode,\n/* harmony export */   \"computed\": () => /* binding */ computed,\n/* harmony export */   \"createBlock\": () => /* binding */ createBlock,\n/* harmony export */   \"createCommentVNode\": () => /* binding */ createCommentVNode,\n/* harmony export */   \"createHydrationRenderer\": () => /* binding */ createHydrationRenderer,\n/* harmony export */   \"createRenderer\": () => /* binding */ createRenderer,\n/* harmony export */   \"createSlots\": () => /* binding */ createSlots,\n/* harmony export */   \"createStaticVNode\": () => /* binding */ createStaticVNode,\n/* harmony export */   \"createTextVNode\": () => /* binding */ createTextVNode,\n/* harmony export */   \"createVNode\": () => /* binding */ createVNode,\n/* harmony export */   \"defineAsyncComponent\": () => /* binding */ defineAsyncComponent,\n/* harmony export */   \"defineComponent\": () => /* binding */ defineComponent,\n/* harmony export */   \"defineEmit\": () => /* binding */ defineEmit,\n/* harmony export */   \"defineProps\": () => /* binding */ defineProps,\n/* harmony export */   \"devtools\": () => /* binding */ devtools,\n/* harmony export */   \"getCurrentInstance\": () => /* binding */ getCurrentInstance,\n/* harmony export */   \"getTransitionRawChildren\": () => /* binding */ getTransitionRawChildren,\n/* harmony export */   \"h\": () => /* binding */ h,\n/* harmony export */   \"handleError\": () => /* binding */ handleError,\n/* harmony export */   \"initCustomFormatter\": () => /* binding */ initCustomFormatter,\n/* harmony export */   \"inject\": () => /* binding */ inject,\n/* harmony export */   \"isVNode\": () => /* binding */ isVNode,\n/* harmony export */   \"mergeProps\": () => /* binding */ mergeProps,\n/* harmony export */   \"nextTick\": () => /* binding */ nextTick,\n/* harmony export */   \"onActivated\": () => /* binding */ onActivated,\n/* harmony export */   \"onBeforeMount\": () => /* binding */ onBeforeMount,\n/* harmony export */   \"onBeforeUnmount\": () => /* binding */ onBeforeUnmount,\n/* harmony export */   \"onBeforeUpdate\": () => /* binding */ onBeforeUpdate,\n/* harmony export */   \"onDeactivated\": () => /* binding */ onDeactivated,\n/* harmony export */   \"onErrorCaptured\": () => /* binding */ onErrorCaptured,\n/* harmony export */   \"onMounted\": () => /* binding */ onMounted,\n/* harmony export */   \"onRenderTracked\": () => /* binding */ onRenderTracked,\n/* harmony export */   \"onRenderTriggered\": () => /* binding */ onRenderTriggered,\n/* harmony export */   \"onUnmounted\": () => /* binding */ onUnmounted,\n/* harmony export */   \"onUpdated\": () => /* binding */ onUpdated,\n/* harmony export */   \"openBlock\": () => /* binding */ openBlock,\n/* harmony export */   \"popScopeId\": () => /* binding */ popScopeId,\n/* harmony export */   \"provide\": () => /* binding */ provide,\n/* harmony export */   \"pushScopeId\": () => /* binding */ pushScopeId,\n/* harmony export */   \"queuePostFlushCb\": () => /* binding */ queuePostFlushCb,\n/* harmony export */   \"registerRuntimeCompiler\": () => /* binding */ registerRuntimeCompiler,\n/* harmony export */   \"renderList\": () => /* binding */ renderList,\n/* harmony export */   \"renderSlot\": () => /* binding */ renderSlot,\n/* harmony export */   \"resolveComponent\": () => /* binding */ resolveComponent,\n/* harmony export */   \"resolveDirective\": () => /* binding */ resolveDirective,\n/* harmony export */   \"resolveDynamicComponent\": () => /* binding */ resolveDynamicComponent,\n/* harmony export */   \"resolveTransitionHooks\": () => /* binding */ resolveTransitionHooks,\n/* harmony export */   \"setBlockTracking\": () => /* binding */ setBlockTracking,\n/* harmony export */   \"setDevtoolsHook\": () => /* binding */ setDevtoolsHook,\n/* harmony export */   \"setTransitionHooks\": () => /* binding */ setTransitionHooks,\n/* harmony export */   \"ssrContextKey\": () => /* binding */ ssrContextKey,\n/* harmony export */   \"ssrUtils\": () => /* binding */ ssrUtils,\n/* harmony export */   \"toHandlers\": () => /* binding */ toHandlers,\n/* harmony export */   \"transformVNodeArgs\": () => /* binding */ transformVNodeArgs,\n/* harmony export */   \"useContext\": () => /* binding */ useContext,\n/* harmony export */   \"useSSRContext\": () => /* binding */ useSSRContext,\n/* harmony export */   \"useTransitionState\": () => /* binding */ useTransitionState,\n/* harmony export */   \"version\": () => /* binding */ version,\n/* harmony export */   \"warn\": () => /* binding */ warn,\n/* harmony export */   \"watch\": () => /* binding */ watch,\n/* harmony export */   \"watchEffect\": () => /* binding */ watchEffect,\n/* harmony export */   \"withCtx\": () => /* binding */ withCtx,\n/* harmony export */   \"withDirectives\": () => /* binding */ withDirectives,\n/* harmony export */   \"withScopeId\": () => /* binding */ withScopeId\n/* harmony export */ });\n/* harmony import */ var _vue_reactivity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vue/reactivity */ \"./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js\");\n/* harmony import */ var _vue_shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vue/shared */ \"./node_modules/@vue/shared/dist/shared.esm-bundler.js\");\n\n\n\n\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.pauseTracking)();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.resetTracking)();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isString)(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if ((0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.isRef)(value)) {\r\n        value = formatProp(key, (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.toRaw)(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.toRaw)(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isPromise)(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = ( true) ? ErrorTypeStrings[type] : 0;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    if ((true)) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else {}\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        queue.push(job);\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > -1) {\r\n        queue.splice(i, 1);\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((true)) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((true)) {\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex]);\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((true)) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((true)) {\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex]);\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((true)) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job) {\r\n                if ((true)) {\r\n                    checkRecursiveUpdates(seen, job);\r\n                }\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length || pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            throw new Error(`Maximum recursive updates exceeded. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif (true) {\r\n    const globalObject = typeof __webpack_require__.g !== 'undefined'\r\n        ? __webpack_require__.g\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id, instance.type);\r\n        record = map.get(id);\r\n    }\r\n    record.instances.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.delete(instance);\r\n}\r\nfunction createRecord(id, component) {\r\n    if (!component) {\r\n        warn(`HMR API usage is out of date.\\n` +\r\n            `Please upgrade vue-loader/vite/rollup-plugin-vue or other relevant ` +\r\n            `depdendency that handles Vue SFC compilation.`);\r\n        component = {};\r\n    }\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, {\r\n        component: isClassComponent(component) ? component.__vccOpts : component,\r\n        instances: new Set()\r\n    });\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    if (newRender)\r\n        record.component.render = newRender;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record.instances).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    const { component, instances } = record;\r\n    if (!hmrDirtyComponents.has(component)) {\r\n        // 1. Update existing comp definition to match new one\r\n        newComp = isClassComponent(newComp) ? newComp.__vccOpts : newComp;\r\n        (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.extend)(component, newComp);\r\n        for (const key in component) {\r\n            if (!(key in newComp)) {\r\n                delete component[key];\r\n            }\r\n        }\r\n        // 2. Mark component dirty. This forces the renderer to replace the component\r\n        // on patch.\r\n        hmrDirtyComponents.add(component);\r\n        // 3. Make sure to unmark the component after the reload.\r\n        queuePostFlushCb(() => {\r\n            hmrDirtyComponents.delete(component);\r\n        });\r\n    }\r\n    Array.from(instances).forEach(instance => {\r\n        if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet devtools;\r\nfunction setDevtoolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    // TODO queue if devtools is undefined\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = /*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nfunction emit(instance, event, ...rawArgs) {\r\n    const props = instance.vnode.props || _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ;\r\n    if ((true)) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions)) {\r\n                if (!propsOptions || !((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.toHandlerKey)(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"${(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.toHandlerKey)(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(validator)) {\r\n                    const isValid = validator(...rawArgs);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        else if (number) {\r\n            args = rawArgs.map(_vue_shared__WEBPACK_IMPORTED_MODULE_1__.toNumber);\r\n        }\r\n    }\r\n    if (true) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    if ((true)) {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.toHandlerKey)(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hyphenate)(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    // convert handler name to camelCase. See issue #2249\r\n    let handlerName = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.toHandlerKey)((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.camelize)(event));\r\n    let handler = props[handlerName];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handlerName = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.toHandlerKey)((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hyphenate)(event));\r\n        handler = props[handlerName];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            (instance.emitted = {})[handlerName] = true;\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__emits !== undefined) {\r\n        return comp.__emits;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(comp)) {\r\n        const extendEmits = (raw) => {\r\n            hasExtends = true;\r\n            (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.extend)(normalized, normalizeEmitsOptions(raw, appContext, true));\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__emits = null);\r\n    }\r\n    if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.extend)(normalized, raw);\r\n    }\r\n    return (comp.__emits = normalized);\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isOn)(key)) {\r\n        return false;\r\n    }\r\n    key = key.replace(/Once$/, '');\r\n    return ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(options, key[2].toLowerCase() + key.slice(3)) ||\r\n        (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(options, key.slice(2)));\r\n}\n\n// mark the current rendering instance for asset resolution (e.g.\r\n// resolveComponent, resolveDirective) during render\r\nlet currentRenderingInstance = null;\r\nfunction setCurrentRenderingInstance(instance) {\r\n    currentRenderingInstance = instance;\r\n}\r\n// dev only flag to track whether $attrs was used during render.\r\n// If $attrs was used during render then the warning for failed attrs\r\n// fallthrough can be suppressed.\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx } = instance;\r\n    let result;\r\n    currentRenderingInstance = instance;\r\n    if ((true)) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        let fallthroughAttrs;\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if (( true) && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, ( true)\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : 0)\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n        // attr merging\r\n        // in dev mode, comments are preserved, and it's possible for a template\r\n        // to have comments along side the root element which makes it a fragment\r\n        let root = result;\r\n        let setRoot = undefined;\r\n        if ((true)) {\r\n            ;\r\n            [root, setRoot] = getChildRoot(result);\r\n        }\r\n        if (Component.inheritAttrs !== false && fallthroughAttrs) {\r\n            const keys = Object.keys(fallthroughAttrs);\r\n            const { shapeFlag } = root;\r\n            if (keys.length) {\r\n                if (shapeFlag & 1 /* ELEMENT */ ||\r\n                    shapeFlag & 6 /* COMPONENT */) {\r\n                    if (propsOptions && keys.some(_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isModelListener)) {\r\n                        // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                        // prop, it indicates this component expects to handle v-model and\r\n                        // it should not fallthrough.\r\n                        // related: #1543, #1643, #1989\r\n                        fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                    }\r\n                    root = cloneVNode(root, fallthroughAttrs);\r\n                }\r\n                else if (( true) && !accessedAttrs && root.type !== Comment) {\r\n                    const allAttrs = Object.keys(attrs);\r\n                    const eventAttrs = [];\r\n                    const extraAttrs = [];\r\n                    for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                        const key = allAttrs[i];\r\n                        if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isOn)(key)) {\r\n                            // ignore v-model handlers when they fail to fallthrough\r\n                            if (!(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isModelListener)(key)) {\r\n                                // remove `on`, lowercase first letter to reflect event casing\r\n                                // accurately\r\n                                eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                            }\r\n                        }\r\n                        else {\r\n                            extraAttrs.push(key);\r\n                        }\r\n                    }\r\n                    if (extraAttrs.length) {\r\n                        warn(`Extraneous non-props attributes (` +\r\n                            `${extraAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes.`);\r\n                    }\r\n                    if (eventAttrs.length) {\r\n                        warn(`Extraneous non-emits event listeners (` +\r\n                            `${eventAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes. ` +\r\n                            `If the listener is intended to be a component custom event listener only, ` +\r\n                            `declare it using the \"emits\" option.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // inherit directives\r\n        if (vnode.dirs) {\r\n            if (( true) && !isElementRoot(root)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition) {\r\n            if (( true) && !isElementRoot(root)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            root.transition = vnode.transition;\r\n        }\r\n        if (( true) && setRoot) {\r\n            setRoot(root);\r\n        }\r\n        else {\r\n            result = root;\r\n        }\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    currentRenderingInstance = null;\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    if (vnode.type !== Fragment) {\r\n        return [vnode, undefined];\r\n    }\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicChildren) {\r\n            if (dynamicIndex > -1) {\r\n                dynamicChildren[dynamicIndex] = updatedRoot;\r\n            }\r\n            else if (updatedRoot.patchFlag > 0) {\r\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\r\n            }\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\n/**\r\n * dev only\r\n */\r\nfunction filterSingleRoot(children) {\r\n    const filtered = children.filter(child => {\r\n        return !(isVNode(child) &&\r\n            child.type === Comment &&\r\n            child.children !== 'v-if');\r\n    });\r\n    return filtered.length === 1 && isVNode(filtered[0]) ? filtered[0] : null;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isOn)(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isModelListener)(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if (( true) && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag >= 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = ( SuspenseImpl\r\n    );\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            const onPending = n2.props && n2.props.onPending;\r\n            if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(onPending)) {\r\n                onPending();\r\n            }\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ( true && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.toNumber)(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            if ((true)) {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            const onResolve = vnode.props && vnode.props.onResolve;\r\n            if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(onResolve)) {\r\n                onResolve();\r\n            }\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            const onFallback = vnode.props && vnode.props.onFallback;\r\n            if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(onFallback)) {\r\n                onFallback();\r\n            }\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            suspense.isInFallback = true;\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            suspense.deps++;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                suspense.deps--;\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((true)) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((true)) {\r\n                    popWarningContext();\r\n                }\r\n                if (suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    let content;\r\n    let fallback;\r\n    if (shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        content = normalizeSuspenseSlot(children.default);\r\n        fallback = normalizeSuspenseSlot(children.fallback);\r\n    }\r\n    else {\r\n        content = normalizeSuspenseSlot(children);\r\n        fallback = normalizeVNode(null);\r\n    }\r\n    return {\r\n        content,\r\n        fallback\r\n    };\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(s)) {\r\n        s = s();\r\n    }\r\n    if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if (( true) && !singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    return normalizeVNode(s);\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nlet isRenderingCompiledSlot = 0;\r\nconst setCompiledSlotRendering = (n) => (isRenderingCompiledSlot += n);\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback) {\r\n    let slot = slots[name];\r\n    if (( true) && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    isRenderingCompiledSlot++;\r\n    const rendered = (openBlock(),\r\n        createBlock(Fragment, { key: props.key }, slot ? slot(props) : fallback ? fallback() : [], slots._ === 1 /* STABLE */\r\n            ? 64 /* STABLE_FRAGMENT */\r\n            : -2 /* BAIL */));\r\n    isRenderingCompiledSlot--;\r\n    return rendered;\r\n}\n\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance) {\r\n    if (!ctx)\r\n        return fn;\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we need to push a null block to\r\n        // avoid that. This isn't necessary if rendering a compiled `<slot>`.\r\n        if (!isRenderingCompiledSlot) {\r\n            openBlock(true /* null block that disables tracking */);\r\n        }\r\n        const owner = currentRenderingInstance;\r\n        setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(owner);\r\n        if (!isRenderingCompiledSlot) {\r\n            closeBlock();\r\n        }\r\n        return res;\r\n    };\r\n    renderFnWithContext._c = true;\r\n    return renderFnWithContext;\r\n}\n\n// SFC scoped style ID management.\r\nlet currentScopeId = null;\r\nconst scopeIdStack = [];\r\n/**\r\n * @private\r\n */\r\nfunction pushScopeId(id) {\r\n    scopeIdStack.push((currentScopeId = id));\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    scopeIdStack.pop();\r\n    currentScopeId = scopeIdStack[scopeIdStack.length - 1] || null;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction withScopeId(id) {\r\n    return ((fn) => withCtx(function () {\r\n        pushScopeId(id);\r\n        const res = fn.apply(this, arguments);\r\n        popScopeId();\r\n        return res;\r\n    }));\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.def)(attrs, InternalObjectKey, 1);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // validation\r\n    if ((true)) {\r\n        validateProps(props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.shallowReactive)(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.toRaw)(props);\r\n    const [options] = instance.propsOptions;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !(( true) &&\r\n        (instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                const key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(attrs, key)) {\r\n                        attrs[key] = value;\r\n                    }\r\n                    else {\r\n                        const camelizedKey = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.camelize)(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    attrs[key] = value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        setFullProps(instance, rawProps, props, attrs);\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hyphenate)(key)) === key || !(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawProps || _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ, key, undefined, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(rawProps, key)) {\r\n                    delete attrs[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.trigger)(instance, \"set\" /* SET */, '$attrs');\r\n    if (( true) && rawProps) {\r\n        validateProps(props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    if (rawProps) {\r\n        for (const key in rawProps) {\r\n            const value = rawProps[key];\r\n            // key, ref are reserved and never passed down\r\n            if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isReservedProp)(key)) {\r\n                continue;\r\n            }\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(options, (camelKey = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.camelize)(key)))) {\r\n                props[camelKey] = value;\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                // Any non-declared (either as a prop or an emitted event) props are put\r\n                // into a separate `attrs` object for spreading. Make sure to preserve\r\n                // original key casing\r\n                attrs[key] = value;\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.toRaw)(props);\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, rawCurrentProps[key], instance);\r\n        }\r\n    }\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(defaultValue)) {\r\n                setCurrentInstance(instance);\r\n                value = defaultValue(props);\r\n                setCurrentInstance(null);\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (!(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(props, key) && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hyphenate)(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__props) {\r\n        return comp.__props;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.extend)(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__props = _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_ARR);\r\n    }\r\n    if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if (( true) && !(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isString)(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.camelize)(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if (( true) && !(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isObject)(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.camelize)(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(opt) || (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (comp.__props = [normalized, needCastKeys]);\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((true)) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(expectedTypes)) {\r\n        for (let i = 0, len = expectedTypes.length; i < len; i++) {\r\n            if (isSameType(expectedTypes[i], type)) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n    else if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(props, instance) {\r\n    const rawValues = (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.toRaw)(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, rawValues[key], opt, !(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(rawValues, key));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.makeMap)('String,Number,Boolean,Function,Symbol');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isObject)(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(_vue_shared__WEBPACK_IMPORTED_MODULE_1__.capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.toRawType)(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.pauseTracking)();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.resetTracking)();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((true)) {\r\n        const apiName = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.toHandlerKey)(ErrorTypeStrings[type].replace(/ hook$/, ''));\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            ( ` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR\r\n!isInSSRComponentSetup && injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nconst onErrorCaptured = (hook, target = currentInstance) => {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n};\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if (( true) && !(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ, instance = currentInstance) {\r\n    if (( true) && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    let getter;\r\n    let forceTrigger = false;\r\n    if ((0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.isRef)(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = !!source._shallow;\r\n    }\r\n    else if ((0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.isReactive)(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(source)) {\r\n        getter = () => source.map(s => {\r\n            if ((0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.isRef)(s)) {\r\n                return s.value;\r\n            }\r\n            else if ((0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.isReactive)(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */);\r\n            }\r\n            else {\r\n                ( true) && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = _vue_shared__WEBPACK_IMPORTED_MODULE_1__.NOOP;\r\n        ( true) && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    const onInvalidate = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(source) ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!runner.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = runner();\r\n            if (deep || forceTrigger || (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasChanged)(newValue, oldValue)) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            runner();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job;\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    const runner = (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.effect)(getter, {\r\n        lazy: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner);\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(runner, instance && instance.suspense);\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.stop)(runner);\r\n        if (instance) {\r\n            (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.remove)(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, cb, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isString)(source)\r\n        ? () => publicThis[source]\r\n        : source.bind(publicThis);\r\n    return doWatch(getter, cb.bind(publicThis), options, this);\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isObject)(value) || seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if ((0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.isRef)(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isSet)(value) || (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isMap)(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if (( true) && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.toRaw)(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if (( true) && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out') {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-top\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    inheritRef: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        const instance = getCurrentInstance();\r\n        const parentSuspense = instance.suspense;\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.invokeArrayFns)(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.invokeArrayFns)(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post' });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                if ((true)) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            const name = getName(comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return rawVNode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction getName(comp) {\r\n    return comp.displayName || comp.name;\r\n}\r\nfunction matches(pattern, name) {\r\n    if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isString)(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.remove)(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => withCtx((props) => {\r\n    if (( true) && currentInstance) {\r\n        warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n            `this will not track dependencies used in the slot. ` +\r\n            `Invoke the slot function inside the render function instead.`);\r\n    }\r\n    return normalizeSlotValue(rawSlot(props));\r\n}, ctx);\r\nconst normalizeObjectSlots = (rawSlots, slots) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((true)) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if (( true) && !isKeepAlive(instance.vnode)) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            instance.slots = children;\r\n            // make compiler marker non-enumerable\r\n            (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.def)(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.def)(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if (( true) && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.extend)(slots, children);\r\n            }\r\n            else if (type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.extend)(slots, children);\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.makeMap)('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        ( true) && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ] = directives[i];\r\n        if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        const hook = binding.dir[name];\r\n        if (hook) {\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: _vue_shared__WEBPACK_IMPORTED_MODULE_1__.NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            isCustomElement: _vue_shared__WEBPACK_IMPORTED_MODULE_1__.NO,\r\n            errorHandler: undefined,\r\n            warnHandler: undefined\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null)\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isObject)(rootProps)) {\r\n            ( true) && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((true)) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    ( true) && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((true)) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                        // global mixin with props/emits de-optimizes props/emits\r\n                        // normalization caching.\r\n                        if (mixin.props || mixin.emits) {\r\n                            context.deopt = true;\r\n                        }\r\n                    }\r\n                    else if ((true)) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((true)) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((true)) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if (( true) && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((true)) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if (( true) && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((true)) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if (true) {\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((true)) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if (true) {\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                }\r\n                else if ((true)) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if (( true) && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if (( true) && !container.hasChildNodes()) {\r\n            warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        ( true) &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type !== node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    const container = parentNode(node);\r\n                    const hydrateComponent = () => {\r\n                        mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    };\r\n                    // async component\r\n                    const loadAsync = vnode.type.__asyncLoader;\r\n                    if (loadAsync) {\r\n                        loadAsync().then(hydrateComponent);\r\n                    }\r\n                    else {\r\n                        hydrateComponent();\r\n                    }\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((true)) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, null, parentComponent, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // skip props & children if this is hoisted static nodes\r\n        if (patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (!optimized ||\r\n                    (patchFlag & 16 /* FULL_PROPS */ ||\r\n                        patchFlag & 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if (!(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isReservedProp)(key) && (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isOn)(key)) {\r\n                            patchProp(el, key, null, props[key]);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if (( true) && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    ( true) &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, optimized);\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if (( true) && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container));\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, optimized) => {\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, isFragment) => {\r\n        hasMismatch = true;\r\n        ( true) &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container));\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    let needWarn = false;\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        needWarn = true;\r\n        (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.getGlobalThis)().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        needWarn = true;\r\n        (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.getGlobalThis)().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if (( true) && needWarn) {\r\n        console.warn(`You are running the esm-bundler build of Vue. It is recommended to ` +\r\n            `configure your bundler to explicitly replace feature flag globals ` +\r\n            `with boolean literals to get proper tree-shaking in the final bundle. ` +\r\n            `See http://link.vuejs.org/feature-flags for more details.`);\r\n    }\r\n}\n\nconst prodEffectOptions = {\r\n    scheduler: queueJob,\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    allowRecurse: true\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        allowRecurse: true,\r\n        onTrack: instance.rtc ? e => (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.invokeArrayFns)(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.invokeArrayFns)(instance.rtg, e) : void 0\r\n    };\r\n}\r\nconst queuePostRenderEffect =  queueEffectWithSuspense\r\n    ;\r\nconst setRef = (rawRef, oldRawRef, parentComponent, parentSuspense, vnode) => {\r\n    if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(oldRawRef) ? oldRawRef[i] : oldRawRef), parentComponent, parentSuspense, vnode));\r\n        return;\r\n    }\r\n    let value;\r\n    if (!vnode) {\r\n        value = null;\r\n    }\r\n    else {\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            value = vnode.component.exposed || vnode.component.proxy;\r\n        }\r\n        else {\r\n            value = vnode.el;\r\n        }\r\n    }\r\n    const { i: owner, r: ref } = rawRef;\r\n    if (( true) && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isString)(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if ((0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.isRef)(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isString)(ref)) {\r\n        const doSet = () => {\r\n            refs[ref] = value;\r\n            if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        };\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if ((0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.isRef)(ref)) {\r\n        const doSet = () => {\r\n            ref.value = value;\r\n        };\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(ref)) {\r\n        callWithErrorHandling(ref, parentComponent, 12 /* FUNCTION_REF */, [\r\n            value,\r\n            refs\r\n        ]);\r\n    }\r\n    else if ((true)) {\r\n        warn('Invalid template ref type:', value, `(${typeof value})`);\r\n    }\r\n};\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, forcePatchProp: hostForcePatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = _vue_shared__WEBPACK_IMPORTED_MODULE_1__.NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, optimized = false) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((true)) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ((true)) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentComponent, parentSuspense, n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const moveStaticNode = (vnode, container, anchor) => {\r\n        let cur = vnode.el;\r\n        const end = vnode.anchor;\r\n        while (cur && cur !== end) {\r\n            const next = hostNextSibling(cur);\r\n            hostInsert(cur, container, anchor);\r\n            cur = next;\r\n        }\r\n        hostInsert(end, container, anchor);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const removeStaticNode = (vnode) => {\r\n        let cur = vnode.el;\r\n        while (cur && cur !== vnode.anchor) {\r\n            const next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(vnode.anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, scopeId, patchFlag, dirs } = vnode;\r\n        if (false /* HOISTED */) {}\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', optimized || !!vnode.dynamicChildren);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (!(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isReservedProp)(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, scopeId, vnode, parentComponent);\r\n        }\r\n        if (true) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, scopeId, vnode, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (parentComponent) {\r\n            const treeOwnerId = parentComponent.type.__scopeId;\r\n            // vnode's own scopeId and the current patched component's scopeId is\r\n            // different - this is a slot content node.\r\n            if (treeOwnerId && treeOwnerId !== scopeId) {\r\n                hostSetScopeId(el, treeOwnerId + '-s');\r\n            }\r\n            let subTree = parentComponent.subTree;\r\n            if (( true) && subTree.type === Fragment) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                setScopeId(el, parentComponent.vnode.scopeId, parentComponent.vnode, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ;\r\n        const newProps = n2.props || _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ( true && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (next !== prev ||\r\n                            (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG);\r\n            if ( true &&\r\n                parentComponent &&\r\n                parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // - In the case of a Fragment, we need to provide the actual parent\r\n            // of the Fragment itself so it can move its children.\r\n            oldVNode.type === Fragment ||\r\n                // - In the case of different nodes, there is going to be a replacement\r\n                // which also requires the correct parent container\r\n                !isSameVNodeType(oldVNode, newVNode) ||\r\n                // - In the case of a component, it could contain anything.\r\n                oldVNode.shapeFlag & 6 /* COMPONENT */ ||\r\n                oldVNode.shapeFlag & 64 /* TELEPORT */\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isReservedProp)(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev ||\r\n                    (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isReservedProp)(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren } = n2;\r\n        if (patchFlag > 0) {\r\n            optimized = true;\r\n        }\r\n        if (( true) && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG);\r\n                if (( true) && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ( true && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((true)) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        if ((true)) {\r\n            startMeasure(instance, `init`);\r\n        }\r\n        setupComponent(instance);\r\n        if ((true)) {\r\n            endMeasure(instance, `init`);\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if ( instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((true)) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (\r\n                instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((true)) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((true)) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect runner.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        // create reactive effect for rendering\r\n        instance.update = (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.effect)(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.invokeArrayFns)(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                // render\r\n                if ((true)) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                if ((true)) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                if (el && hydrateNode) {\r\n                    if ((true)) {\r\n                        startMeasure(instance, `hydrate`);\r\n                    }\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    hydrateNode(initialVNode.el, subTree, instance, parentSuspense);\r\n                    if ((true)) {\r\n                        endMeasure(instance, `hydrate`);\r\n                    }\r\n                }\r\n                else {\r\n                    if ((true)) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((true)) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if ((vnodeHook = props && props.onVnodeMounted)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                    }, parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                const { a } = instance;\r\n                if (a &&\r\n                    initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    queuePostRenderEffect(a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((true)) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.invokeArrayFns)(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                // render\r\n                if ((true)) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((true)) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                if ((true)) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((true)) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                    }, parentSuspense);\r\n                }\r\n                if (true) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((true)) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        }, ( true) ? createDevEffectOptions(instance) : 0);\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children);\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        c1 = c1 || _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_ARR;\r\n        c2 = c2 || _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if (( true) && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if ( shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        // static node move can only happen when force updating HMR\r\n        if (( true) && type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, null, parentComponent, parentSuspense, null);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        let vnodeHook;\r\n        if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                (patchFlag & 128 /* KEYED_FRAGMENT */ ||\r\n                    patchFlag & 256 /* UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            // an unmounted teleport should always remove its children if not disabled\r\n            if (shapeFlag & 64 /* TELEPORT */ &&\r\n                (doRemove || !isTeleportDisabled(vnode.props))) {\r\n                vnode.type.remove(vnode, internals);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if (( true) && type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ( true && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.invokeArrayFns)(bum);\r\n        }\r\n        if (effects) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.stop)(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.stop)(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (\r\n            parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if (true) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always moved so that need inherit el form previous nodes\r\n * to ensure correct moved position.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(ch1) && (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if (( true) && c2.type === Comment && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isString)(targetSelector)) {\r\n        if (!select) {\r\n            ( true) &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                ( true) &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if (( true) && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        const { shapeFlag, children } = n2;\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = ( true)\r\n                ? createComment('teleport start')\r\n                : 0);\r\n            const mainAnchor = (n2.anchor = ( true)\r\n                ? createComment('teleport end')\r\n                : 0);\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n            }\r\n            else if (( true) && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            if (n2.dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, n2.dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((true)) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, { r: remove, o: { remove: hostRemove } }) {\r\n        const { shapeFlag, children, anchor } = vnode;\r\n        hostRemove(anchor);\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                remove(children[i]);\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name) {\r\n    return resolveAsset(COMPONENTS, name) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isString)(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            const selfName = Component.displayName || Component.name;\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.camelize)(name) ||\r\n                    selfName === (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.capitalize)((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.camelize)(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first for components with mixin or extends.\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if (( true) && warnMissing && !res) {\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((true)) {\r\n        warn(`resolve${(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.capitalize)(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.camelize)(name)] ||\r\n            registry[(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.capitalize)((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.camelize)(name))]));\r\n}\n\nconst Fragment = Symbol(( true) ? 'Fragment' : 0);\r\nconst Text = Symbol(( true) ? 'Text' : 0);\r\nconst Comment = Symbol(( true) ? 'Comment' : 0);\r\nconst Static = Symbol(( true) ? 'Static' : 0);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet shouldTrack = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    shouldTrack += value;\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren = currentBlock || _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_ARR;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (shouldTrack > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if (( true) &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => {\r\n    return (ref != null\r\n        ? (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(ref)\r\n            ? ref\r\n            : { i: currentRenderingInstance, r: ref }\r\n        : null);\r\n};\r\nconst createVNode = (( true)\r\n    ? createVNodeWithArgsTransform\r\n    : 0);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if (( true) && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if ((0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.isProxy)(props) || InternalObjectKey in props) {\r\n            props = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.extend)({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass && !(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isString)(klass)) {\r\n            props.class = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.normalizeClass)(klass);\r\n        }\r\n        if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isObject)(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if ((0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.isProxy)(style) && !(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(style)) {\r\n                style = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.extend)({}, style);\r\n            }\r\n            props.style = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.normalizeStyle)(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isString)(type)\r\n        ? 1 /* ELEMENT */\r\n        :  isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isObject)(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if (( true) && shapeFlag & 4 /* STATEFUL_COMPONENT */ && (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.isProxy)(type)) {\r\n        type = (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.toRaw)(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    // validate key\r\n    if (( true) && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    normalizeChildren(vnode, children);\r\n    // normalize suspense children\r\n    if ( shapeFlag & 128 /* SUSPENSE */) {\r\n        const { content, fallback } = normalizeSuspenseChildren(vnode);\r\n        vnode.ssContent = content;\r\n        vnode.ssFallback = fallback;\r\n    }\r\n    if (shouldTrack > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    return {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        children: vnode.children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: perserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, child);\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return child.el === null ? child : cloneVNode(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && setCompiledSlotRendering(1);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && setCompiledSlotRendering(-1);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.vnode.patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n                else {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.extend)({}, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.normalizeClass)([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.normalizeStyle)([ret.style, toMerge.style]);\r\n            }\r\n            else if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isOn)(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, toMerge[key])\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((true)) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the intance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(defaultValue)\r\n                ? defaultValue()\r\n                : defaultValue;\r\n        }\r\n        else if ((true)) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((true)) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet isInBeforeCreate = false;\r\nfunction applyOptions(instance, options, deferredData = [], deferredWatch = [], deferredProvide = [], asMixin = false) {\r\n    const { \r\n    // composition\r\n    mixins, extends: extendsOptions, \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // assets\r\n    components, directives, \r\n    // lifecycle\r\n    beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, \r\n    // public API\r\n    expose } = options;\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (asMixin && render && instance.render === _vue_shared__WEBPACK_IMPORTED_MODULE_1__.NOOP) {\r\n        instance.render = render;\r\n    }\r\n    // applyOptions is called non-as-mixin once per instance\r\n    if (!asMixin) {\r\n        isInBeforeCreate = true;\r\n        callSyncHook('beforeCreate', \"bc\" /* BEFORE_CREATE */, options, instance, globalMixins);\r\n        isInBeforeCreate = false;\r\n        // global mixins are applied first\r\n        applyMixins(instance, globalMixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    // extending a base component...\r\n    if (extendsOptions) {\r\n        applyOptions(instance, extendsOptions, deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n    // local mixins\r\n    if (mixins) {\r\n        applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    const checkDuplicateProperties = ( true) ? createDuplicateChecker() : 0;\r\n    if ((true)) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(injectOptions)) {\r\n            for (let i = 0; i < injectOptions.length; i++) {\r\n                const key = injectOptions[i];\r\n                ctx[key] = inject(key);\r\n                if ((true)) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (const key in injectOptions) {\r\n                const opt = injectOptions[key];\r\n                if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isObject)(opt)) {\r\n                    ctx[key] = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n                }\r\n                else {\r\n                    ctx[key] = inject(opt);\r\n                }\r\n                if ((true)) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(methodHandler)) {\r\n                ctx[key] = methodHandler.bind(publicThis);\r\n                if ((true)) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((true)) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (!asMixin) {\r\n        if (deferredData.length) {\r\n            deferredData.forEach(dataFn => resolveData(instance, dataFn, publicThis));\r\n        }\r\n        if (dataOptions) {\r\n            resolveData(instance, dataOptions, publicThis);\r\n        }\r\n        if ((true)) {\r\n            const rawData = (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.toRaw)(instance.data);\r\n            for (const key in rawData) {\r\n                checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                // expose data on ctx during dev\r\n                if (key[0] !== '$' && key[0] !== '_') {\r\n                    Object.defineProperty(ctx, key, {\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        get: () => rawData[key],\r\n                        set: _vue_shared__WEBPACK_IMPORTED_MODULE_1__.NOOP\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (dataOptions) {\r\n        deferredData.push(dataOptions);\r\n    }\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : _vue_shared__WEBPACK_IMPORTED_MODULE_1__.NOOP;\r\n            if (( true) && get === _vue_shared__WEBPACK_IMPORTED_MODULE_1__.NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(opt) && (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : ( true)\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : 0;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((true)) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        deferredWatch.push(watchOptions);\r\n    }\r\n    if (!asMixin && deferredWatch.length) {\r\n        deferredWatch.forEach(watchOptions => {\r\n            for (const key in watchOptions) {\r\n                createWatcher(watchOptions[key], ctx, publicThis, key);\r\n            }\r\n        });\r\n    }\r\n    if (provideOptions) {\r\n        deferredProvide.push(provideOptions);\r\n    }\r\n    if (!asMixin && deferredProvide.length) {\r\n        deferredProvide.forEach(provideOptions => {\r\n            const provides = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(provideOptions)\r\n                ? provideOptions.call(publicThis)\r\n                : provideOptions;\r\n            for (const key in provides) {\r\n                provide(key, provides[key]);\r\n            }\r\n        });\r\n    }\r\n    // asset options.\r\n    // To reduce memory usage, only components with mixins or extends will have\r\n    // resolved asset registry attached to instance.\r\n    if (asMixin) {\r\n        if (components) {\r\n            (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.extend)(instance.components ||\r\n                (instance.components = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.extend)({}, instance.type.components)), components);\r\n        }\r\n        if (directives) {\r\n            (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.extend)(instance.directives ||\r\n                (instance.directives = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.extend)({}, instance.type.directives)), directives);\r\n        }\r\n    }\r\n    // lifecycle options\r\n    if (!asMixin) {\r\n        callSyncHook('created', \"c\" /* CREATED */, options, instance, globalMixins);\r\n    }\r\n    if (beforeMount) {\r\n        onBeforeMount(beforeMount.bind(publicThis));\r\n    }\r\n    if (mounted) {\r\n        onMounted(mounted.bind(publicThis));\r\n    }\r\n    if (beforeUpdate) {\r\n        onBeforeUpdate(beforeUpdate.bind(publicThis));\r\n    }\r\n    if (updated) {\r\n        onUpdated(updated.bind(publicThis));\r\n    }\r\n    if (activated) {\r\n        onActivated(activated.bind(publicThis));\r\n    }\r\n    if (deactivated) {\r\n        onDeactivated(deactivated.bind(publicThis));\r\n    }\r\n    if (errorCaptured) {\r\n        onErrorCaptured(errorCaptured.bind(publicThis));\r\n    }\r\n    if (renderTracked) {\r\n        onRenderTracked(renderTracked.bind(publicThis));\r\n    }\r\n    if (renderTriggered) {\r\n        onRenderTriggered(renderTriggered.bind(publicThis));\r\n    }\r\n    if (( true) && beforeDestroy) {\r\n        warn(`\\`beforeDestroy\\` has been renamed to \\`beforeUnmount\\`.`);\r\n    }\r\n    if (beforeUnmount) {\r\n        onBeforeUnmount(beforeUnmount.bind(publicThis));\r\n    }\r\n    if (( true) && destroyed) {\r\n        warn(`\\`destroyed\\` has been renamed to \\`unmounted\\`.`);\r\n    }\r\n    if (unmounted) {\r\n        onUnmounted(unmounted.bind(publicThis));\r\n    }\r\n    if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(expose)) {\r\n        if (!asMixin) {\r\n            if (expose.length) {\r\n                const exposed = instance.exposed || (instance.exposed = (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.proxyRefs)({}));\r\n                expose.forEach(key => {\r\n                    exposed[key] = (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.toRef)(publicThis, key);\r\n                });\r\n            }\r\n            else if (!instance.exposed) {\r\n                instance.exposed = _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ;\r\n            }\r\n        }\r\n        else if ((true)) {\r\n            warn(`The \\`expose\\` option is ignored when used in mixins.`);\r\n        }\r\n    }\r\n}\r\nfunction callSyncHook(name, type, options, instance, globalMixins) {\r\n    callHookFromMixins(name, type, globalMixins, instance);\r\n    const { extends: base, mixins } = options;\r\n    if (base) {\r\n        callHookFromExtends(name, type, base, instance);\r\n    }\r\n    if (mixins) {\r\n        callHookFromMixins(name, type, mixins, instance);\r\n    }\r\n    const selfHook = options[name];\r\n    if (selfHook) {\r\n        callWithAsyncErrorHandling(selfHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction callHookFromExtends(name, type, base, instance) {\r\n    if (base.extends) {\r\n        callHookFromExtends(name, type, base.extends, instance);\r\n    }\r\n    const baseHook = base[name];\r\n    if (baseHook) {\r\n        callWithAsyncErrorHandling(baseHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction callHookFromMixins(name, type, mixins, instance) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        const chainedMixins = mixins[i].mixins;\r\n        if (chainedMixins) {\r\n            callHookFromMixins(name, type, chainedMixins, instance);\r\n        }\r\n        const fn = mixins[i][name];\r\n        if (fn) {\r\n            callWithAsyncErrorHandling(fn.bind(instance.proxy), instance, type);\r\n        }\r\n    }\r\n}\r\nfunction applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        applyOptions(instance, mixins[i], deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n}\r\nfunction resolveData(instance, dataFn, publicThis) {\r\n    if (( true) && !(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(dataFn)) {\r\n        warn(`The data option must be a function. ` +\r\n            `Plain object usage is no longer supported.`);\r\n    }\r\n    const data = dataFn.call(publicThis, publicThis);\r\n    if (( true) && (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isPromise)(data)) {\r\n        warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n            `intend to perform data fetching before component renders, use ` +\r\n            `async setup() + <Suspense>.`);\r\n    }\r\n    if (!(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isObject)(data)) {\r\n        ( true) && warn(`data() should return an object.`);\r\n    }\r\n    else if (instance.data === _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ) {\r\n        instance.data = (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.reactive)(data);\r\n    }\r\n    else {\r\n        // existing data: this is a mixin or extends.\r\n        (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.extend)(instance.data, data);\r\n    }\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isString)(raw)) {\r\n        const handler = ctx[raw];\r\n        if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((true)) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isObject)(raw)) {\r\n        if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((true)) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((true)) {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction resolveMergedOptions(instance) {\r\n    const raw = instance.type;\r\n    const { __merged, mixins, extends: extendsOptions } = raw;\r\n    if (__merged)\r\n        return __merged;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (!globalMixins.length && !mixins && !extendsOptions)\r\n        return raw;\r\n    const options = {};\r\n    globalMixins.forEach(m => mergeOptions(options, m, instance));\r\n    mergeOptions(options, raw, instance);\r\n    return (raw.__merged = options);\r\n}\r\nfunction mergeOptions(to, from, instance) {\r\n    const strats = instance.appContext.config.optionMergeStrategies;\r\n    const { mixins, extends: extendsOptions } = from;\r\n    extendsOptions && mergeOptions(to, extendsOptions, instance);\r\n    mixins &&\r\n        mixins.forEach((m) => mergeOptions(to, m, instance));\r\n    for (const key in from) {\r\n        if (strats && (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(strats, key)) {\r\n            to[key] = strats[key](to[key], from[key], instance.proxy, key);\r\n        }\r\n        else {\r\n            to[key] = from[key];\r\n        }\r\n    }\r\n}\n\nconst publicPropertiesMap = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.extend)(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => (( true) ? (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.shallowReadonly)(i.props) : 0),\r\n    $attrs: i => (( true) ? (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.shallowReadonly)(i.attrs) : 0),\r\n    $slots: i => (( true) ? (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.shallowReadonly)(i.slots) : 0),\r\n    $refs: i => (( true) ? (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.shallowReadonly)(i.refs) : 0),\r\n    $parent: i => i.parent && i.parent.proxy,\r\n    $root: i => i.root && i.root.proxy,\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy),\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : _vue_shared__WEBPACK_IMPORTED_MODULE_1__.NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // let @vue/reactivity know it should never observe Vue public instances.\r\n        if (key === \"__v_skip\" /* SKIP */) {\r\n            return true;\r\n        }\r\n        // for internal formatters to know that this is a Vue instance\r\n        if (( true) && key === '__isVue') {\r\n            return true;\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ && (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ && (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(normalizedProps, key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ && (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || !isInBeforeCreate) {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.track)(instance, \"get\" /* GET */, key);\r\n                ( true) && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ && (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(globalProperties, key))) {\r\n            return globalProperties[key];\r\n        }\r\n        else if (( true) &&\r\n            currentRenderingInstance &&\r\n            (!(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isString)(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ &&\r\n                (key[0] === '$' || key[0] === '_') &&\r\n                (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ && (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ && (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (key in instance.props) {\r\n            ( true) &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            ( true) &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if (( true) && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ && (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(data, key)) ||\r\n            (setupState !== _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ && (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(normalizedProps, key)) ||\r\n            (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(ctx, key) ||\r\n            (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(publicPropertiesMap, key) ||\r\n            (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif (true) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.extend)({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isGloballyWhitelisted)(key);\r\n        if (( true) && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: _vue_shared__WEBPACK_IMPORTED_MODULE_1__.NOOP\r\n        });\r\n    });\r\n    // expose global properties\r\n    const { globalProperties } = instance.appContext.config;\r\n    Object.keys(globalProperties).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => globalProperties[key],\r\n            set: _vue_shared__WEBPACK_IMPORTED_MODULE_1__.NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: _vue_shared__WEBPACK_IMPORTED_MODULE_1__.NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys((0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.toRaw)(setupState)).forEach(key => {\r\n        if (key[0] === '$' || key[0] === '_') {\r\n            warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                `which are reserved prefixes for Vue internals.`);\r\n            return;\r\n        }\r\n        Object.defineProperty(ctx, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => setupState[key],\r\n            set: _vue_shared__WEBPACK_IMPORTED_MODULE_1__.NOOP\r\n        });\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        exposed: null,\r\n        withProxy: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // state\r\n        ctx: _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ,\r\n        data: _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ,\r\n        props: _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ,\r\n        attrs: _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ,\r\n        slots: _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ,\r\n        refs: _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ,\r\n        setupState: _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null\r\n    };\r\n    if ((true)) {\r\n        instance.ctx = createRenderContext(instance);\r\n    }\r\n    else {}\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    if (true) {\r\n        devtoolsComponentAdded(instance);\r\n    }\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.makeMap)('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || _vue_shared__WEBPACK_IMPORTED_MODULE_1__.NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children, shapeFlag } = instance.vnode;\r\n    const isStateful = shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((true)) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\r\n    if ((true)) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.pauseTracking)();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [( true) ? (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.shallowReadonly)(instance.props) : 0, setupContext]);\r\n        (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.resetTracking)();\r\n        currentInstance = null;\r\n        if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isPromise)(setupResult)) {\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult.then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(setupResult)) {\r\n        // setup returned an inline render function\r\n        {\r\n            instance.render = setupResult;\r\n        }\r\n    }\r\n    else if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isObject)(setupResult)) {\r\n        if (( true) && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if (true) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.proxyRefs)(setupResult);\r\n        if ((true)) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if (( true) && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance);\r\n}\r\nlet compile;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}\r\nfunction finishComponentSetup(instance, isSSR) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        // could be set from setup()\r\n        if (compile && Component.template && !Component.render) {\r\n            if ((true)) {\r\n                startMeasure(instance, `compile`);\r\n            }\r\n            Component.render = compile(Component.template, {\r\n                isCustomElement: instance.appContext.config.isCustomElement,\r\n                delimiters: Component.delimiters\r\n            });\r\n            if ((true)) {\r\n                endMeasure(instance, `compile`);\r\n            }\r\n        }\r\n        instance.render = (Component.render || _vue_shared__WEBPACK_IMPORTED_MODULE_1__.NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (instance.render._rc) {\r\n            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__) {\r\n        currentInstance = instance;\r\n        applyOptions(instance, Component);\r\n        currentInstance = null;\r\n    }\r\n    // warn missing template/render\r\n    if (( true) && !Component.render && instance.render === _vue_shared__WEBPACK_IMPORTED_MODULE_1__.NOOP) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                ( ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nconst attrHandlers = {\r\n    get: (target, key) => {\r\n        if ((true)) {\r\n            markAttrsAccessed();\r\n        }\r\n        return target[key];\r\n    },\r\n    set: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    },\r\n    deleteProperty: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    }\r\n};\r\nfunction createSetupContext(instance) {\r\n    const expose = exposed => {\r\n        if (( true) && instance.exposed) {\r\n            warn(`expose() should be called only once per setup().`);\r\n        }\r\n        instance.exposed = (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.proxyRefs)(exposed);\r\n    };\r\n    if ((true)) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get props() {\r\n                return instance.props;\r\n            },\r\n            get attrs() {\r\n                return new Proxy(instance.attrs, attrHandlers);\r\n            },\r\n            get slots() {\r\n                return (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.shallowReadonly)(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            },\r\n            expose\r\n        });\r\n    }\r\n    else {}\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect) {\r\n    if (currentInstance) {\r\n        (currentInstance.effects || (currentInstance.effects = [])).push(effect);\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.vue$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(value) && '__vccOpts' in value;\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.computed)(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(options) ? { setup: options, name: options.name } : options;\r\n}\n\nfunction defineAsyncComponent(source) {\r\n    if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent: loadingComponent, errorComponent: errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest = loader()\r\n                .catch(err => {\r\n                err = err instanceof Error ? err : new Error(String(err));\r\n                if (userOnError) {\r\n                    return new Promise((resolve, reject) => {\r\n                        const userRetry = () => resolve(retry());\r\n                        const userFail = () => reject(err);\r\n                        userOnError(err, userRetry, userFail, retries + 1);\r\n                    });\r\n                }\r\n                else {\r\n                    throw err;\r\n                }\r\n            })\r\n                .then((comp) => {\r\n                if (thisRequest !== pendingRequest && pendingRequest) {\r\n                    return pendingRequest;\r\n                }\r\n                if (( true) && !comp) {\r\n                    warn(`Async component loader resolved to undefined. ` +\r\n                        `If you are using retry(), make sure to return its return value.`);\r\n                }\r\n                // interop module default\r\n                if (comp &&\r\n                    (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                    comp = comp.default;\r\n                }\r\n                if (( true) && comp && !(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isObject)(comp) && !(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(comp)) {\r\n                    throw new Error(`Invalid async component load result: ${comp}`);\r\n                }\r\n                resolvedComp = comp;\r\n                return comp;\r\n            })));\r\n    };\r\n    return defineComponent({\r\n        __asyncLoader: load,\r\n        name: 'AsyncComponentWrapper',\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if (( suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.ref)(false);\r\n            const error = (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.ref)();\r\n            const delayed = (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.ref)(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { props, children } }) {\r\n    return createVNode(comp, props, children);\r\n}\n\n// implementation\r\nfunction defineProps(props) {\r\n    if (( true) && props) {\r\n        warn(`defineProps() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\n// implementation\r\nfunction defineEmit(emitOptions) {\r\n    if (( true) && emitOptions) {\r\n        warn(`defineEmit() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\nfunction useContext() {\r\n    return getCurrentInstance().setupContext;\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isObject)(propsOrChildren) && !(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol(( true) ? `ssrContext` : 0);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSsrContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction initCustomFormatter() {\r\n    if (false) {}\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isObject)(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if ((0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.isRef)(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if ((0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.isReactive)(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${(0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.isReadonly)(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if ((0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.isReadonly)(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.toRaw)(instance.props)));\r\n        }\r\n        if (instance.setupState !== _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.toRaw)(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.extend)({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isObject)(v)) {\r\n            return ['object', { object: asRaw ? (0,_vue_reactivity__WEBPACK_IMPORTED_MODULE_0__.toRaw)(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if (((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(opts) && opts.includes(key)) ||\r\n            ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isObject)(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (v._shallow) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(source) || (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isString)(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if (( true) && !Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n            return [];\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isObject)(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if (( true) && !(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isObject)(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.toHandlerKey)(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.0.3\";\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = ( null);\n\n\n\n\n//# sourceURL=webpack://nathankim7.github.io/./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js?");

/***/ }),

/***/ "./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export BaseTransition [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .BaseTransition */
/*! export Comment [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .Comment */
/*! export Fragment [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .Fragment */
/*! export KeepAlive [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .KeepAlive */
/*! export Static [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .Static */
/*! export Suspense [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .Suspense */
/*! export Teleport [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .Teleport */
/*! export Text [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .Text */
/*! export Transition [provided] [no usage info] [missing usage info prevents renaming] */
/*! export TransitionGroup [provided] [no usage info] [missing usage info prevents renaming] */
/*! export callWithAsyncErrorHandling [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .callWithAsyncErrorHandling */
/*! export callWithErrorHandling [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .callWithErrorHandling */
/*! export camelize [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/shared/dist/shared.esm-bundler.js .camelize */
/*! export capitalize [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/shared/dist/shared.esm-bundler.js .capitalize */
/*! export cloneVNode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .cloneVNode */
/*! export computed [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .computed */
/*! export createApp [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createBlock [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .createBlock */
/*! export createCommentVNode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .createCommentVNode */
/*! export createHydrationRenderer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .createHydrationRenderer */
/*! export createRenderer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .createRenderer */
/*! export createSSRApp [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createSlots [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .createSlots */
/*! export createStaticVNode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .createStaticVNode */
/*! export createTextVNode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .createTextVNode */
/*! export createVNode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .createVNode */
/*! export customRef [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .customRef */
/*! export defineAsyncComponent [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .defineAsyncComponent */
/*! export defineComponent [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .defineComponent */
/*! export defineEmit [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .defineEmit */
/*! export defineProps [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .defineProps */
/*! export devtools [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .devtools */
/*! export getCurrentInstance [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .getCurrentInstance */
/*! export getTransitionRawChildren [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .getTransitionRawChildren */
/*! export h [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .h */
/*! export handleError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .handleError */
/*! export hydrate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export initCustomFormatter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .initCustomFormatter */
/*! export inject [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .inject */
/*! export isProxy [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .isProxy */
/*! export isReactive [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .isReactive */
/*! export isReadonly [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .isReadonly */
/*! export isRef [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .isRef */
/*! export isVNode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .isVNode */
/*! export markRaw [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .markRaw */
/*! export mergeProps [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .mergeProps */
/*! export nextTick [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .nextTick */
/*! export onActivated [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .onActivated */
/*! export onBeforeMount [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .onBeforeMount */
/*! export onBeforeUnmount [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .onBeforeUnmount */
/*! export onBeforeUpdate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .onBeforeUpdate */
/*! export onDeactivated [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .onDeactivated */
/*! export onErrorCaptured [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .onErrorCaptured */
/*! export onMounted [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .onMounted */
/*! export onRenderTracked [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .onRenderTracked */
/*! export onRenderTriggered [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .onRenderTriggered */
/*! export onUnmounted [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .onUnmounted */
/*! export onUpdated [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .onUpdated */
/*! export openBlock [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .openBlock */
/*! export popScopeId [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .popScopeId */
/*! export provide [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .provide */
/*! export proxyRefs [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .proxyRefs */
/*! export pushScopeId [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .pushScopeId */
/*! export queuePostFlushCb [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .queuePostFlushCb */
/*! export reactive [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .reactive */
/*! export readonly [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .readonly */
/*! export ref [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .ref */
/*! export registerRuntimeCompiler [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .registerRuntimeCompiler */
/*! export render [provided] [no usage info] [missing usage info prevents renaming] */
/*! export renderList [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .renderList */
/*! export renderSlot [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .renderSlot */
/*! export resolveComponent [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .resolveComponent */
/*! export resolveDirective [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .resolveDirective */
/*! export resolveDynamicComponent [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .resolveDynamicComponent */
/*! export resolveTransitionHooks [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .resolveTransitionHooks */
/*! export setBlockTracking [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .setBlockTracking */
/*! export setDevtoolsHook [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .setDevtoolsHook */
/*! export setTransitionHooks [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .setTransitionHooks */
/*! export shallowReactive [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .shallowReactive */
/*! export shallowReadonly [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .shallowReadonly */
/*! export shallowRef [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .shallowRef */
/*! export ssrContextKey [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .ssrContextKey */
/*! export ssrUtils [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .ssrUtils */
/*! export toDisplayString [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/shared/dist/shared.esm-bundler.js .toDisplayString */
/*! export toHandlerKey [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/shared/dist/shared.esm-bundler.js .toHandlerKey */
/*! export toHandlers [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .toHandlers */
/*! export toRaw [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .toRaw */
/*! export toRef [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .toRef */
/*! export toRefs [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .toRefs */
/*! export transformVNodeArgs [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .transformVNodeArgs */
/*! export triggerRef [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .triggerRef */
/*! export unref [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .unref */
/*! export useContext [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .useContext */
/*! export useCssModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! export useCssVars [provided] [no usage info] [missing usage info prevents renaming] */
/*! export useSSRContext [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .useSSRContext */
/*! export useTransitionState [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .useTransitionState */
/*! export vModelCheckbox [provided] [no usage info] [missing usage info prevents renaming] */
/*! export vModelDynamic [provided] [no usage info] [missing usage info prevents renaming] */
/*! export vModelRadio [provided] [no usage info] [missing usage info prevents renaming] */
/*! export vModelSelect [provided] [no usage info] [missing usage info prevents renaming] */
/*! export vModelText [provided] [no usage info] [missing usage info prevents renaming] */
/*! export vShow [provided] [no usage info] [missing usage info prevents renaming] */
/*! export version [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .version */
/*! export warn [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .warn */
/*! export watch [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .watch */
/*! export watchEffect [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .watchEffect */
/*! export withCtx [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .withCtx */
/*! export withDirectives [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .withDirectives */
/*! export withKeys [provided] [no usage info] [missing usage info prevents renaming] */
/*! export withModifiers [provided] [no usage info] [missing usage info prevents renaming] */
/*! export withScopeId [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .withScopeId */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BaseTransition\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.BaseTransition,\n/* harmony export */   \"Comment\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.Comment,\n/* harmony export */   \"Fragment\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.Fragment,\n/* harmony export */   \"KeepAlive\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.KeepAlive,\n/* harmony export */   \"Static\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.Static,\n/* harmony export */   \"Suspense\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.Suspense,\n/* harmony export */   \"Teleport\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.Teleport,\n/* harmony export */   \"Text\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.Text,\n/* harmony export */   \"callWithAsyncErrorHandling\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.callWithAsyncErrorHandling,\n/* harmony export */   \"callWithErrorHandling\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.callWithErrorHandling,\n/* harmony export */   \"camelize\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.camelize,\n/* harmony export */   \"capitalize\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.capitalize,\n/* harmony export */   \"cloneVNode\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.cloneVNode,\n/* harmony export */   \"computed\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.computed,\n/* harmony export */   \"createBlock\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.createBlock,\n/* harmony export */   \"createCommentVNode\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode,\n/* harmony export */   \"createHydrationRenderer\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.createHydrationRenderer,\n/* harmony export */   \"createRenderer\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.createRenderer,\n/* harmony export */   \"createSlots\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.createSlots,\n/* harmony export */   \"createStaticVNode\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.createStaticVNode,\n/* harmony export */   \"createTextVNode\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.createTextVNode,\n/* harmony export */   \"createVNode\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.createVNode,\n/* harmony export */   \"customRef\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.customRef,\n/* harmony export */   \"defineAsyncComponent\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.defineAsyncComponent,\n/* harmony export */   \"defineComponent\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.defineComponent,\n/* harmony export */   \"defineEmit\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.defineEmit,\n/* harmony export */   \"defineProps\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.defineProps,\n/* harmony export */   \"devtools\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.devtools,\n/* harmony export */   \"getCurrentInstance\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentInstance,\n/* harmony export */   \"getTransitionRawChildren\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.getTransitionRawChildren,\n/* harmony export */   \"h\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.h,\n/* harmony export */   \"handleError\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.handleError,\n/* harmony export */   \"initCustomFormatter\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.initCustomFormatter,\n/* harmony export */   \"inject\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.inject,\n/* harmony export */   \"isProxy\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.isProxy,\n/* harmony export */   \"isReactive\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.isReactive,\n/* harmony export */   \"isReadonly\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.isReadonly,\n/* harmony export */   \"isRef\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.isRef,\n/* harmony export */   \"isVNode\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.isVNode,\n/* harmony export */   \"markRaw\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.markRaw,\n/* harmony export */   \"mergeProps\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.mergeProps,\n/* harmony export */   \"nextTick\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.nextTick,\n/* harmony export */   \"onActivated\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.onActivated,\n/* harmony export */   \"onBeforeMount\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.onBeforeMount,\n/* harmony export */   \"onBeforeUnmount\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.onBeforeUnmount,\n/* harmony export */   \"onBeforeUpdate\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.onBeforeUpdate,\n/* harmony export */   \"onDeactivated\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.onDeactivated,\n/* harmony export */   \"onErrorCaptured\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.onErrorCaptured,\n/* harmony export */   \"onMounted\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.onMounted,\n/* harmony export */   \"onRenderTracked\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.onRenderTracked,\n/* harmony export */   \"onRenderTriggered\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.onRenderTriggered,\n/* harmony export */   \"onUnmounted\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.onUnmounted,\n/* harmony export */   \"onUpdated\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.onUpdated,\n/* harmony export */   \"openBlock\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.openBlock,\n/* harmony export */   \"popScopeId\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.popScopeId,\n/* harmony export */   \"provide\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.provide,\n/* harmony export */   \"proxyRefs\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.proxyRefs,\n/* harmony export */   \"pushScopeId\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.pushScopeId,\n/* harmony export */   \"queuePostFlushCb\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.queuePostFlushCb,\n/* harmony export */   \"reactive\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.reactive,\n/* harmony export */   \"readonly\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.readonly,\n/* harmony export */   \"ref\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.ref,\n/* harmony export */   \"registerRuntimeCompiler\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.registerRuntimeCompiler,\n/* harmony export */   \"renderList\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.renderList,\n/* harmony export */   \"renderSlot\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.renderSlot,\n/* harmony export */   \"resolveComponent\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.resolveComponent,\n/* harmony export */   \"resolveDirective\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.resolveDirective,\n/* harmony export */   \"resolveDynamicComponent\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.resolveDynamicComponent,\n/* harmony export */   \"resolveTransitionHooks\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.resolveTransitionHooks,\n/* harmony export */   \"setBlockTracking\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.setBlockTracking,\n/* harmony export */   \"setDevtoolsHook\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.setDevtoolsHook,\n/* harmony export */   \"setTransitionHooks\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.setTransitionHooks,\n/* harmony export */   \"shallowReactive\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.shallowReactive,\n/* harmony export */   \"shallowReadonly\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.shallowReadonly,\n/* harmony export */   \"shallowRef\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.shallowRef,\n/* harmony export */   \"ssrContextKey\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.ssrContextKey,\n/* harmony export */   \"ssrUtils\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.ssrUtils,\n/* harmony export */   \"toDisplayString\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.toDisplayString,\n/* harmony export */   \"toHandlerKey\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.toHandlerKey,\n/* harmony export */   \"toHandlers\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.toHandlers,\n/* harmony export */   \"toRaw\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.toRaw,\n/* harmony export */   \"toRef\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.toRef,\n/* harmony export */   \"toRefs\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.toRefs,\n/* harmony export */   \"transformVNodeArgs\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.transformVNodeArgs,\n/* harmony export */   \"triggerRef\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.triggerRef,\n/* harmony export */   \"unref\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.unref,\n/* harmony export */   \"useContext\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.useContext,\n/* harmony export */   \"useSSRContext\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.useSSRContext,\n/* harmony export */   \"useTransitionState\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.useTransitionState,\n/* harmony export */   \"version\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.version,\n/* harmony export */   \"warn\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.warn,\n/* harmony export */   \"watch\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.watch,\n/* harmony export */   \"watchEffect\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.watchEffect,\n/* harmony export */   \"withCtx\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.withCtx,\n/* harmony export */   \"withDirectives\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.withDirectives,\n/* harmony export */   \"withScopeId\": () => /* reexport safe */ _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.withScopeId,\n/* harmony export */   \"Transition\": () => /* binding */ Transition,\n/* harmony export */   \"TransitionGroup\": () => /* binding */ TransitionGroup,\n/* harmony export */   \"createApp\": () => /* binding */ createApp,\n/* harmony export */   \"createSSRApp\": () => /* binding */ createSSRApp,\n/* harmony export */   \"hydrate\": () => /* binding */ hydrate,\n/* harmony export */   \"render\": () => /* binding */ render,\n/* harmony export */   \"useCssModule\": () => /* binding */ useCssModule,\n/* harmony export */   \"useCssVars\": () => /* binding */ useCssVars,\n/* harmony export */   \"vModelCheckbox\": () => /* binding */ vModelCheckbox,\n/* harmony export */   \"vModelDynamic\": () => /* binding */ vModelDynamic,\n/* harmony export */   \"vModelRadio\": () => /* binding */ vModelRadio,\n/* harmony export */   \"vModelSelect\": () => /* binding */ vModelSelect,\n/* harmony export */   \"vModelText\": () => /* binding */ vModelText,\n/* harmony export */   \"vShow\": () => /* binding */ vShow,\n/* harmony export */   \"withKeys\": () => /* binding */ withKeys,\n/* harmony export */   \"withModifiers\": () => /* binding */ withModifiers\n/* harmony export */ });\n/* harmony import */ var _vue_shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vue/shared */ \"./node_modules/@vue/shared/dist/shared.esm-bundler.js\");\n/* harmony import */ var _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vue/runtime-core */ \"./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js\");\n/* harmony import */ var _vue_runtime_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vue/runtime-core */ \"./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js\");\n\n\n\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nlet tempContainer;\r\nlet tempSVGContainer;\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is) => isSVG\r\n        ? doc.createElementNS(svgNS, tag)\r\n        : doc.createElement(tag, is ? { is } : undefined),\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        return el.cloneNode(true);\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        const temp = isSVG\r\n            ? tempSVGContainer ||\r\n                (tempSVGContainer = doc.createElementNS(svgNS, 'svg'))\r\n            : tempContainer || (tempContainer = doc.createElement('div'));\r\n        temp.innerHTML = content;\r\n        const first = temp.firstChild;\r\n        let node = first;\r\n        let last = node;\r\n        while (node) {\r\n            last = node;\r\n            nodeOps.insert(node, parent, anchor);\r\n            node = temp.firstChild;\r\n        }\r\n        return [first, last];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    if (value == null) {\r\n        value = '';\r\n    }\r\n    if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        // directly setting className should be faster than setAttribute in theory\r\n        // if this is an element during a transition, take the temporary transition\r\n        // classes into account.\r\n        const transitionClasses = el._vtc;\r\n        if (transitionClasses) {\r\n            value = (value\r\n                ? [value, ...transitionClasses]\r\n                : [...transitionClasses]).join(' ');\r\n        }\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isString)(next)) {\r\n        if (prev !== next) {\r\n            style.cssText = next;\r\n        }\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isString)(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hyphenate)(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.camelize)(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.capitalize)(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isSpecialBooleanAttr)(key);\r\n        if (value == null || (isBoolean && value === false)) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n        return;\r\n    }\r\n    if (value === '' && typeof el[key] === 'boolean') {\r\n        // e.g. <select multiple> compiles to { multiple: '' }\r\n        el[key] = true;\r\n    }\r\n    else if (value == null && typeof el[key] === 'string') {\r\n        // e.g. <div :id=\"null\">\r\n        el[key] = '';\r\n        el.removeAttribute(key);\r\n    }\r\n    else {\r\n        // some properties perform value validation and throw\r\n        try {\r\n            el[key] = value;\r\n        }\r\n        catch (e) {\r\n            if ((true)) {\r\n                (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.warn)(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                    `value ${value} is invalid.`, e);\r\n            }\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\n// Determine what event timestamp the browser is using. Annoyingly, the\r\n// timestamp can either be hi-res (relative to page load) or low-res\r\n// (relative to UNIX epoch), so in order to compare time we have to use the\r\n// same timestamp type when saving the flush timestamp.\r\nif (typeof document !== 'undefined' &&\r\n    _getNow() > document.createEvent('Event').timeStamp) {\r\n    // if the low-res timestamp which is bigger than the event timestamp\r\n    // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n    // and we need to use the hi-res version for event listeners as well.\r\n    _getNow = () => performance.now();\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [name.slice(2).toLowerCase(), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (timeStamp >= invoker.attached - 1) {\r\n            (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.callWithAsyncErrorHandling)(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst forcePatchProp = (_, key) => key === 'value';\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    switch (key) {\r\n        // special\r\n        case 'class':\r\n            patchClass(el, nextValue, isSVG);\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        default:\r\n            if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isOn)(key)) {\r\n                // ignore v-model listeners\r\n                if (!(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isModelListener)(key)) {\r\n                    patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n                }\r\n            }\r\n            else if (shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n            }\r\n            else {\r\n                // special case for <input v-model type=\"checkbox\"> with\r\n                // :true-value & :false-value\r\n                // store value as dom properties since non-string values will be\r\n                // stringified.\r\n                if (key === 'true-value') {\r\n                    el._trueValue = nextValue;\r\n                }\r\n                else if (key === 'false-value') {\r\n                    el._falseValue = nextValue;\r\n                }\r\n                patchAttr(el, key, nextValue, isSVG);\r\n            }\r\n            break;\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML\r\n        if (key === 'innerHTML') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1787 form as an attribute must be a string, while it accepts an Element as\r\n    // a prop\r\n    if (key === 'form' && typeof value === 'string') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isString)(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentInstance)();\r\n        if (!instance) {\r\n            ( true) && (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.warn)(`useCssModule must be called inside setup()`);\r\n            return _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            ( true) && (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.warn)(`Current instance does not have CSS modules injected.`);\r\n            return _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            ( true) &&\r\n                (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.warn)(`Current instance does not have CSS module named \"${name}\".`);\r\n            return _vue_shared__WEBPACK_IMPORTED_MODULE_1__.EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nfunction useCssVars(getter) {\r\n    const instance = (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentInstance)();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        ( true) &&\r\n            (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.warn)(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const setVars = () => setVarsOnVNode(instance.subTree, getter(instance.proxy));\r\n    (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.onMounted)(() => (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.watchEffect)(setVars, { flush: 'post' }));\r\n    (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.onUpdated)(setVars);\r\n}\r\nfunction setVarsOnVNode(vnode, vars) {\r\n    if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        const suspense = vnode.suspense;\r\n        vnode = suspense.activeBranch;\r\n        if (suspense.pendingBranch && !suspense.isHydrating) {\r\n            suspense.effects.push(() => {\r\n                setVarsOnVNode(suspense.activeBranch, vars);\r\n            });\r\n        }\r\n    }\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        const style = vnode.el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${key}`, vars[key]);\r\n        }\r\n    }\r\n    else if (vnode.type === _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars));\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.h)(_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props = /*#__PURE__*/ (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.extend)({}, _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.BaseTransition.props, DOMTransitionPropsValidators));\r\nfunction resolveTransitionProps(rawProps) {\r\n    let { name = 'v', type, css = true, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (!css) {\r\n        return baseProps;\r\n    }\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            hook && hook(el, resolve);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!(hook && hook.length > 1)) {\r\n                    if (enterDuration) {\r\n                        setTimeout(resolve, enterDuration);\r\n                    }\r\n                    else {\r\n                        whenTransitionEnds(el, type, resolve);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.extend)(baseProps, {\r\n        onBeforeEnter(el) {\r\n            onBeforeEnter && onBeforeEnter(el);\r\n            addTransitionClass(el, enterActiveClass);\r\n            addTransitionClass(el, enterFromClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            onBeforeAppear && onBeforeAppear(el);\r\n            addTransitionClass(el, appearActiveClass);\r\n            addTransitionClass(el, appearFromClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveActiveClass);\r\n            addTransitionClass(el, leaveFromClass);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!(onLeave && onLeave.length > 1)) {\r\n                    if (leaveDuration) {\r\n                        setTimeout(resolve, leaveDuration);\r\n                    }\r\n                    else {\r\n                        whenTransitionEnds(el, type, resolve);\r\n                    }\r\n                }\r\n            });\r\n            onLeave && onLeave(el, resolve);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            onEnterCancelled && onEnterCancelled(el);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            onAppearCancelled && onAppearCancelled(el);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            onLeaveCancelled && onLeaveCancelled(el);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isObject)(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.toNumber)(val);\r\n    if ((true))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.warn)(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.warn)(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nfunction whenTransitionEnds(el, expectedType, cb) {\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return cb();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        cb();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el) {\r\n            if (++ended >= propCount) {\r\n                end();\r\n            }\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.extend)({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentInstance)();\r\n        const state = (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.useTransitionState)();\r\n        let prevChildren;\r\n        let children;\r\n        (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.onUpdated)(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_2__.toRaw)(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            const tag = rawProps.tag || _vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.getTransitionRawChildren)(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.setTransitionHooks)(child, (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.resolveTransitionHooks)(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((true)) {\r\n                    (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.warn)(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.setTransitionHooks)(child, (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.resolveTransitionHooks)(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.createVNode)(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\n// this is put in a dedicated function to avoid the line from being treeshaken\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1\r\n        ? root\r\n        : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(fn) ? value => (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.invokeArrayFns)(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || el.type === 'number';\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.toNumber)(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    // set value on mounted so it's after min/max for type=\"range\"\r\n    mounted(el, { value }) {\r\n        el.value = value == null ? '' : value;\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        // avoid clearing unresolved text. #2302\r\n        if (el.composing)\r\n            return;\r\n        if (document.activeElement === el) {\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.toNumber)(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    created(el, binding, vnode) {\r\n        setChecked(el, binding, vnode);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(modelValue)) {\r\n                const index = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.looseIndexOf)(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isSet)(modelValue)) {\r\n                if (checked) {\r\n                    modelValue.add(elementValue);\r\n                }\r\n                else {\r\n                    modelValue.delete(elementValue);\r\n                }\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(value)) {\r\n        el.checked = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.looseIndexOf)(value, vnode.props.value) > -1;\r\n    }\r\n    else if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isSet)(value)) {\r\n        el.checked = value.has(vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.looseEqual)(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.looseEqual)(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.looseEqual)(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    created(el, { modifiers: { number } }, vnode) {\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map((o) => number ? (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.toNumber)(getValue(o)) : getValue(o));\r\n            el._assign(el.multiple ? selectedVal : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(value) && !(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isSet)(value)) {\r\n        ( true) &&\r\n            (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.warn)(`<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isArray)(value)) {\r\n                option.selected = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.looseIndexOf)(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = value.has(optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.looseEqual)(getValue(option), value)) {\r\n                el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (vnode.props && vnode.props.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event))\r\n            return;\r\n        const eventKey = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.hyphenate)(event.key);\r\n        if (\r\n        // None of the provided key modifiers match the current event key\r\n        !modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return;\r\n        }\r\n        return fn(event);\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst rendererOptions = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.extend)({ patchProp, forcePatchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return renderer || (renderer = (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.createRenderer)(rendererOptions));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.createHydrationRenderer)(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((true)) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!(0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isFunction)(component) && !component.render && !component.template) {\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container);\r\n        container.removeAttribute('v-cloak');\r\n        container.setAttribute('data-v-app', '');\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((true)) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isHTMLTag)(tag) || (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isSVGTag)(tag),\r\n        writable: false\r\n    });\r\n}\r\nfunction normalizeContainer(container) {\r\n    if ((0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.isString)(container)) {\r\n        const res = document.querySelector(container);\r\n        if (( true) && !res) {\r\n            (0,_vue_runtime_core__WEBPACK_IMPORTED_MODULE_0__.warn)(`Failed to mount app: mount target selector returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    return container;\r\n}\n\n\n\n\n//# sourceURL=webpack://nathankim7.github.io/./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js?");

/***/ }),

/***/ "./node_modules/@vue/shared/dist/shared.esm-bundler.js":
/*!*************************************************************!*\
  !*** ./node_modules/@vue/shared/dist/shared.esm-bundler.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export EMPTY_ARR [provided] [no usage info] [missing usage info prevents renaming] */
/*! export EMPTY_OBJ [provided] [no usage info] [missing usage info prevents renaming] */
/*! export NO [provided] [no usage info] [missing usage info prevents renaming] */
/*! export NOOP [provided] [no usage info] [missing usage info prevents renaming] */
/*! export PatchFlagNames [provided] [no usage info] [missing usage info prevents renaming] */
/*! export babelParserDefaultPlugins [provided] [no usage info] [missing usage info prevents renaming] */
/*! export camelize [provided] [no usage info] [missing usage info prevents renaming] */
/*! export capitalize [provided] [no usage info] [missing usage info prevents renaming] */
/*! export def [provided] [no usage info] [missing usage info prevents renaming] */
/*! export escapeHtml [provided] [no usage info] [missing usage info prevents renaming] */
/*! export escapeHtmlComment [provided] [no usage info] [missing usage info prevents renaming] */
/*! export extend [provided] [no usage info] [missing usage info prevents renaming] */
/*! export generateCodeFrame [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getGlobalThis [provided] [no usage info] [missing usage info prevents renaming] */
/*! export hasChanged [provided] [no usage info] [missing usage info prevents renaming] */
/*! export hasOwn [provided] [no usage info] [missing usage info prevents renaming] */
/*! export hyphenate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export invokeArrayFns [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isArray [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isBooleanAttr [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isDate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isFunction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isGloballyWhitelisted [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isHTMLTag [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isIntegerKey [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isKnownAttr [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isMap [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isModelListener [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isNoUnitNumericStyleProp [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isObject [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isOn [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isPlainObject [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isPromise [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isReservedProp [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isSSRSafeAttrName [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isSVGTag [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isSet [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isSpecialBooleanAttr [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isString [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isSymbol [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isVoidTag [provided] [no usage info] [missing usage info prevents renaming] */
/*! export looseEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*! export looseIndexOf [provided] [no usage info] [missing usage info prevents renaming] */
/*! export makeMap [provided] [no usage info] [missing usage info prevents renaming] */
/*! export normalizeClass [provided] [no usage info] [missing usage info prevents renaming] */
/*! export normalizeStyle [provided] [no usage info] [missing usage info prevents renaming] */
/*! export objectToString [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseStringStyle [provided] [no usage info] [missing usage info prevents renaming] */
/*! export propsToAttrMap [provided] [no usage info] [missing usage info prevents renaming] */
/*! export remove [provided] [no usage info] [missing usage info prevents renaming] */
/*! export stringifyStyle [provided] [no usage info] [missing usage info prevents renaming] */
/*! export toDisplayString [provided] [no usage info] [missing usage info prevents renaming] */
/*! export toHandlerKey [provided] [no usage info] [missing usage info prevents renaming] */
/*! export toNumber [provided] [no usage info] [missing usage info prevents renaming] */
/*! export toRawType [provided] [no usage info] [missing usage info prevents renaming] */
/*! export toTypeString [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.g, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EMPTY_ARR\": () => /* binding */ EMPTY_ARR,\n/* harmony export */   \"EMPTY_OBJ\": () => /* binding */ EMPTY_OBJ,\n/* harmony export */   \"NO\": () => /* binding */ NO,\n/* harmony export */   \"NOOP\": () => /* binding */ NOOP,\n/* harmony export */   \"PatchFlagNames\": () => /* binding */ PatchFlagNames,\n/* harmony export */   \"babelParserDefaultPlugins\": () => /* binding */ babelParserDefaultPlugins,\n/* harmony export */   \"camelize\": () => /* binding */ camelize,\n/* harmony export */   \"capitalize\": () => /* binding */ capitalize,\n/* harmony export */   \"def\": () => /* binding */ def,\n/* harmony export */   \"escapeHtml\": () => /* binding */ escapeHtml,\n/* harmony export */   \"escapeHtmlComment\": () => /* binding */ escapeHtmlComment,\n/* harmony export */   \"extend\": () => /* binding */ extend,\n/* harmony export */   \"generateCodeFrame\": () => /* binding */ generateCodeFrame,\n/* harmony export */   \"getGlobalThis\": () => /* binding */ getGlobalThis,\n/* harmony export */   \"hasChanged\": () => /* binding */ hasChanged,\n/* harmony export */   \"hasOwn\": () => /* binding */ hasOwn,\n/* harmony export */   \"hyphenate\": () => /* binding */ hyphenate,\n/* harmony export */   \"invokeArrayFns\": () => /* binding */ invokeArrayFns,\n/* harmony export */   \"isArray\": () => /* binding */ isArray,\n/* harmony export */   \"isBooleanAttr\": () => /* binding */ isBooleanAttr,\n/* harmony export */   \"isDate\": () => /* binding */ isDate,\n/* harmony export */   \"isFunction\": () => /* binding */ isFunction,\n/* harmony export */   \"isGloballyWhitelisted\": () => /* binding */ isGloballyWhitelisted,\n/* harmony export */   \"isHTMLTag\": () => /* binding */ isHTMLTag,\n/* harmony export */   \"isIntegerKey\": () => /* binding */ isIntegerKey,\n/* harmony export */   \"isKnownAttr\": () => /* binding */ isKnownAttr,\n/* harmony export */   \"isMap\": () => /* binding */ isMap,\n/* harmony export */   \"isModelListener\": () => /* binding */ isModelListener,\n/* harmony export */   \"isNoUnitNumericStyleProp\": () => /* binding */ isNoUnitNumericStyleProp,\n/* harmony export */   \"isObject\": () => /* binding */ isObject,\n/* harmony export */   \"isOn\": () => /* binding */ isOn,\n/* harmony export */   \"isPlainObject\": () => /* binding */ isPlainObject,\n/* harmony export */   \"isPromise\": () => /* binding */ isPromise,\n/* harmony export */   \"isReservedProp\": () => /* binding */ isReservedProp,\n/* harmony export */   \"isSSRSafeAttrName\": () => /* binding */ isSSRSafeAttrName,\n/* harmony export */   \"isSVGTag\": () => /* binding */ isSVGTag,\n/* harmony export */   \"isSet\": () => /* binding */ isSet,\n/* harmony export */   \"isSpecialBooleanAttr\": () => /* binding */ isSpecialBooleanAttr,\n/* harmony export */   \"isString\": () => /* binding */ isString,\n/* harmony export */   \"isSymbol\": () => /* binding */ isSymbol,\n/* harmony export */   \"isVoidTag\": () => /* binding */ isVoidTag,\n/* harmony export */   \"looseEqual\": () => /* binding */ looseEqual,\n/* harmony export */   \"looseIndexOf\": () => /* binding */ looseIndexOf,\n/* harmony export */   \"makeMap\": () => /* binding */ makeMap,\n/* harmony export */   \"normalizeClass\": () => /* binding */ normalizeClass,\n/* harmony export */   \"normalizeStyle\": () => /* binding */ normalizeStyle,\n/* harmony export */   \"objectToString\": () => /* binding */ objectToString,\n/* harmony export */   \"parseStringStyle\": () => /* binding */ parseStringStyle,\n/* harmony export */   \"propsToAttrMap\": () => /* binding */ propsToAttrMap,\n/* harmony export */   \"remove\": () => /* binding */ remove,\n/* harmony export */   \"stringifyStyle\": () => /* binding */ stringifyStyle,\n/* harmony export */   \"toDisplayString\": () => /* binding */ toDisplayString,\n/* harmony export */   \"toHandlerKey\": () => /* binding */ toHandlerKey,\n/* harmony export */   \"toNumber\": () => /* binding */ toNumber,\n/* harmony export */   \"toRawType\": () => /* binding */ toRawType,\n/* harmony export */   \"toTypeString\": () => /* binding */ toTypeString\n/* harmony export */ });\n/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n// Patch flags are optimization hints generated by the compiler.\r\n// when a block with dynamicChildren is encountered during diff, the algorithm\r\n// enters \"optimized mode\". In this mode, we know that the vdom is produced by\r\n// a render function generated by the compiler, so the algorithm only needs to\r\n// handle updates explicitly marked by these patch flags.\r\n// dev only flag -> name mapping\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            res += normalizeClass(value[i]) + ' ';\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = ( true)\r\n    ? Object.freeze({})\r\n    : 0;\r\nconst EMPTY_ARR = ( true) ? Object.freeze([]) : 0;\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof __webpack_require__.g !== 'undefined'\r\n                            ? __webpack_require__.g\r\n                            : {}));\r\n};\n\n\n\n\n//# sourceURL=webpack://nathankim7.github.io/./node_modules/@vue/shared/dist/shared.esm-bundler.js?");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./src/App.vue?vue&type=script&lang=js":
/*!*******************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./src/App.vue?vue&type=script&lang=js ***!
  \*******************************************************************************************************************************************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony import */ var _components_Ants_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/Ants.vue */ \"./src/components/Ants.vue\");\n/* harmony import */ var _Nathan_Kim_Resume_pdf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Nathan_Kim_Resume.pdf */ \"./src/Nathan_Kim_Resume.pdf\");\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'App',\n  components: {\n    Ants: _components_Ants_vue__WEBPACK_IMPORTED_MODULE_0__.default\n  },\n  data: function data() {\n    return {\n      cv: _Nathan_Kim_Resume_pdf__WEBPACK_IMPORTED_MODULE_1__.default\n    };\n  }\n});\n\n//# sourceURL=webpack://nathankim7.github.io/./src/App.vue?./node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!./node_modules/vue-loader/dist/index.js??ruleSet%5B1%5D.rules%5B8%5D.use%5B0%5D");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./src/components/Ants.vue?vue&type=script&lang=js":
/*!*******************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./src/components/Ants.vue?vue&type=script&lang=js ***!
  \*******************************************************************************************************************************************************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony import */ var two_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! two.js */ \"./node_modules/two.js/build/two.module.js\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\nvar paths = [];\nvar PARTY_SIZE = 10,\n    ANT_V = 1;\nvar MIN_PATH_DIST = 2,\n    MAX_PATH_DIST = 4,\n    ANT_RATE = ANT_V * 50;\nvar D_PATH_LMAX = 10;\nvar CONTRAST_C = '#000000';\nvar RADIUS = 200,\n    K = 5;\nvar PR = 30;\nvar CELLSIZE = RADIUS * Math.SQRT1_2;\nvar two, radialGrid;\nvar offsetX, offsetY;\nvar canvasW, canvasH; // convenience functions\n\nvar distSq = function distSq(x1, x2, y1, y2) {\n  return Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2);\n};\n\nvar marsaglia = function marsaglia() {\n  var u = 0,\n      v = 0;\n\n  while (u * u + v * v == 0 || u * u + v * v >= 1) {\n    u = Math.random();\n    v = Math.random();\n  }\n\n  var s = u * u + v * v;\n  return u * Math.sqrt(-2 * Math.log(s) / s);\n};\n\nvar closestHole = function closestHole(cx, cy, r) {\n  if (cx < PR || cx > two.width - PR || cy < PR || cy > two.height - PR) return -2;\n  var cr = cy / CELLSIZE | 0,\n      cc = cx / CELLSIZE | 0;\n  var i0 = Math.max(0, cr - 2),\n      j0 = Math.max(0, cc - 2);\n  var i1 = Math.min(radialGrid.length - 1, cr + 2),\n      j1 = Math.min(radialGrid[0].length - 1, cc + 2);\n\n  for (var i = i0; i <= i1; i++) {\n    for (var j = j0; j <= j1; j++) {\n      if (radialGrid[i][j] && distSq(radialGrid[i][j].x, cx, radialGrid[i][j].y, cy) <= Math.pow(r, 2)) return radialGrid[0].length * i + j;\n    }\n  }\n\n  return -1;\n};\n\nvar closestPeg = function closestPeg(x, y) {\n  var xa = x - offsetX,\n      ya = y - offsetY;\n  var xb = (xa - PR) % (PR * 2) < PR ? xa - xa % PR : xa + PR - xa % PR;\n  var yb = (ya - PR) % (PR * 2) < PR ? ya - ya % PR : ya + PR - ya % PR;\n  return [xb + offsetX, yb + offsetY];\n};\n\nvar radialGridLookUp = function radialGridLookUp(x, y) {\n  return (y / CELLSIZE | 0) * radialGrid[0].length + (x / CELLSIZE | 0);\n};\n\nvar poissonSampleHoles = function poissonSampleHoles() {\n  var _ref = _toConsumableArray(closestPeg((two.width - PR) * Math.random() + PR / 2, (two.height - PR) * Math.random() + PR / 2)),\n      sx = _ref[0],\n      sy = _ref[1];\n\n  var startHole = Hole(sx, sy, 20);\n  radialGrid[startHole.y / CELLSIZE | 0][startHole.x / CELLSIZE | 0] = startHole;\n  var active = [startHole];\n\n  while (active.length) {\n    var curInd = Math.random() * active.length | 0;\n    var parent = active[curInd];\n    var SEED = Math.random();\n    var EPSILON = 0.0000001;\n    var j;\n\n    for (j = 0; j < K; j++) {\n      var a = 2 * Math.PI * (SEED + 1.0 * j / K);\n      var r = RADIUS + EPSILON;\n      var x = parent.x + r * Math.cos(a),\n          y = parent.y + r * Math.sin(a); // let tmp = two.makeCircle(x, y, 5);\n      // tmp.noStroke();\n      // tmp.fill = 'black';\n\n      if (closestHole(x, y, RADIUS) == -1) {\n        var _ref2 = _toConsumableArray(closestPeg(x, y)),\n            rx = _ref2[0],\n            ry = _ref2[1];\n\n        var newHole = Hole(rx, ry, 20);\n        radialGrid[ry / CELLSIZE | 0][rx / CELLSIZE | 0] = newHole;\n        active.push(newHole);\n      }\n    }\n\n    if (j >= K) {\n      var lastHole = active.pop();\n      if (curInd < active.length) active[curInd] = lastHole;\n    }\n  }\n}; // classes\n\n\nvar Point = function Point(x, y, r, c) {\n  var self = {\n    x: x,\n    y: y,\n    radius: r,\n    colour: c,\n    sprite: {},\n    render: function render() {\n      this.sprite.translation.set(this.x, this.y);\n      this.sprite.fill = this.colour;\n    }\n  };\n  self.sprite = two.makeCircle(self.x, self.y, self.radius);\n  self.sprite.noStroke();\n  self.sprite.fill = self.colour;\n  return self;\n};\n\nvar Animatable = function Animatable() {\n  return {\n    flags: {\n      remove: false\n    }\n  };\n};\n\nvar Hole = function Hole(x, y) {\n  var self = _objectSpread(_objectSpread({}, Point(x, y, 20, '#7ac253')), {}, {\n    polarity: 0,\n    flip: function flip() {\n      this.polarity = 1 - this.polarity;\n      this.colour = this.polarity == 1 ? CONTRAST_C : '#7ac253';\n      this.render();\n    }\n  });\n\n  two.update();\n  document.getElementById(self.sprite.id).addEventListener('mousedown', function (e) {\n    self.flip();\n    paths.push(Path(self, Math.random() * 0.35 + 0.4, PARTY_SIZE));\n  });\n  return self;\n};\n\nvar Ant = function Ant(path, hill, p) {\n  var self = _objectSpread(_objectSpread(_objectSpread({}, Animatable()), Point(hill.x, hill.y, 10, p == 1 ? CONTRAST_C : '#7ac253')), {}, {\n    p: p,\n    path: path,\n    progress: 0,\n    // radian angle covered if curve, pixels covered if straight\n    ind: 0\n  });\n\n  var behaviours = function behaviours(self) {\n    return {\n      move: function move() {\n        var closest = closestHole(self.x, self.y, 20);\n\n        if (closest >= 0) {\n          var hole = radialGrid[closest / radialGrid[0].length | 0][closest % radialGrid[0].length];\n\n          if (closest != radialGridLookUp(self.path.start.x, self.path.start.y) && hole.polarity != self.p) {\n            self.flags.remove = true;\n            self.sprite.remove();\n            hole.flip();\n            if (Math.random < 0.1) paths.push(Path(hole, Math.random() * 0.35 + 0.4, PARTY_SIZE));\n            return;\n          }\n        }\n\n        if (self.ind == self.path.num) {\n          self.path.make(self.x, self.y, self.path.moves[self.ind - 1].d);\n        }\n\n        var move = self.path.moves[self.ind];\n\n        if (move.type == 'curve') {\n          self.progress += ANT_V / move.r;\n          var a = self.progress;\n          self.x = move.c.x + move.r * Math.cos(move.turn * a + (move.d + 2) * Math.PI / 2);\n          self.y = move.c.y - move.r * Math.sin(move.turn * a + (move.d + 2) * Math.PI / 2);\n        } else if (move.type == 'straight') {\n          self.progress += ANT_V;\n          self.x += (move.d > 1 ? -1 : 1) * ((move.d + 1) % 2) * ANT_V;\n          self.y += (move.d > 1 ? 1 : -1) * (move.d % 2) * ANT_V;\n        }\n\n        self.x = (self.x - offsetX + canvasW) % canvasW + offsetX;\n        self.y = (self.y - offsetY + canvasH) % canvasH + offsetY;\n        self.render();\n\n        if (self.progress > (move.type == 'curve' ? Math.PI / 2 : move.l)) {\n          self.ind++;\n          self.progress = 0;\n        }\n      }\n    };\n  };\n\n  return _objectSpread(_objectSpread({}, self), behaviours(self));\n};\n\nvar Path = function Path(startHole, straightness, size) {\n  var self = {\n    start: startHole,\n    straightness: straightness,\n    size: size,\n    startFrame: two.frameCount,\n    moves: [],\n    ants: [],\n    num: 0,\n    antNum: 0,\n    make: function make(px, py, pd) {\n      var type = Math.random();\n\n      if (type < this.straightness) {\n        this.moves.push({\n          type: 'straight',\n          d: pd,\n          l: (Math.random() * (MAX_PATH_DIST - MIN_PATH_DIST) | 0 + MIN_PATH_DIST) * PR * 2\n        });\n      } else {\n        var move = {\n          type: 'curve',\n          r: (Math.random() * (MAX_PATH_DIST - MIN_PATH_DIST) | 0 + MIN_PATH_DIST) * PR * 2\n        };\n        var turn = Math.random();\n\n        if (turn > 0.5) {\n          move.d = (pd + 1) % 4;\n          move.turn = 1;\n        } else {\n          move.d = (pd + 3) % 4;\n          move.turn = -1;\n        }\n\n        move.c = {\n          x: px + move.r * Math.cos(Math.PI / 2 * move.d),\n          y: py - move.r * Math.sin(Math.PI / 2 * move.d)\n        };\n        this.moves.push(move);\n      }\n\n      this.num++;\n    }\n  };\n  self.make(self.start.x, self.start.y, Math.random() * 4 | 0);\n  return self;\n};\n\nvar run = function run() {\n  var div = document.getElementById('main');\n  two = new two_js__WEBPACK_IMPORTED_MODULE_0__.default({\n    type: two_js__WEBPACK_IMPORTED_MODULE_0__.default.Types.svg\n  }).appendTo(div);\n  window.addEventListener('resize', resize, false);\n  resize();\n  two.renderer.domElement.style.display = 'block';\n\n  function resize() {\n    var h = Math.max(document.body.clientHeight, window.innerHeight);\n    two.width = screen.availWidth;\n    two.height = h;\n    two.renderer.setSize(screen.availWidth, h);\n  }\n\n  radialGrid = new Array(Math.ceil(two.height / CELLSIZE));\n\n  for (var i = 0; i < radialGrid.length; i++) {\n    radialGrid[i] = new Array(Math.ceil(two.width / CELLSIZE));\n  }\n\n  function init() {\n    var numw = Math.ceil(two.width / (PR * 2)),\n        numh = Math.ceil(two.height / (PR * 2));\n    offsetX = (two.width - numw * PR * 2) / 2;\n    offsetY = (two.height - numh * PR * 2) / 2;\n    canvasW = numw * PR * 2;\n    canvasH = numh * PR * 2;\n\n    for (var _i = 0; _i < numw; _i++) {\n      for (var j = 0; j < numh; j++) {\n        if (Math.random() < 0.5) continue;\n        var r = PR / 5;\n        var cx = offsetX + PR + _i * PR * 2,\n            cy = offsetY + PR + j * PR * 2;\n        var a = two.makeLine(cx - r, cy, cx + r, cy);\n        var b = two.makeLine(cx, cy - r, cx, cy + r);\n        a.stroke = b.stroke = '#3d6166';\n        a.linewidth = b.linewidth = 1;\n      }\n    } //poissonSampleHoles();\n\n  }\n\n  init();\n  two.bind('update', function (f) {\n    paths = paths.filter(function (p) {\n      return !(p.antNum == PARTY_SIZE && p.ants.length == 0);\n    });\n    paths.forEach(function (p) {\n      p.ants = p.ants.filter(function (a) {\n        return !a.flags.remove;\n      });\n\n      if ((f - p.startFrame) % ANT_RATE == 0 && p.antNum < p.size) {\n        p.ants.push(Ant(p, p.start, p.start.polarity));\n        p.antNum++;\n      }\n\n      p.ants.forEach(function (a) {\n        return a.move();\n      });\n    });\n  }).play();\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'ants',\n  mounted: function mounted() {\n    run();\n  }\n});\n\n//# sourceURL=webpack://nathankim7.github.io/./src/components/Ants.vue?./node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!./node_modules/vue-loader/dist/index.js??ruleSet%5B1%5D.rules%5B8%5D.use%5B0%5D");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./src/App.vue?vue&type=template&id=7ba5bd90":
/*!***********************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./src/App.vue?vue&type=template&id=7ba5bd90 ***!
  \***********************************************************************************************************************************************************************************************************************************************************/
/*! namespace exports */
/*! export render [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"render\": () => /* binding */ render\n/* harmony export */ });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n/* harmony import */ var _favicon_svg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./favicon.svg */ \"./src/favicon.svg\");\n\n\nvar _hoisted_1 = {\n  \"class\": \"flex justify-center w-100 h-100\"\n};\nvar _hoisted_2 = {\n  id: \"content\",\n  \"class\": \"flex flex-column flex-auto pa3\"\n};\n\nvar _hoisted_3 = /*#__PURE__*/(0,vue__WEBPACK_IMPORTED_MODULE_0__.createVNode)(\"p\", {\n  id: \"tit\",\n  \"class\": \"f1-ns tc ma0 b flex items-center justify-center w-100\"\n}, [/*#__PURE__*/(0,vue__WEBPACK_IMPORTED_MODULE_0__.createTextVNode)(\"NATHAN KIM\"), /*#__PURE__*/(0,vue__WEBPACK_IMPORTED_MODULE_0__.createVNode)(\"img\", {\n  style: {\n    \"height\": \"1em\"\n  },\n  \"class\": \"ph2\",\n  src: _favicon_svg__WEBPACK_IMPORTED_MODULE_1__,\n  alt: \"logo\"\n})], -1\n/* HOISTED */\n);\n\nvar _hoisted_4 = /*#__PURE__*/(0,vue__WEBPACK_IMPORTED_MODULE_0__.createVNode)(\"hr\", {\n  \"class\": \"w-100 ma0 mt3\",\n  style: {\n    \"border\": \"2px solid black\"\n  }\n}, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_5 = {\n  style: {\n    \"font-size\": \"1.3rem\",\n    \"line-height\": \"1.3em\"\n  },\n  \"class\": \"ma0 mt3 w-100 content\"\n};\n\nvar _hoisted_6 = /*#__PURE__*/(0,vue__WEBPACK_IMPORTED_MODULE_0__.createStaticVNode)(\"Hi! I&#39;m a sophomore student at Stanford University interested in <p class=\\\"rainbow-text\\\">computers</p> and <p class=\\\"rainbow-text\\\">language</p> and especially <p class=\\\"rainbow-text\\\">things that combine the two</p>. Intermittently, I&#39;ve also been a full-stack web dev and an Android developer. Feel free to check out my code on <a href=\\\"https://github.com/nathankim7\\\">Github</a>, connect with me on <a href=\\\"https://www.linkedin.com/in/nathan-kim-71b568155/\\\">Linkedin</a>, and take my \", 11);\n\nvar _hoisted_17 = /*#__PURE__*/(0,vue__WEBPACK_IMPORTED_MODULE_0__.createTextVNode)(\". Any questions or comments can be directed to me by filling in the blanks at \");\n\nvar _hoisted_18 = /*#__PURE__*/(0,vue__WEBPACK_IMPORTED_MODULE_0__.createVNode)(\"a\", {\n  href: \"#\"\n}, \"nathangk@st_nf_rd.edu\", -1\n/* HOISTED */\n);\n\nvar _hoisted_19 = /*#__PURE__*/(0,vue__WEBPACK_IMPORTED_MODULE_0__.createTextVNode)(\".\");\n\nvar _hoisted_20 = /*#__PURE__*/(0,vue__WEBPACK_IMPORTED_MODULE_0__.createVNode)(\"p\", {\n  id: \"tit2\",\n  \"class\": \"f2-ns tc ma0 mt5 mb2 w-100 b\"\n}, \"things that might interest you\", -1\n/* HOISTED */\n);\n\nvar _hoisted_21 = /*#__PURE__*/(0,vue__WEBPACK_IMPORTED_MODULE_0__.createVNode)(\"hr\", {\n  \"class\": \"w-100 ma0 mv2\",\n  style: {\n    \"border\": \"2px solid black\"\n  }\n}, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_22 = /*#__PURE__*/(0,vue__WEBPACK_IMPORTED_MODULE_0__.createVNode)(\"a\", {\n  \"class\": \"mt2 f4 content\",\n  href: \"https://oddoneout.herokuapp.com/\"\n}, \"[Web App] Odd One Out: A Game of Words in Vector Semantics\", -1\n/* HOISTED */\n);\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_ants = (0,vue__WEBPACK_IMPORTED_MODULE_0__.resolveComponent)(\"ants\");\n\n  return (0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createBlock)(\"div\", _hoisted_1, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createVNode)(_component_ants, {\n    id: \"bg\",\n    \"class\": \"w-100 h-100\"\n  }), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createVNode)(\"div\", _hoisted_2, [_hoisted_3, _hoisted_4, (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\" <div id=\\\"links\\\" class=\\\"flex w-100 justify-center flex-wrap mt3\\\">\\n\\t\\t\\t\\t<a class=\\\"i f3 mh2 mb2\\\" href=\\\"https://github.com/nathankim7\\\">github</a>\\n\\t\\t\\t\\t<a class=\\\"i f3 mh2 mb2\\\" href=\\\"https://www.linkedin.com/in/nathan-kim-71b568155/\\\">linkedin</a>\\n\\t\\t\\t\\t<a class=\\\"i f3 mh2 mb2\\\" href=\\\"#\\\">resume</a>\\n\\t\\t\\t\\t<p class=\\\"i f3 ml2 mt0 mb3 mr0\\\">contact: <a href=\\\"#\\\">nathangk@stanford.edu</a></p>\\n\\t\\t\\t</div> \"), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createVNode)(\"p\", _hoisted_5, [_hoisted_6, (0,vue__WEBPACK_IMPORTED_MODULE_0__.createVNode)(\"a\", {\n    href: $data.cv\n  }, \"resume\", 8\n  /* PROPS */\n  , [\"href\"]), _hoisted_17, _hoisted_18, _hoisted_19]), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\" <ul style=\\\"font-size: 1.3rem\\\" class=\\\"mt2 ma0 mb5 pl3\\\">\\n\\t\\t\\t\\t<li>if</li>\\n\\t\\t\\t\\t<li>i have</li>\\n\\t\\t\\t\\t<li>something</li>\\n\\t\\t\\t</ul> \"), _hoisted_20, _hoisted_21, _hoisted_22, (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\" <p class=\\\"f3 ma0 w-100 i tracked\\\">1234567890 !@#$%^&*()_+~{}|:\\\"?</p>\\n\\t\\t\\t<p class=\\\"f3 ma0 w-100 i tracked\\\" style=\\\"font-family: Arial\\\">1234567890 !@#$%^&*()_+~{}|:\\\"?</p>\\n\\t\\t\\t<p class=\\\"f3 ma0 w-100 i tracked\\\">1234567890 !@#$%^&*()_+~{}|:\\\"?</p>\\n\\t\\t\\t<p class=\\\"f3 ma0 w-100 i tracked\\\" style=\\\"font-family: Arial\\\">1234567890 !@#$%^&*()_+~{}|:\\\"?</p>\\n\\t\\t\\t<p class=\\\"f3 ma0 w-100 i tracked\\\">1234567890 !@#$%^&*()_+~{}|:\\\"?</p>\\n\\t\\t\\t<p class=\\\"f3 ma0 w-100 i tracked\\\" style=\\\"font-family: Arial\\\">1234567890 !@#$%^&*()_+~{}|:\\\"?</p>\\n\\t\\t\\t<p class=\\\"f3 ma0 w-100 i tracked\\\">1234567890 !@#$%^&*()_+~{}|:\\\"?</p>\\n\\t\\t\\t<p class=\\\"f3 ma0 w-100 i tracked\\\" style=\\\"font-family: Arial\\\">1234567890 !@#$%^&*()_+~{}|:\\\"?</p>\\n\\t\\t\\t<p class=\\\"f3 ma0 w-100 i tracked\\\">1234567890 !@#$%^&*()_+~{}|:\\\"?</p>\\n\\t\\t\\t<p class=\\\"f3 ma0 w-100 i tracked\\\" style=\\\"font-family: Arial\\\">1234567890 !@#$%^&*()_+~{}|:\\\"?</p> \")])]);\n}\n\n//# sourceURL=webpack://nathankim7.github.io/./src/App.vue?./node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!./node_modules/vue-loader/dist/templateLoader.js??ruleSet%5B1%5D.rules%5B2%5D!./node_modules/vue-loader/dist/index.js??ruleSet%5B1%5D.rules%5B8%5D.use%5B0%5D");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./src/components/Ants.vue?vue&type=template&id=8c764cc8":
/*!***********************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./src/components/Ants.vue?vue&type=template&id=8c764cc8 ***!
  \***********************************************************************************************************************************************************************************************************************************************************************/
/*! namespace exports */
/*! export render [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"render\": () => /* binding */ render\n/* harmony export */ });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\n\nvar _hoisted_1 = /*#__PURE__*/(0,vue__WEBPACK_IMPORTED_MODULE_0__.createVNode)(\"div\", {\n  id: \"main\",\n  \"class\": \"w-100 h-100\"\n}, null, -1\n/* HOISTED */\n);\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createBlock)(\"div\", null, [_hoisted_1]);\n}\n\n//# sourceURL=webpack://nathankim7.github.io/./src/components/Ants.vue?./node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!./node_modules/vue-loader/dist/templateLoader.js??ruleSet%5B1%5D.rules%5B2%5D!./node_modules/vue-loader/dist/index.js??ruleSet%5B1%5D.rules%5B8%5D.use%5B0%5D");

/***/ }),

/***/ "./src/App.js":
/*!********************!*\
  !*** ./src/App.js ***!
  \********************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n/* harmony import */ var _App_vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./App.vue */ \"./src/App.vue\");\n\n\nvar app = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createApp)(_App_vue__WEBPACK_IMPORTED_MODULE_1__.default);\napp.mount('#app');\n\n//# sourceURL=webpack://nathankim7.github.io/./src/App.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./src/App.vue?vue&type=style&index=0&id=7ba5bd90&lang=css":
/*!*****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./src/App.vue?vue&type=style&index=0&id=7ba5bd90&lang=css ***!
  \*****************************************************************************************************************************************************************************************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_exports__, __webpack_require__.r, module.id, __webpack_require__.d, __webpack_require__.*, module */
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});\n___CSS_LOADER_EXPORT___.push([module.id, \"@import url(https://fonts.googleapis.com/css2?family=Work+Sans:ital,wght@0,400;0,700;1,400;1,700&display=swap);\"]);\n___CSS_LOADER_EXPORT___.push([module.id, \"@import url(https://fonts.googleapis.com/css2?family=Inter:ital,wght@400;700&display=swap);\"]);\n___CSS_LOADER_EXPORT___.push([module.id, \"@import url(https://fonts.googleapis.com/css2?family=Helvetica:ital,wght@0,400;0,700;1,400;1,700&display=swap);\"]);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n#bg {\\n\\tposition: absolute;\\n\\tz-index: 0;\\n}\\n#content {\\n\\tfont-family: 'Work Sans', 'Helvetica', sans-serif;\\n\\tbackground-color: rgba(255, 255, 255, 0.9);\\n\\tz-index: 2;\\n\\tmax-width: 50%;\\n}\\n.content {\\n\\tpadding-left: 1rem;\\n\\tpadding-right: 1rem;\\n}\\n@media screen and (max-width: 400px) {\\n#tit {\\n\\t\\tfont-size: 2.5rem;\\n}\\n#tit2 {\\n\\t\\tfont-size: 1.35rem;\\n\\t\\t/* text-align: left; */\\n}\\n#content {\\n\\t\\tpadding-left: 1rem;\\n\\t\\tpadding-right: 1rem;\\n\\t\\tmax-width: 100%;\\n}\\n.content {\\n\\t\\tpadding-left: 0.5rem;\\n\\t\\tpadding-right: 0.5rem;\\n}\\n}\\n.rainbow-text {\\n  background-image: linear-gradient(to left, violet, indigo, blue, green,indigo);   -webkit-background-clip: text;\\n  color: transparent;\\n  display: inline;\\n}\\nul {\\n\\tlist-style-type: none;\\n}\\nul li::before {\\n\\tcontent: '+ ';\\n\\tfont-weight: bold;\\n}\\nul li {\\n\\tmargin-bottom: 0.25rem;\\n}\\na:link {\\n\\tcolor:#6ba9b3;\\n\\tfont-weight: normal;\\n}\\na:visited {\\n\\tcolor:#3d6166;\\n}\\na:focus {\\n\\tbackground: #bacacc;\\n}\\na:hover {\\n\\tbackground: #bacacc;\\n}\\na:active {\\n}\\n\\n/* @font-face {\\n\\tfont-family: FreeSans;\\n\\tsrc: url('./fonts/FreeSans.woff') format('woff');\\n\\tfont-weight: normal;\\n\\tfont-style: normal;\\n}\\n\\n@font-face {\\n\\tfont-family: FreeSans;\\n\\tsrc: url('./fonts/FreeSansBold.woff') format('woff');\\n\\tfont-weight: bold;\\n\\tfont-style: normal;\\n}\\n\\n@font-face {\\n\\tfont-family: FreeSans;\\n\\tsrc: url('./fonts/FreeSansBoldOblique.woff') format('woff');\\n\\tfont-weight: bold;\\n\\tfont-style: italic;\\n}\\n\\n@font-face {\\n\\tfont-family: FreeSans;\\n\\tsrc: url('./fonts/FreeSansOblique.woff') format('woff');\\n\\tfont-weight: normal;\\n\\tfont-style: italic;\\n} */\\n\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://nathankim7.github.io/./src/App.vue?./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/vue-loader/dist/index.js??ruleSet%5B1%5D.rules%5B8%5D.use%5B0%5D");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 9:0-14 */
/***/ ((module) => {

eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\n//# sourceURL=webpack://nathankim7.github.io/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./src/Nathan_Kim_Resume.pdf":
/*!***********************************!*\
  !*** ./src/Nathan_Kim_Resume.pdf ***!
  \***********************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"Nathan_Kim_Resume.pdf\");\n\n//# sourceURL=webpack://nathankim7.github.io/./src/Nathan_Kim_Resume.pdf?");

/***/ }),

/***/ "./node_modules/style-loader/dist/cjs.js!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./src/App.vue?vue&type=style&index=0&id=7ba5bd90&lang=css":
/*!*********************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/style-loader/dist/cjs.js!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./src/App.vue?vue&type=style&index=0&id=7ba5bd90&lang=css ***!
  \*********************************************************************************************************************************************************************************************************************************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_dist_stylePostLoader_js_node_modules_vue_loader_dist_index_js_ruleSet_1_rules_8_use_0_App_vue_vue_type_style_index_0_id_7ba5bd90_lang_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./App.vue?vue&type=style&index=0&id=7ba5bd90&lang=css */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./src/App.vue?vue&type=style&index=0&id=7ba5bd90&lang=css\");\n\n            \n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_dist_stylePostLoader_js_node_modules_vue_loader_dist_index_js_ruleSet_1_rules_8_use_0_App_vue_vue_type_style_index_0_id_7ba5bd90_lang_css__WEBPACK_IMPORTED_MODULE_1__.default, options);\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_dist_stylePostLoader_js_node_modules_vue_loader_dist_index_js_ruleSet_1_rules_8_use_0_App_vue_vue_type_style_index_0_id_7ba5bd90_lang_css__WEBPACK_IMPORTED_MODULE_1__.default.locals || {});\n\n//# sourceURL=webpack://nathankim7.github.io/./src/App.vue?./node_modules/style-loader/dist/cjs.js!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/vue-loader/dist/index.js??ruleSet%5B1%5D.rules%5B8%5D.use%5B0%5D");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__.nc, __webpack_require__.* */
/*! CommonJS bailout: module.exports is used directly at 230:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : 0;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://nathankim7.github.io/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/two.js/build/two.module.js":
/*!*************************************************!*\
  !*** ./node_modules/two.js/build/two.module.js ***!
  \*************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: module.loaded, module.id, module, __webpack_require__.hmd, __webpack_exports__, __webpack_require__.r, __webpack_require__.g, __webpack_require__.amdO, __webpack_require__.d, __webpack_require__.* */
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* module decorator */ module = __webpack_require__.hmd(module);\n/**\r\n\nMIT License\r\n\r\nCopyright (c) 2012 - 2020 jonobr1 / http://jonobr1.com\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\n*/\r\n\n(undefined || self || window).Two = (function(previousTwo) {\r\n\r\n  var root;\r\n  if (typeof window !== 'undefined') {\r\n    root = window;\r\n  } else if (typeof __webpack_require__.g !== 'undefined') {\r\n    root = __webpack_require__.g;\r\n  } else if (typeof self !== 'undefined') {\r\n    root = self;\r\n  } else {\r\n    root = this;\r\n  }\r\n\r\n  var toString = Object.prototype.toString;\r\n  /**\r\n   * @name _\r\n   * @interface\r\n   * @private\r\n   * @description A collection of useful functions borrowed and repurposed from Underscore.js.\r\n   * @see {@link http://underscorejs.org/}\r\n   */\r\n  var _ = {\r\n    // http://underscorejs.org/ • 1.8.3\r\n    _indexAmount: 0,\r\n    natural: {\r\n      slice: Array.prototype.slice,\r\n      indexOf: Array.prototype.indexOf,\r\n      keys: Object.keys,\r\n      bind: Function.prototype.bind,\r\n      create: Object.create\r\n    },\r\n    identity: function(value) {\r\n      return value;\r\n    },\r\n    isArguments: function(obj) {\r\n      return toString.call(obj) === '[object Arguments]';\r\n    },\r\n    isFunction: function(obj) {\r\n      return toString.call(obj) === '[object Function]';\r\n    },\r\n    isString: function(obj) {\r\n      return toString.call(obj) === '[object String]';\r\n    },\r\n    isNumber: function(obj) {\r\n      return toString.call(obj) === '[object Number]';\r\n    },\r\n    isDate: function(obj) {\r\n      return toString.call(obj) === '[object Date]';\r\n    },\r\n    isRegExp: function(obj) {\r\n      return toString.call(obj) === '[object RegExp]';\r\n    },\r\n    isError: function(obj) {\r\n      return toString.call(obj) === '[object Error]';\r\n    },\r\n    isFinite: function(obj) {\r\n      return isFinite(obj) && !isNaN(parseFloat(obj));\r\n    },\r\n    isNaN: function(obj) {\r\n      return _.isNumber(obj) && obj !== +obj;\r\n    },\r\n    isBoolean: function(obj) {\r\n      return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\r\n    },\r\n    isNull: function(obj) {\r\n      return obj === null;\r\n    },\r\n    isUndefined: function(obj) {\r\n      return obj === void 0;\r\n    },\r\n    isEmpty: function(obj) {\r\n      if (obj == null) return true;\r\n      if (isArrayLike && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\r\n      return _.keys(obj).length === 0;\r\n    },\r\n    isElement: function(obj) {\r\n      return !!(obj && obj.nodeType === 1);\r\n    },\r\n    isArray: Array.isArray || function(obj) {\r\n      return toString.call(obj) === '[object Array]';\r\n    },\r\n    isObject: function(obj) {\r\n      var type = typeof obj;\r\n      return type === 'function' || type === 'object' && !!obj;\r\n    },\r\n    toArray: function(obj) {\r\n      if (!obj) {\r\n        return [];\r\n      }\r\n      if (_.isArray(obj)) {\r\n        return slice.call(obj);\r\n      }\r\n      if (isArrayLike(obj)) {\r\n        return _.map(obj, _.identity);\r\n      }\r\n      return _.values(obj);\r\n    },\r\n    range: function(start, stop, step) {\r\n      if (stop == null) {\r\n        stop = start || 0;\r\n        start = 0;\r\n      }\r\n      step = step || 1;\r\n\r\n      var length = Math.max(Math.ceil((stop - start) / step), 0);\r\n      var range = Array(length);\r\n\r\n      for (var idx = 0; idx < length; idx++, start += step) {\r\n        range[idx] = start;\r\n      }\r\n\r\n      return range;\r\n    },\r\n    indexOf: function(list, item) {\r\n      if (_.natural.indexOf) {\r\n        return _.natural.indexOf.call(list, item);\r\n      }\r\n      for (var i = 0; i < list.length; i++) {\r\n        if (list[i] === item) {\r\n          return i;\r\n        }\r\n      }\r\n      return -1;\r\n    },\r\n    has: function(obj, key) {\r\n      return obj != null && hasOwnProperty.call(obj, key);\r\n    },\r\n    bind: function(func, ctx) {\r\n      var natural = _.natural.bind;\r\n      if (natural && func.bind === natural) {\r\n        return natural.apply(func, slice.call(arguments, 1));\r\n      }\r\n      var args = slice.call(arguments, 2);\r\n      return function() {\r\n        func.apply(ctx, args);\r\n      };\r\n    },\r\n    extend: function(base) {\r\n      var sources = slice.call(arguments, 1);\r\n      for (var i = 0; i < sources.length; i++) {\r\n        var obj = sources[i];\r\n        for (var k in obj) {\r\n          base[k] = obj[k];\r\n        }\r\n      }\r\n      return base;\r\n    },\r\n    defaults: function(base) {\r\n      var sources = slice.call(arguments, 1);\r\n      for (var i = 0; i < sources.length; i++) {\r\n        var obj = sources[i];\r\n        for (var k in obj) {\r\n          if (base[k] === void 0) {\r\n            base[k] = obj[k];\r\n          }\r\n        }\r\n      }\r\n      return base;\r\n    },\r\n    keys: function(obj) {\r\n      if (!_.isObject(obj)) {\r\n        return [];\r\n      }\r\n      if (_.natural.keys) {\r\n        return _.natural.keys(obj);\r\n      }\r\n      var keys = [];\r\n      for (var k in obj) {\r\n        if (_.has(obj, k)) {\r\n          keys.push(k);\r\n        }\r\n      }\r\n      return keys;\r\n    },\r\n    values: function(obj) {\r\n      var keys = _.keys(obj);\r\n      var values = [];\r\n      for (var i = 0; i < keys.length; i++) {\r\n        var k = keys[i];\r\n        values.push(obj[k]);\r\n      }\r\n      return values;\r\n    },\r\n    each: function(obj, iteratee, context) {\r\n      var ctx = context || this;\r\n      var keys = !isArrayLike(obj) && _.keys(obj);\r\n      var length = (keys || obj).length;\r\n      for (var i = 0; i < length; i++) {\r\n        var k = keys ? keys[i] : i;\r\n        iteratee.call(ctx, obj[k], k, obj);\r\n      }\r\n      return obj;\r\n    },\r\n    map: function(obj, iteratee, context) {\r\n      var ctx = context || this;\r\n      var keys = !isArrayLike(obj) && _.keys(obj);\r\n      var length = (keys || obj).length;\r\n      var result = [];\r\n      for (var i = 0; i < length; i++) {\r\n        var k = keys ? keys[i] : i;\r\n        result[i] = iteratee.call(ctx, obj[k], k, obj);\r\n      }\r\n      return result;\r\n    },\r\n    once: function(func) {\r\n      var init = false;\r\n      return function() {\r\n        if (init) {\r\n          return func;\r\n        }\r\n        init = true;\r\n        return func.apply(this, arguments);\r\n      };\r\n    },\r\n    after: function(times, func) {\r\n      return function() {\r\n        while (--times < 1) {\r\n          return func.apply(this, arguments);\r\n        }\r\n      };\r\n    },\r\n    uniqueId: function(prefix) {\r\n      var id = ++_._indexAmount + '';\r\n      return prefix ? prefix + id : id;\r\n    }\r\n  };\r\n\r\n  // Constants\r\n\r\n  var sin = Math.sin,\r\n    cos = Math.cos,\r\n    acos = Math.acos,\r\n    atan2 = Math.atan2,\r\n    sqrt = Math.sqrt,\r\n    round = Math.round,\r\n    abs = Math.abs,\r\n    PI = Math.PI,\r\n    TWO_PI = PI * 2,\r\n    HALF_PI = PI / 2,\r\n    pow = Math.pow,\r\n    min = Math.min,\r\n    max = Math.max;\r\n\r\n  // Localized variables\r\n\r\n  var count = 0;\r\n  var slice = _.natural.slice;\r\n  var perf = ((root.performance && root.performance.now) ? root.performance : Date);\r\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\r\n  var getLength = function(obj) {\r\n    return obj == null ? void 0 : obj['length'];\r\n  };\r\n  var isArrayLike = function(collection) {\r\n    var length = getLength(collection);\r\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\r\n  };\r\n\r\n  // Cross browser dom events.\r\n\r\n  var dom = {\r\n\r\n    temp: (root.document ? root.document.createElement('div') : {}),\r\n\r\n    hasEventListeners: _.isFunction(root.addEventListener),\r\n\r\n    bind: function(elem, event, func, bool) {\r\n      if (this.hasEventListeners) {\r\n        elem.addEventListener(event, func, !!bool);\r\n      } else {\r\n        elem.attachEvent('on' + event, func);\r\n      }\r\n      return dom;\r\n    },\r\n\r\n    unbind: function(elem, event, func, bool) {\r\n      if (dom.hasEventListeners) {\r\n        elem.removeEventListeners(event, func, !!bool);\r\n      } else {\r\n        elem.detachEvent('on' + event, func);\r\n      }\r\n      return dom;\r\n    },\r\n\r\n    getRequestAnimationFrame: function() {\r\n\r\n      var lastTime = 0;\r\n      var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n      var request = root.requestAnimationFrame, cancel;\r\n\r\n      if(!request) {\r\n        for (var i = 0; i < vendors.length; i++) {\r\n          request = root[vendors[i] + 'RequestAnimationFrame'] || request;\r\n          cancel = root[vendors[i] + 'CancelAnimationFrame']\r\n            || root[vendors[i] + 'CancelRequestAnimationFrame'] || cancel;\r\n        }\r\n\r\n        request = request || function(callback, element) {\r\n          var currTime = new Date().getTime();\r\n          var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n          var id = root.setTimeout(function() { callback(currTime + timeToCall); }, timeToCall);\r\n          lastTime = currTime + timeToCall;\r\n          return id;\r\n        };\r\n        // cancel = cancel || function(id) {\r\n        //   clearTimeout(id);\r\n        // };\r\n      }\r\n\r\n      request.init = _.once(loop);\r\n\r\n      return request;\r\n\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * @name Two\r\n   * @class\r\n   * @global\r\n   * @param {Object} [options]\r\n   * @param {Boolean} [options.fullscreen=false] - Set to `true` to automatically make the stage adapt to the width and height of the parent document. This parameter overrides `width` and `height` parameters if set to `true`.\r\n   * @param {Number} [options.width=640] - The width of the stage on construction. This can be set at a later time.\r\n   * @param {Number} [options.height=480] - The height of the stage on construction. This can be set at a later time.\r\n   * @param {String} [options.type=Two.Types.svg] - The type of renderer to setup drawing with. See {@link  Two.Types} for available options.\r\n   * @param {Boolean} [options.autostart=false] - Set to `true` to add the instance to draw on `requestAnimationFrame`. This is a convenient substitute for {@link Two#play}.\r\n   * @description The entrypoint for Two.js. Instantiate a `new Two` in order to setup a scene to render to. `Two` is also the publicly accessible namespace that all other sub-classes, functions, and utilities attach to.\r\n   */\r\n  var Two = root.Two = function(options) {\r\n\r\n    // Determine what Renderer to use and setup a scene.\r\n\r\n    var params = _.defaults(options || {}, {\r\n      fullscreen: false,\r\n      width: 640,\r\n      height: 480,\r\n      type: Two.Types.svg,\r\n      autostart: false\r\n    });\r\n\r\n    _.each(params, function(v, k) {\r\n      if (/fullscreen/i.test(k) || /autostart/i.test(k)) {\r\n        return;\r\n      }\r\n      this[k] = v;\r\n    }, this);\r\n\r\n    // Specified domElement overrides type declaration only if the element does not support declared renderer type.\r\n    if (_.isElement(params.domElement)) {\r\n      var tagName = params.domElement.tagName.toLowerCase();\r\n      // TODO: Reconsider this if statement's logic.\r\n      if (!/^(CanvasRenderer-canvas|WebGLRenderer-canvas|SVGRenderer-svg)$/.test(this.type+'-'+tagName)) {\r\n        this.type = Two.Types[tagName];\r\n      }\r\n    }\r\n\r\n    this.renderer = new Two[this.type](this);\r\n    Two.Utils.setPlaying.call(this, params.autostart);\r\n    this.frameCount = 0;\r\n\r\n    if (params.fullscreen) {\r\n\r\n      var fitted = _.bind(fitToWindow, this);\r\n      _.extend(document.body.style, {\r\n        overflow: 'hidden',\r\n        margin: 0,\r\n        padding: 0,\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        position: 'fixed'\r\n      });\r\n      _.extend(this.renderer.domElement.style, {\r\n        display: 'block',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        position: 'fixed'\r\n      });\r\n      dom.bind(root, 'resize', fitted);\r\n      fitted();\r\n\r\n\r\n    } else if (!_.isElement(params.domElement)) {\r\n\r\n      this.renderer.setSize(params.width, params.height, this.ratio);\r\n      this.width = params.width;\r\n      this.height = params.height;\r\n\r\n    }\r\n\r\n    this.renderer.bind(Two.Events.resize, _.bind(updateDimensions, this));\r\n    this.scene = this.renderer.scene;\r\n\r\n    Two.Instances.push(this);\r\n    if (params.autostart) {\r\n      raf.init();\r\n    }\r\n\r\n  };\r\n\r\n  _.extend(Two, {\r\n\r\n    // Access to root in other files.\r\n\r\n    /**\r\n     * @name Two.root\r\n     * @description The root of the session context. In the browser this is the `window` variable. This varies in headless environments.\r\n     */\r\n    root: root,\r\n\r\n    /**\r\n     * @name Two.nextFrameID\r\n     * @property {Integer}\r\n     * @description The id of the next requestAnimationFrame function.\r\n     */\r\n    nextFrameID: null,\r\n\r\n    // Primitive\r\n\r\n    /**\r\n     * @name Two.Array\r\n     * @description A simple polyfill for Float32Array.\r\n     */\r\n    Array: root.Float32Array || Array,\r\n\r\n    /**\r\n     * @name Two.Types\r\n     * @property {Object} - The different rendering types availabe in the library.\r\n     */\r\n    Types: {\r\n      webgl: 'WebGLRenderer',\r\n      svg: 'SVGRenderer',\r\n      canvas: 'CanvasRenderer'\r\n    },\r\n\r\n    /**\r\n     * @name Two.Version\r\n     * @property {String} - The current working version of the library.\r\n     */\r\n    Version: 'v0.7.0',\r\n\r\n    /**\r\n     * @name Two.PublishDate\r\n     * @property {String} - The automatically generated publish date in the build process to verify version release candidates.\r\n     */\r\n    PublishDate: '2020-01-22T21:17:28.421Z',\r\n\r\n    /**\r\n     * @name Two.Identifier\r\n     * @property {String} - String prefix for all Two.js object's ids. This trickles down to SVG ids.\r\n     */\r\n    Identifier: 'two-',\r\n\r\n    /**\r\n     * @name Two.Events\r\n     * @property {Object} - Map of possible events in Two.js.\r\n     */\r\n    Events: {\r\n      play: 'play',\r\n      pause: 'pause',\r\n      update: 'update',\r\n      render: 'render',\r\n      resize: 'resize',\r\n      change: 'change',\r\n      remove: 'remove',\r\n      insert: 'insert',\r\n      order: 'order',\r\n      load: 'load'\r\n    },\r\n\r\n    /**\r\n     * @name Two.Commands\r\n     * @property {Object} - Map of possible path commands. Taken from the SVG specification.\r\n     */\r\n    Commands: {\r\n      move: 'M',\r\n      line: 'L',\r\n      curve: 'C',\r\n      arc: 'A',\r\n      close: 'Z'\r\n    },\r\n\r\n    /**\r\n     * @name Two.Resolution\r\n     * @property {Number} - Default amount of vertices to be used for interpreting Arcs and ArcSegments.\r\n     */\r\n    Resolution: 12,\r\n\r\n    /**\r\n     * @name Two.Instances\r\n     * @property {Two[]} - Registered list of all Two.js instances in the current session.\r\n     */\r\n    Instances: [],\r\n\r\n    /**\r\n     * @function Two.noConflict\r\n     * @description A function to revert the global namespaced `Two` variable to its previous incarnation.\r\n     * @returns {Two} Returns access to the top-level Two.js library for local use.\r\n     */\r\n    noConflict: function() {\r\n      root.Two = previousTwo;\r\n      return Two;\r\n    },\r\n\r\n    /**\r\n     * @function Two.uniqueId\r\n     * @description Simple method to access an incrementing value. Used for `id` allocation on all Two.js objects.\r\n     * @returns {Number} Ever increasing integer.\r\n     */\r\n    uniqueId: function() {\r\n      var id = count;\r\n      count++;\r\n      return id;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Utils\r\n     * @interface\r\n     * @implements {_}\r\n     * @description A hodgepodge of handy functions, math, and properties are stored here.\r\n     */\r\n    Utils: _.extend(_, {\r\n\r\n      /**\r\n       * @name Two.Utils.performance\r\n       * @property {Date} - A special `Date` like object to get the current millis of the session. Used internally to calculate time between frames.\r\n       * e.g: `Two.Utils.performance.now() // milliseconds since epoch`\r\n       */\r\n      performance: perf,\r\n\r\n      /**\r\n       * @name Two.Utils.defineProperty\r\n       * @function\r\n       * @this Two#\r\n       * @param {String} property - The property to add an enumerable getter / setter to.\r\n       * @description Convenience function to setup the flag based getter / setter that most properties are defined as in Two.js.\r\n       */\r\n      defineProperty: function(property) {\r\n\r\n        var object = this;\r\n        var secret = '_' + property;\r\n        var flag = '_flag' + property.charAt(0).toUpperCase() + property.slice(1);\r\n\r\n        Object.defineProperty(object, property, {\r\n          enumerable: true,\r\n          get: function() {\r\n            return this[secret];\r\n          },\r\n          set: function(v) {\r\n            this[secret] = v;\r\n            this[flag] = true;\r\n          }\r\n        });\r\n\r\n      },\r\n\r\n      Image: null,\r\n\r\n      isHeadless: false,\r\n\r\n      /**\r\n       * @name Two.Utils.shim\r\n       * @function\r\n       * @param {canvas} canvas - The instanced `Canvas` object provided by `node-canvas`.\r\n       * @param {Image} [Image] - The prototypical `Image` object provided by `node-canvas`. This is only necessary to pass if you're going to load bitmap imagery.\r\n       * @returns {canvas} Returns the instanced canvas object you passed from with additional attributes needed for Two.js.\r\n       * @description Convenience method for defining all the dependencies from the npm package `node-canvas`. See [node-canvas]{@link https://github.com/Automattic/node-canvas} for additional information on setting up HTML5 `<canvas />` drawing in a node.js environment.\r\n       */\r\n      shim: function(canvas, Image) {\r\n        Two.CanvasRenderer.Utils.shim(canvas);\r\n        if (!_.isUndefined(Image)) {\r\n          Two.Utils.Image = Image;\r\n        }\r\n        Two.Utils.isHeadless = true;\r\n        return canvas;\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.release\r\n       * @function\r\n       * @param {Object} obj\r\n       * @returns {Object} The object passed for event deallocation.\r\n       * @description Release an arbitrary class' events from the Two.js corpus and recurse through its children and or vertices.\r\n       */\r\n      release: function(obj) {\r\n\r\n        if (!_.isObject(obj)) {\r\n          return;\r\n        }\r\n\r\n        if (_.isFunction(obj.unbind)) {\r\n          obj.unbind();\r\n        }\r\n\r\n        if (obj.vertices) {\r\n          if (_.isFunction(obj.vertices.unbind)) {\r\n            obj.vertices.unbind();\r\n          }\r\n          _.each(obj.vertices, function(v) {\r\n            if (_.isFunction(v.unbind)) {\r\n              v.unbind();\r\n            }\r\n          });\r\n        }\r\n\r\n        if (obj.children) {\r\n          _.each(obj.children, function(obj) {\r\n            Two.Utils.release(obj);\r\n          });\r\n        }\r\n\r\n        return obj;\r\n\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.xhr\r\n       * @function\r\n       * @param {String} path\r\n       * @param {Function} callback\r\n       * @returns {XMLHttpRequest} The constructed and called XHR request.\r\n       * @description Canonical method to initiate `GET` requests in the browser. Mainly used by {@link Two#load} method.\r\n       */\r\n      xhr: function(path, callback) {\r\n\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', path);\r\n\r\n        xhr.onreadystatechange = function() {\r\n          if (xhr.readyState === 4 && xhr.status === 200) {\r\n            callback(xhr.responseText);\r\n          }\r\n        };\r\n\r\n        xhr.send();\r\n        return xhr;\r\n\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.Curve\r\n       * @property {Object} - Additional utility constant variables related to curve math and calculations.\r\n       */\r\n      Curve: {\r\n\r\n        CollinearityEpsilon: pow(10, -30),\r\n\r\n        RecursionLimit: 16,\r\n\r\n        CuspLimit: 0,\r\n\r\n        Tolerance: {\r\n          distance: 0.25,\r\n          angle: 0,\r\n          epsilon: Number.EPSILON\r\n        },\r\n\r\n        // Lookup tables for abscissas and weights with values for n = 2 .. 16.\r\n        // As values are symmetric, only store half of them and adapt algorithm\r\n        // to factor in symmetry.\r\n        abscissas: [\r\n          [  0.5773502691896257645091488],\r\n          [0,0.7745966692414833770358531],\r\n          [  0.3399810435848562648026658,0.8611363115940525752239465],\r\n          [0,0.5384693101056830910363144,0.9061798459386639927976269],\r\n          [  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\r\n          [0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\r\n          [  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\r\n          [0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\r\n          [  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\r\n          [0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\r\n          [  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\r\n          [0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\r\n          [  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\r\n          [0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\r\n          [  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\r\n        ],\r\n\r\n        weights: [\r\n          [1],\r\n          [0.8888888888888888888888889,0.5555555555555555555555556],\r\n          [0.6521451548625461426269361,0.3478548451374538573730639],\r\n          [0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\r\n          [0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\r\n          [0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\r\n          [0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\r\n          [0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\r\n          [0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\r\n          [0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\r\n          [0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\r\n          [0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\r\n          [0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\r\n          [0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\r\n          [0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\r\n        ]\r\n\r\n      },\r\n\r\n      devicePixelRatio: root.devicePixelRatio || 1,\r\n\r\n      getBackingStoreRatio: function(ctx) {\r\n        return ctx.webkitBackingStorePixelRatio ||\r\n          ctx.mozBackingStorePixelRatio ||\r\n          ctx.msBackingStorePixelRatio ||\r\n          ctx.oBackingStorePixelRatio ||\r\n          ctx.backingStorePixelRatio || 1;\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.getRatio\r\n       * @function\r\n       * @param {Canvas.context2D} ctx\r\n       * @returns {Number} The ratio of a unit in Two.js to the pixel density of a session's screen.\r\n       * @see [High DPI Rendering]{@link http://www.html5rocks.com/en/tutorials/canvas/hidpi/}\r\n       */\r\n      getRatio: function(ctx) {\r\n        return Two.Utils.devicePixelRatio / getBackingStoreRatio(ctx);\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.setPlaying\r\n       * @function\r\n       * @this Two#\r\n       * @returns {Two} The instance called with for potential chaining.\r\n       * @description Internal convenience method to properly defer play calling until after all objects have been updated with their newest styles.\r\n       */\r\n      setPlaying: function(b) {\r\n\r\n        this.playing = !!b;\r\n        return this;\r\n\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.getComputedMatrix\r\n       * @function\r\n       * @param {Two.Shape} object - The Two.js object that has a matrix property to calculate from.\r\n       * @param {Two.Matrix} [matrix] - The matrix to apply calculated transformations to if available.\r\n       * @returns {Two.Matrix} The computed matrix of a nested object. If no `matrix` was passed in arguments then a `new Two.Matrix` is returned.\r\n       * @description Method to get the world space transformation of a given object in a Two.js scene.\r\n       */\r\n      getComputedMatrix: function(object, matrix) {\r\n\r\n        matrix = (matrix && matrix.identity()) || new Two.Matrix();\r\n        var parent = object, matrices = [];\r\n\r\n        while (parent && parent._matrix) {\r\n          matrices.push(parent._matrix);\r\n          parent = parent.parent;\r\n        }\r\n\r\n        matrices.reverse();\r\n\r\n        for (var i = 0; i < matrices.length; i++) {\r\n\r\n          var m = matrices[i];\r\n          var e = m.elements;\r\n          matrix.multiply(\r\n            e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8], e[9]);\r\n\r\n        }\r\n\r\n        return matrix;\r\n\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.decomposeMatrix\r\n       * @function\r\n       * @param {Two.Matrix} matrix - The matrix to decompose.\r\n       * @returns {Object} An object containing relevant skew values.\r\n       * @description Decompose a 2D 3x3 Matrix to find the skew.\r\n       */\r\n      decomposeMatrix: function(matrix) {\r\n\r\n        // TODO: Include skewX, skewY\r\n\r\n        return {\r\n            translateX: matrix.e,\r\n            translateY: matrix.f,\r\n            scaleX: matrix.a,\r\n            scaleY: matrix.d,\r\n            rotation: Math.asin(- matrix.b)\r\n        };\r\n\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.extractCSSText\r\n       * @function\r\n       * @param {String} text - The CSS text body to be parsed and extracted.\r\n       * @param {Object} [styles] - The styles object to apply CSS key values to.\r\n       * @returns {Object} styles\r\n       * @description Parse CSS text body and apply them as key value pairs to a JavaScript object.\r\n       */\r\n      extractCSSText: function(text, styles) {\r\n\r\n        var commands, command, name, value;\r\n\r\n        if (!styles) {\r\n          styles = {};\r\n        }\r\n\r\n        commands = text.split(';');\r\n\r\n        for (var i = 0; i < commands.length; i++) {\r\n          command = commands[i].split(':');\r\n          name = command[0];\r\n          value = command[1];\r\n          if (_.isUndefined(name) || _.isUndefined(value)) {\r\n            continue;\r\n          }\r\n          styles[name] = value.replace(/\\s/, '');\r\n        }\r\n\r\n        return styles;\r\n\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.getSvgStyles\r\n       * @function\r\n       * @param {SvgNode} node - The SVG node to parse.\r\n       * @returns {Object} styles\r\n       * @description Get the CSS comands from the `style` attribute of an SVG node and apply them as key value pairs to a JavaScript object.\r\n       */\r\n      getSvgStyles: function(node) {\r\n\r\n        var styles = {};\r\n        var attributes = Two.Utils.getSvgAttributes(node);\r\n        var length = Math.max(attributes.length, node.style.length);\r\n\r\n        for (var i = 0; i < length; i++) {\r\n\r\n          var command = node.style[i];\r\n          var attribute = attributes[i];\r\n\r\n          if (command) {\r\n            styles[command] = node.style[command];\r\n          }\r\n          if (attribute) {\r\n            styles[attribute] = node.getAttribute(attribute);\r\n          }\r\n\r\n        }\r\n\r\n        return styles;\r\n\r\n      },\r\n\r\n      getSvgAttributes: function(node) {\r\n\r\n        var attributes = node.getAttributeNames();\r\n\r\n        // Reserved attributes to remove\r\n        var keywords = ['id', 'class', 'transform', 'xmlns', 'viewBox'];\r\n\r\n        for (var i = 0; i < keywords.length; i++) {\r\n          var keyword = keywords[i];\r\n          var index = _.indexOf(attributes, keyword);\r\n          if (index >= 0) {\r\n            attributes.splice(index, 1);\r\n          }\r\n        }\r\n\r\n        return attributes;\r\n\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.applySvgViewBox\r\n       * @function\r\n       * @param {Two.Shape} node - The Two.js object to apply viewbox matrix to\r\n       * @param {String} value - The viewBox value from the SVG attribute\r\n       * @returns {Two.Shape} node\r\n       @ @description\r\n       */\r\n      applySvgViewBox: function(node, value) {\r\n\r\n        var elements = value.split(/\\s/);\r\n\r\n        var x = parseFloat(elements[0]);\r\n        var y = parseFloat(elements[1]);\r\n        var width = parseFloat(elements[2]);\r\n        var height = parseFloat(elements[3]);\r\n\r\n        var s = Math.min(this.width / width, this.height / height);\r\n\r\n        node.translation.x -= x * s;\r\n        node.translation.y -= y * s;\r\n        node.scale = s;\r\n\r\n        return node;\r\n\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.applySvgAttributes\r\n       * @function\r\n       * @param {SvgNode} node - An SVG Node to extrapolate attributes from.\r\n       * @param {Two.Shape} elem - The Two.js object to apply extrapolated attributes to.\r\n       * @returns {Two.Shape} The Two.js object passed now with applied attributes.\r\n       * @description This function iterates through an SVG Node's properties and stores ones of interest. It tries to resolve styles applied via CSS as well.\r\n       * @TODO Reverse calculate {@link Two.Gradient}s for fill / stroke of any given path.\r\n       */\r\n      applySvgAttributes: function(node, elem, parentStyles) {\r\n\r\n        var  styles = {}, attributes = {}, extracted = {}, i, key, value, attr;\r\n\r\n        // Not available in non browser environments\r\n        if (root.getComputedStyle) {\r\n          // Convert CSSStyleDeclaration to a normal object\r\n          var computedStyles = root.getComputedStyle(node);\r\n          i = computedStyles.length;\r\n\r\n          while (i--) {\r\n            key = computedStyles[i];\r\n            value = computedStyles[key];\r\n            // Gecko returns undefined for unset properties\r\n            // Webkit returns the default value\r\n            if (!_.isUndefined(value)) {\r\n              styles[key] = value;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Convert NodeMap to a normal object\r\n        for (i = 0; i < node.attributes.length; i++) {\r\n          attr = node.attributes[i];\r\n          if (/style/i.test(attr.nodeName)) {\r\n            Two.Utils.extractCSSText(attr.value, extracted);\r\n          } else {\r\n            attributes[attr.nodeName] = attr.value;\r\n          }\r\n        }\r\n\r\n        // Getting the correct opacity is a bit tricky, since SVG path elements don't\r\n        // support opacity as an attribute, but you can apply it via CSS.\r\n        // So we take the opacity and set (stroke/fill)-opacity to the same value.\r\n        if (!_.isUndefined(styles.opacity)) {\r\n          styles['stroke-opacity'] = styles.opacity;\r\n          styles['fill-opacity'] = styles.opacity;\r\n          delete styles.opacity;\r\n        }\r\n\r\n        // Merge attributes and applied styles (attributes take precedence)\r\n        if (parentStyles) {\r\n          _.defaults(styles, parentStyles);\r\n        }\r\n        _.extend(styles, attributes, extracted);\r\n\r\n        // Similarly visibility is influenced by the value of both display and visibility.\r\n        // Calculate a unified value here which defaults to `true`.\r\n        styles.visible = !(_.isUndefined(styles.display) && /none/i.test(styles.display))\r\n          || (_.isUndefined(styles.visibility) && /hidden/i.test(styles.visibility));\r\n\r\n        // Now iterate the whole thing\r\n        for (key in styles) {\r\n          value = styles[key];\r\n\r\n          switch (key) {\r\n            case 'transform':\r\n              // TODO: Check this out https://github.com/paperjs/paper.js/blob/develop/src/svg/SvgImport.js#L315\r\n              if (/none/i.test(value)) break;\r\n              var m = (node.transform && node.transform.baseVal && node.transform.baseVal.length > 0)\r\n                ? node.transform.baseVal[0].matrix\r\n                : (node.getCTM ? node.getCTM() : null);\r\n\r\n              // Might happen when transform string is empty or not valid.\r\n              if (_.isNull(m)) break;\r\n\r\n              // // Option 1: edit the underlying matrix and don't force an auto calc.\r\n              // var m = node.getCTM();\r\n              // elem._matrix.manual = true;\r\n              // elem._matrix.set(m.a, m.b, m.c, m.d, m.e, m.f);\r\n\r\n              // Option 2: Decompose and infer Two.js related properties.\r\n              var transforms = Two.Utils.decomposeMatrix(m);\r\n\r\n              elem.translation.set(transforms.translateX, transforms.translateY);\r\n              elem.rotation = Math.PI * (transforms.rotation / 180);\r\n              elem.scale = new Two.Vector(transforms.scaleX, transforms.scaleY);\r\n\r\n              var x = parseFloat((styles.x + '').replace('px'));\r\n              var y = parseFloat((styles.y + '').replace('px'));\r\n\r\n              // Override based on attributes.\r\n              if (x) {\r\n                elem.translation.x = x;\r\n              }\r\n\r\n              if (y) {\r\n                elem.translation.y = y;\r\n              }\r\n\r\n              break;\r\n            case 'viewBox':\r\n              Two.Utils.applySvgViewBox.call(this, elem, value);\r\n              break;\r\n            case 'visible':\r\n              if (elem instanceof Two.Group) {\r\n                elem._visible = value;\r\n                break;\r\n              }\r\n              elem.visible = value;\r\n              break;\r\n            case 'stroke-linecap':\r\n              if (elem instanceof Two.Group) {\r\n                elem._cap = value;\r\n                break;\r\n              }\r\n              elem.cap = value;\r\n              break;\r\n            case 'stroke-linejoin':\r\n              if (elem instanceof Two.Group) {\r\n                elem._join = value;\r\n                break;\r\n              }\r\n              elem.join = value;\r\n              break;\r\n            case 'stroke-miterlimit':\r\n              if (elem instanceof Two.Group) {\r\n                elem._miter = value;\r\n                break;\r\n              }\r\n              elem.miter = value;\r\n              break;\r\n            case 'stroke-width':\r\n              if (elem instanceof Two.Group) {\r\n                elem._linewidth = parseFloat(value);\r\n                break;\r\n              }\r\n              elem.linewidth = parseFloat(value);\r\n              break;\r\n            case 'opacity':\r\n            case 'stroke-opacity':\r\n            case 'fill-opacity':\r\n              // Only apply styles to rendered shapes\r\n              // in the scene.\r\n              if (elem instanceof Two.Group) {\r\n                elem._opacity = parseFloat(value);\r\n                break;\r\n              }\r\n              elem.opacity = parseFloat(value);\r\n              break;\r\n            case 'fill':\r\n            case 'stroke':\r\n              if (elem instanceof Two.Group) {\r\n                key = '_' + key;\r\n              }\r\n              if (/url\\(#.*\\)/i.test(value)) {\r\n                var scene = Two.Utils.getScene(this);\r\n                elem[key] = scene.getById(\r\n                  value.replace(/url\\(#(.*)\\)/i, '$1'));\r\n              } else {\r\n                elem[key] = (/none/i.test(value)) ? 'transparent' : value;\r\n              }\r\n              break;\r\n            case 'id':\r\n              elem.id = value;\r\n              // Overwritten id for non-conflicts on same page SVG documents\r\n              // TODO: Make this non-descructive\r\n              node.id = value + '-' + Two.Identifier + 'applied';\r\n              break;\r\n            case 'class':\r\n            case 'className':\r\n              elem.classList = value.split(' ');\r\n              break;\r\n          }\r\n        }\r\n\r\n        return styles;\r\n\r\n      },\r\n\r\n      /**\r\n       * @name two.Utils.getScene\r\n       * @param {Two.Shape} node - The currently available object in the scenegraph.\r\n       * @returns {Two.Group} - The highest order {@link Two.Group} in the scenegraph.\r\n       * @property {Function}\r\n       */\r\n      getScene: function(node) {\r\n\r\n        while (node.parent) {\r\n          node = node.parent;\r\n        }\r\n\r\n        return node.scene;\r\n\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.read\r\n       * @property {Object} read - A map of functions to read any number of SVG node types and create Two.js equivalents of them. Primarily used by the {@link Two#interpret} method.\r\n       */\r\n      read: {\r\n\r\n        svg: function(node) {\r\n\r\n          var svg = Two.Utils.read.g.call(this, node);\r\n          var viewBox = node.getAttribute('viewBox');\r\n          // Two.Utils.applySvgViewBox(svg, viewBox);\r\n\r\n          return svg;\r\n\r\n        },\r\n\r\n        defs: function(node) {\r\n          var error = new Two.Utils.Error('interpret <defs /> not supported.');\r\n          console.warn(error.name, error.message);\r\n          return null;\r\n        },\r\n\r\n        use: function(node) {\r\n          var error = new Two.Utils.Error('interpret <use /> not supported.');\r\n          console.warn(error.name, error.message);\r\n          return null;\r\n        },\r\n\r\n        g: function(node, parentStyles) {\r\n\r\n          var styles, attrs;\r\n          var group = new Two.Group();\r\n\r\n          Two.Utils.applySvgAttributes.call(this, node, group, parentStyles);\r\n\r\n          this.add(group);\r\n\r\n          // Switched up order to inherit more specific styles\r\n          styles = Two.Utils.getSvgStyles.call(this, node);\r\n\r\n          for (var i = 0, l = node.childNodes.length; i < l; i++) {\r\n            var n = node.childNodes[i];\r\n            var tag = n.nodeName;\r\n            if (!tag) return;\r\n\r\n            var tagName = tag.replace(/svg:/ig, '').toLowerCase();\r\n\r\n            if (tagName in Two.Utils.read) {\r\n              var o = Two.Utils.read[tagName].call(group, n, styles);\r\n              if (!!o && !o.parent) {\r\n                group.add(o);\r\n              }\r\n            }\r\n          }\r\n\r\n          return group;\r\n\r\n        },\r\n\r\n        polygon: function(node, parentStyles) {\r\n\r\n          var points = node.getAttribute('points');\r\n\r\n          var verts = [];\r\n          points.replace(/(-?[\\d.?]+)[,|\\s](-?[\\d.?]+)/g, function(match, p1, p2) {\r\n            verts.push(new Two.Anchor(parseFloat(p1), parseFloat(p2)));\r\n          });\r\n\r\n          var poly = new Two.Path(verts, true).noStroke();\r\n          poly.fill = 'black';\r\n\r\n          Two.Utils.applySvgAttributes.call(this, node, poly, parentStyles);\r\n\r\n          return poly;\r\n\r\n        },\r\n\r\n        polyline: function(node, parentStyles) {\r\n          var poly = Two.Utils.read.polygon.call(this, node, parentStyles);\r\n          poly.closed = false;\r\n          return poly;\r\n        },\r\n\r\n        path: function(node, parentStyles) {\r\n\r\n          var path = node.getAttribute('d');\r\n          var points = [];\r\n          var closed = false, relative = false;\r\n\r\n          if (path) {\r\n\r\n            // Create a Two.Path from the paths.\r\n\r\n            var coord = new Two.Anchor();\r\n            var control, coords;\r\n            var commands = path.match(/[a-df-z][^a-df-z]*/ig);\r\n            var last = commands.length - 1;\r\n\r\n            // Split up polybeziers\r\n\r\n            _.each(commands.slice(0), function(command, i) {\r\n\r\n              var number, fid, lid, numbers, first, s;\r\n              var j, k, ct, l, times;\r\n\r\n              var type = command[0];\r\n              var lower = type.toLowerCase();\r\n              var items = command.slice(1).trim().split(/[\\s,]+|(?=\\s?[+-])/);\r\n              var pre, post, result = [], bin;\r\n              var hasDoubleDecimals = false;\r\n\r\n              // Handle double decimal values e.g: 48.6037.71.8\r\n              // Like: https://m.abcsofchinese.com/images/svg/亼ji2.svg\r\n              for (j = 0; j < items.length; j++) {\r\n\r\n                number = items[j];\r\n                fid = number.indexOf('.');\r\n                lid = number.lastIndexOf('.');\r\n\r\n                if (fid !== lid) {\r\n\r\n                  numbers = number.split('.');\r\n                  first = numbers[0] + '.' + numbers[1];\r\n\r\n                  items.splice(j, 1, first);\r\n\r\n                  for (s = 2; s < numbers.length; s++) {\r\n                    items.splice(j + s - 1, 0, '0.' + numbers[s]);\r\n                  }\r\n\r\n                  hasDoubleDecimals = true;\r\n\r\n                }\r\n\r\n              }\r\n\r\n              if (hasDoubleDecimals) {\r\n                command = type + items.join(',');\r\n              }\r\n\r\n              if (i <= 0) {\r\n                commands = [];\r\n              }\r\n\r\n              switch (lower) {\r\n                case 'h':\r\n                case 'v':\r\n                  if (items.length > 1) {\r\n                    bin = 1;\r\n                  }\r\n                  break;\r\n                case 'm':\r\n                case 'l':\r\n                case 't':\r\n                  if (items.length > 2) {\r\n                    bin = 2;\r\n                  }\r\n                  break;\r\n                case 's':\r\n                case 'q':\r\n                  if (items.length > 4) {\r\n                    bin = 4;\r\n                  }\r\n                  break;\r\n                case 'c':\r\n                  if (items.length > 6) {\r\n                    bin = 6;\r\n                  }\r\n                  break;\r\n                case 'a':\r\n                  if (items.length > 7) {\r\n                    bin = 7;\r\n                  }\r\n                  break;\r\n              }\r\n\r\n              // This means we have a polybezier.\r\n              if (bin) {\r\n\r\n                for (j = 0, l = items.length, times = 0; j < l; j+=bin) {\r\n\r\n                  ct = type;\r\n                  if (times > 0) {\r\n\r\n                    switch (type) {\r\n                      case 'm':\r\n                        ct = 'l';\r\n                        break;\r\n                      case 'M':\r\n                        ct = 'L';\r\n                        break;\r\n                    }\r\n\r\n                  }\r\n\r\n                  result.push(ct + items.slice(j, j + bin).join(' '));\r\n                  times++;\r\n\r\n                }\r\n\r\n                commands = Array.prototype.concat.apply(commands, result);\r\n\r\n              } else {\r\n\r\n                commands.push(command);\r\n\r\n              }\r\n\r\n            });\r\n\r\n            // Create the vertices for our Two.Path\r\n\r\n            _.each(commands, function(command, i) {\r\n\r\n              var result, x, y;\r\n              var type = command[0];\r\n              var lower = type.toLowerCase();\r\n\r\n              coords = command.slice(1).trim();\r\n              coords = coords.replace(/(-?\\d+(?:\\.\\d*)?)[eE]([+-]?\\d+)/g, function(match, n1, n2) {\r\n                return parseFloat(n1) * pow(10, n2);\r\n              });\r\n              coords = coords.split(/[\\s,]+|(?=\\s?[+-])/);\r\n              relative = type === lower;\r\n\r\n              var x1, y1, x2, y2, x3, y3, x4, y4, reflection;\r\n\r\n              switch (lower) {\r\n\r\n                case 'z':\r\n                  if (i >= last) {\r\n                    closed = true;\r\n                  } else {\r\n                    x = coord.x;\r\n                    y = coord.y;\r\n                    result = new Two.Anchor(\r\n                      x, y,\r\n                      undefined, undefined,\r\n                      undefined, undefined,\r\n                      Two.Commands.close\r\n                    );\r\n                    // Make coord be the last `m` command\r\n                    for (var j = points.length - 1; j >= 0; j--) {\r\n                      var point = points[j];\r\n                      if (/m/i.test(point.command)) {\r\n                        coord = point;\r\n                        break;\r\n                      }\r\n                    }\r\n                  }\r\n                  break;\r\n\r\n                case 'm':\r\n                case 'l':\r\n\r\n                  control = undefined;\r\n\r\n                  x = parseFloat(coords[0]);\r\n                  y = parseFloat(coords[1]);\r\n\r\n                  result = new Two.Anchor(\r\n                    x, y,\r\n                    undefined, undefined,\r\n                    undefined, undefined,\r\n                    /m/i.test(lower) ? Two.Commands.move : Two.Commands.line\r\n                  );\r\n\r\n                  if (relative) {\r\n                    result.addSelf(coord);\r\n                  }\r\n\r\n                  // result.controls.left.copy(result);\r\n                  // result.controls.right.copy(result);\r\n\r\n                  coord = result;\r\n                  break;\r\n\r\n                case 'h':\r\n                case 'v':\r\n\r\n                  var a = /h/i.test(lower) ? 'x' : 'y';\r\n                  var b = /x/i.test(a) ? 'y' : 'x';\r\n\r\n                  result = new Two.Anchor(\r\n                    undefined, undefined,\r\n                    undefined, undefined,\r\n                    undefined, undefined,\r\n                    Two.Commands.line\r\n                  );\r\n                  result[a] = parseFloat(coords[0]);\r\n                  result[b] = coord[b];\r\n\r\n                  if (relative) {\r\n                    result[a] += coord[a];\r\n                  }\r\n\r\n                  // result.controls.left.copy(result);\r\n                  // result.controls.right.copy(result);\r\n\r\n                  coord = result;\r\n                  break;\r\n\r\n                case 'c':\r\n                case 's':\r\n\r\n                  x1 = coord.x;\r\n                  y1 = coord.y;\r\n\r\n                  if (!control) {\r\n                    control = new Two.Vector();//.copy(coord);\r\n                  }\r\n\r\n                  if (/c/i.test(lower)) {\r\n\r\n                    x2 = parseFloat(coords[0]);\r\n                    y2 = parseFloat(coords[1]);\r\n                    x3 = parseFloat(coords[2]);\r\n                    y3 = parseFloat(coords[3]);\r\n                    x4 = parseFloat(coords[4]);\r\n                    y4 = parseFloat(coords[5]);\r\n\r\n                  } else {\r\n\r\n                    // Calculate reflection control point for proper x2, y2\r\n                    // inclusion.\r\n\r\n                    reflection = getReflection(coord, control, relative);\r\n\r\n                    x2 = reflection.x;\r\n                    y2 = reflection.y;\r\n                    x3 = parseFloat(coords[0]);\r\n                    y3 = parseFloat(coords[1]);\r\n                    x4 = parseFloat(coords[2]);\r\n                    y4 = parseFloat(coords[3]);\r\n\r\n                  }\r\n\r\n                  if (relative) {\r\n                    x2 += x1;\r\n                    y2 += y1;\r\n                    x3 += x1;\r\n                    y3 += y1;\r\n                    x4 += x1;\r\n                    y4 += y1;\r\n                  }\r\n\r\n                  if (!_.isObject(coord.controls)) {\r\n                    Two.Anchor.AppendCurveProperties(coord);\r\n                  }\r\n\r\n                  coord.controls.right.set(x2 - coord.x, y2 - coord.y);\r\n                  result = new Two.Anchor(\r\n                    x4, y4,\r\n                    x3 - x4, y3 - y4,\r\n                    undefined, undefined,\r\n                    Two.Commands.curve\r\n                  );\r\n\r\n                  coord = result;\r\n                  control = result.controls.left;\r\n\r\n                  break;\r\n\r\n                case 't':\r\n                case 'q':\r\n\r\n                  x1 = coord.x;\r\n                  y1 = coord.y;\r\n\r\n                  if (!control) {\r\n                    control = new Two.Vector();\r\n                  }\r\n\r\n                  if (/q/i.test(lower)) {\r\n\r\n                    x2 = parseFloat(coords[0]);\r\n                    y2 = parseFloat(coords[1]);\r\n                    x3 = parseFloat(coords[0]);\r\n                    y3 = parseFloat(coords[1]);\r\n                    x4 = parseFloat(coords[2]);\r\n                    y4 = parseFloat(coords[3]);\r\n\r\n                  } else {\r\n\r\n                    reflection = getReflection(coord, control, relative);\r\n\r\n                    x2 = reflection.x;\r\n                    y2 = reflection.y;\r\n                    x3 = reflection.x;\r\n                    y3 = reflection.y;\r\n                    x4 = parseFloat(coords[0]);\r\n                    y4 = parseFloat(coords[1]);\r\n\r\n                  }\r\n\r\n                  if (relative) {\r\n                    x2 += x1;\r\n                    y2 += y1;\r\n                    x3 += x1;\r\n                    y3 += y1;\r\n                    x4 += x1;\r\n                    y4 += y1;\r\n                  }\r\n\r\n                  if (!_.isObject(coord.controls)) {\r\n                    Two.Anchor.AppendCurveProperties(coord);\r\n                  }\r\n\r\n                  coord.controls.right.set(\r\n                    (x2 - coord.x) * 0.33, (y2 - coord.y) * 0.33);\r\n                  result = new Two.Anchor(\r\n                    x4, y4,\r\n                    x3 - x4, y3 - y4,\r\n                    undefined, undefined,\r\n                    Two.Commands.curve\r\n                  );\r\n\r\n                  coord = result;\r\n                  control = result.controls.left;\r\n\r\n                  break;\r\n\r\n                case 'a':\r\n\r\n                  x1 = coord.x;\r\n                  y1 = coord.y;\r\n\r\n                  var rx = parseFloat(coords[0]);\r\n                  var ry = parseFloat(coords[1]);\r\n                  var xAxisRotation = parseFloat(coords[2]);// * PI / 180;\r\n                  var largeArcFlag = parseFloat(coords[3]);\r\n                  var sweepFlag = parseFloat(coords[4]);\r\n\r\n                  x4 = parseFloat(coords[5]);\r\n                  y4 = parseFloat(coords[6]);\r\n\r\n                  if (relative) {\r\n                    x4 += x1;\r\n                    y4 += y1;\r\n                  }\r\n\r\n                  var anchor = new Two.Anchor(x4, y4);\r\n                  anchor.command = Two.Commands.arc;\r\n                  anchor.rx = rx;\r\n                  anchor.ry = ry;\r\n                  anchor.xAxisRotation = xAxisRotation;\r\n                  anchor.largeArcFlag = largeArcFlag;\r\n                  anchor.sweepFlag = sweepFlag;\r\n\r\n                  result = anchor;\r\n\r\n                  coord = anchor;\r\n                  control = undefined;\r\n\r\n                  break;\r\n\r\n              }\r\n\r\n              if (result) {\r\n                if (_.isArray(result)) {\r\n                  points = points.concat(result);\r\n                } else {\r\n                  points.push(result);\r\n                }\r\n              }\r\n\r\n            });\r\n\r\n          }\r\n\r\n          path = new Two.Path(points, closed, undefined, true).noStroke();\r\n          path.fill = 'black';\r\n\r\n          var rect = path.getBoundingClientRect(true);\r\n\r\n          // Center objects to stay consistent\r\n          // with the rest of the Two.js API.\r\n          rect.centroid = {\r\n            x: rect.left + rect.width / 2,\r\n            y: rect.top + rect.height / 2\r\n          };\r\n\r\n          _.each(path.vertices, function(v) {\r\n            v.subSelf(rect.centroid);\r\n          });\r\n\r\n          Two.Utils.applySvgAttributes.call(this, node, path, parentStyles);\r\n\r\n          path.translation.addSelf(rect.centroid);\r\n\r\n          return path;\r\n\r\n        },\r\n\r\n        circle: function(node, parentStyles) {\r\n\r\n          var x = parseFloat(node.getAttribute('cx'));\r\n          var y = parseFloat(node.getAttribute('cy'));\r\n          var r = parseFloat(node.getAttribute('r'));\r\n\r\n          var circle = new Two.Circle(x, y, r).noStroke();\r\n          circle.fill = 'black';\r\n\r\n          Two.Utils.applySvgAttributes.call(this, node, circle, parentStyles);\r\n\r\n          return circle;\r\n\r\n        },\r\n\r\n        ellipse: function(node, parentStyles) {\r\n\r\n          var x = parseFloat(node.getAttribute('cx'));\r\n          var y = parseFloat(node.getAttribute('cy'));\r\n          var width = parseFloat(node.getAttribute('rx'));\r\n          var height = parseFloat(node.getAttribute('ry'));\r\n\r\n          var ellipse = new Two.Ellipse(x, y, width, height).noStroke();\r\n          ellipse.fill = 'black';\r\n\r\n          Two.Utils.applySvgAttributes.call(this, node, ellipse, parentStyles);\r\n\r\n          return ellipse;\r\n\r\n        },\r\n\r\n        rect: function(node, parentStyles) {\r\n\r\n          var rx = parseFloat(node.getAttribute('rx'));\r\n          var ry = parseFloat(node.getAttribute('ry'));\r\n\r\n          if (!_.isNaN(rx) || !_.isNaN(ry)) {\r\n            return Two.Utils.read['rounded-rect'](node);\r\n          }\r\n\r\n          var x = parseFloat(node.getAttribute('x')) || 0;\r\n          var y = parseFloat(node.getAttribute('y')) || 0;\r\n          var width = parseFloat(node.getAttribute('width'));\r\n          var height = parseFloat(node.getAttribute('height'));\r\n\r\n          var w2 = width / 2;\r\n          var h2 = height / 2;\r\n\r\n          var rect = new Two.Rectangle(x + w2, y + h2, width, height)\r\n            .noStroke();\r\n          rect.fill = 'black';\r\n\r\n          Two.Utils.applySvgAttributes.call(this, node, rect, parentStyles);\r\n\r\n          return rect;\r\n\r\n        },\r\n\r\n        'rounded-rect': function(node, parentStyles) {\r\n\r\n          var x = parseFloat(node.getAttribute('x')) || 0;\r\n          var y = parseFloat(node.getAttribute('y')) || 0;\r\n          var rx = parseFloat(node.getAttribute('rx')) || 0;\r\n          var ry = parseFloat(node.getAttribute('ry')) || 0;\r\n\r\n          var width = parseFloat(node.getAttribute('width'));\r\n          var height = parseFloat(node.getAttribute('height'));\r\n\r\n          var w2 = width / 2;\r\n          var h2 = height / 2;\r\n          var radius = new Two.Vector(rx, ry);\r\n\r\n          var rect = new Two.RoundedRectangle(x + w2, y + h2, width, height, radius)\r\n            .noStroke();\r\n          rect.fill = 'black';\r\n\r\n          Two.Utils.applySvgAttributes.call(this, node, rect, parentStyles);\r\n\r\n          return rect;\r\n\r\n        },\r\n\r\n        line: function(node, parentStyles) {\r\n\r\n          var x1 = parseFloat(node.getAttribute('x1'));\r\n          var y1 = parseFloat(node.getAttribute('y1'));\r\n          var x2 = parseFloat(node.getAttribute('x2'));\r\n          var y2 = parseFloat(node.getAttribute('y2'));\r\n\r\n          var line = new Two.Line(x1, y1, x2, y2).noFill();\r\n\r\n          Two.Utils.applySvgAttributes.call(this, node, line, parentStyles);\r\n\r\n          return line;\r\n\r\n        },\r\n\r\n        lineargradient: function(node, parentStyles) {\r\n\r\n          var x1 = parseFloat(node.getAttribute('x1'));\r\n          var y1 = parseFloat(node.getAttribute('y1'));\r\n          var x2 = parseFloat(node.getAttribute('x2'));\r\n          var y2 = parseFloat(node.getAttribute('y2'));\r\n\r\n          var ox = (x2 + x1) / 2;\r\n          var oy = (y2 + y1) / 2;\r\n\r\n          var stops = [];\r\n          for (var i = 0; i < node.children.length; i++) {\r\n\r\n            var child = node.children[i];\r\n\r\n            var offset = child.getAttribute('offset');\r\n            if (/%/ig.test(offset)) {\r\n              offset = parseFloat(offset.replace(/%/ig, '')) / 100;\r\n            }\r\n            offset = parseFloat(offset);\r\n\r\n            var color = child.getAttribute('stop-color');\r\n            var opacity = child.getAttribute('stop-opacity');\r\n            var style = child.getAttribute('style');\r\n\r\n            var matches;\r\n            if (_.isNull(color)) {\r\n              matches = style ? style.match(/stop-color:\\s?([#a-fA-F0-9]*)/) : false;\r\n              color = matches && matches.length > 1 ? matches[1] : undefined;\r\n            }\r\n\r\n            if (_.isNull(opacity)) {\r\n              matches = style ? style.match(/stop-opacity:\\s?([0-9.-]*)/) : false;\r\n              opacity = matches && matches.length > 1 ? parseFloat(matches[1]) : 1;\r\n            } else {\r\n              opacity = parseFloat(opacity);\r\n            }\r\n\r\n            stops.push(new Two.Gradient.Stop(offset, color, opacity));\r\n\r\n          }\r\n\r\n          var gradient = new Two.LinearGradient(x1 - ox, y1 - oy, x2 - ox,\r\n            y2 - oy, stops);\r\n\r\n          Two.Utils.applySvgAttributes.call(this, node, gradient, parentStyles);\r\n\r\n          return gradient;\r\n\r\n        },\r\n\r\n        radialgradient: function(node, parentStyles) {\r\n\r\n          var cx = parseFloat(node.getAttribute('cx')) || 0;\r\n          var cy = parseFloat(node.getAttribute('cy')) || 0;\r\n          var r = parseFloat(node.getAttribute('r'));\r\n\r\n          var fx = parseFloat(node.getAttribute('fx'));\r\n          var fy = parseFloat(node.getAttribute('fy'));\r\n\r\n          if (_.isNaN(fx)) {\r\n            fx = cx;\r\n          }\r\n\r\n          if (_.isNaN(fy)) {\r\n            fy = cy;\r\n          }\r\n\r\n          var ox = abs(cx + fx) / 2;\r\n          var oy = abs(cy + fy) / 2;\r\n\r\n          var stops = [];\r\n          for (var i = 0; i < node.children.length; i++) {\r\n\r\n            var child = node.children[i];\r\n\r\n            var offset = child.getAttribute('offset');\r\n            if (/%/ig.test(offset)) {\r\n              offset = parseFloat(offset.replace(/%/ig, '')) / 100;\r\n            }\r\n            offset = parseFloat(offset);\r\n\r\n            var color = child.getAttribute('stop-color');\r\n            var opacity = child.getAttribute('stop-opacity');\r\n            var style = child.getAttribute('style');\r\n\r\n            var matches;\r\n            if (_.isNull(color)) {\r\n              matches = style ? style.match(/stop-color:\\s?([#a-fA-F0-9]*)/) : false;\r\n              color = matches && matches.length > 1 ? matches[1] : undefined;\r\n            }\r\n\r\n            if (_.isNull(opacity)) {\r\n              matches = style ? style.match(/stop-opacity:\\s?([0-9.-]*)/) : false;\r\n              opacity = matches && matches.length > 1 ? parseFloat(matches[1]) : 1;\r\n            } else {\r\n              opacity = parseFloat(opacity);\r\n            }\r\n\r\n            stops.push(new Two.Gradient.Stop(offset, color, opacity));\r\n\r\n          }\r\n\r\n          var gradient = new Two.RadialGradient(cx - ox, cy - oy, r,\r\n            stops, fx - ox, fy - oy);\r\n\r\n          Two.Utils.applySvgAttributes.call(this, node, gradient, parentStyles);\r\n\r\n          return gradient;\r\n\r\n        }\r\n\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.subdivide\r\n       * @function\r\n       * @param {Number} x1 - x position of first anchor point.\r\n       * @param {Number} y1 - y position of first anchor point.\r\n       * @param {Number} x2 - x position of first anchor point's \"right\" bezier handle.\r\n       * @param {Number} y2 - y position of first anchor point's \"right\" bezier handle.\r\n       * @param {Number} x3 - x position of second anchor point's \"left\" bezier handle.\r\n       * @param {Number} y3 - y position of second anchor point's \"left\" bezier handle.\r\n       * @param {Number} x4 - x position of second anchor point.\r\n       * @param {Number} y4 - y position of second anchor point.\r\n       * @param {Number} [limit=Two.Utils.Curve.RecursionLimit] - The amount of vertices to create by subdividing.\r\n       * @returns {Two.Anchor[]} A list of anchor points ordered in between `x1`, `y1` and `x4`, `y4`\r\n       * @description Given 2 points (a, b) and corresponding control point for each return an array of points that represent points plotted along the curve. The number of returned points is determined by `limit`.\r\n       */\r\n      subdivide: function(x1, y1, x2, y2, x3, y3, x4, y4, limit) {\r\n\r\n        limit = limit || Two.Utils.Curve.RecursionLimit;\r\n        var amount = limit + 1;\r\n\r\n        // TODO: Abstract 0.001 to a limiting variable\r\n        // Don't recurse if the end points are identical\r\n        if (abs(x1 - x4) < 0.001 && abs(y1 - y4) < 0.001) {\r\n          return [new Two.Anchor(x4, y4)];\r\n        }\r\n\r\n        var result = [];\r\n\r\n        for (var i = 0; i < amount; i++) {\r\n          var t = i / amount;\r\n          var x = getComponentOnCubicBezier(t, x1, x2, x3, x4);\r\n          var y = getComponentOnCubicBezier(t, y1, y2, y3, y4);\r\n          result.push(new Two.Anchor(x, y));\r\n        }\r\n\r\n        return result;\r\n\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.getComponentOnCubicBezier\r\n       * @function\r\n       * @param {Number} t - Zero-to-one value describing what percentage to calculate.\r\n       * @param {Number} a - The firt point's component value.\r\n       * @param {Number} b - The first point's bezier component value.\r\n       * @param {Number} c - The second point's bezier component value.\r\n       * @param {Number} d - The second point's component value.\r\n       * @returns {Number} The coordinate value for a specific component along a cubic bezier curve by `t`.\r\n       */\r\n      getComponentOnCubicBezier: function(t, a, b, c, d) {\r\n        var k = 1 - t;\r\n        return (k * k * k * a) + (3 * k * k * t * b) + (3 * k * t * t * c) +\r\n           (t * t * t * d);\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.getCurveLength\r\n       * @function\r\n       * @param {Number} x1 - x position of first anchor point.\r\n       * @param {Number} y1 - y position of first anchor point.\r\n       * @param {Number} x2 - x position of first anchor point's \"right\" bezier handle.\r\n       * @param {Number} y2 - y position of first anchor point's \"right\" bezier handle.\r\n       * @param {Number} x3 - x position of second anchor point's \"left\" bezier handle.\r\n       * @param {Number} y3 - y position of second anchor point's \"left\" bezier handle.\r\n       * @param {Number} x4 - x position of second anchor point.\r\n       * @param {Number} y4 - y position of second anchor point.\r\n       * @param {Number} [limit=Two.Utils.Curve.RecursionLimit] - The amount of vertices to create by subdividing.\r\n       * @returns {Number} The length of a curve.\r\n       * @description Given 2 points (a, b) and corresponding control point for each, return a float that represents the length of the curve using Gauss-Legendre algorithm. Limit iterations of calculation by `limit`.\r\n       */\r\n      getCurveLength: function(x1, y1, x2, y2, x3, y3, x4, y4, limit) {\r\n\r\n        // TODO: Better / fuzzier equality check\r\n        // Linear calculation\r\n        if (x1 === x2 && y1 === y2 && x3 === x4 && y3 === y4) {\r\n          var dx = x4 - x1;\r\n          var dy = y4 - y1;\r\n          return sqrt(dx * dx + dy * dy);\r\n        }\r\n\r\n        // Calculate the coefficients of a Bezier derivative.\r\n        var ax = 9 * (x2 - x3) + 3 * (x4 - x1),\r\n          bx = 6 * (x1 + x3) - 12 * x2,\r\n          cx = 3 * (x2 - x1),\r\n\r\n          ay = 9 * (y2 - y3) + 3 * (y4 - y1),\r\n          by = 6 * (y1 + y3) - 12 * y2,\r\n          cy = 3 * (y2 - y1);\r\n\r\n        var integrand = function(t) {\r\n          // Calculate quadratic equations of derivatives for x and y\r\n          var dx = (ax * t + bx) * t + cx,\r\n            dy = (ay * t + by) * t + cy;\r\n          return sqrt(dx * dx + dy * dy);\r\n        };\r\n\r\n        return integrate(\r\n          integrand, 0, 1, limit || Two.Utils.Curve.RecursionLimit\r\n        );\r\n\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.getCurveBoundingBox\r\n       * @function\r\n       * @param {Number} x1 - x position of first anchor point.\r\n       * @param {Number} y1 - y position of first anchor point.\r\n       * @param {Number} x2 - x position of first anchor point's \"right\" bezier handle.\r\n       * @param {Number} y2 - y position of first anchor point's \"right\" bezier handle.\r\n       * @param {Number} x3 - x position of second anchor point's \"left\" bezier handle.\r\n       * @param {Number} y3 - y position of second anchor point's \"left\" bezier handle.\r\n       * @param {Number} x4 - x position of second anchor point.\r\n       * @param {Number} y4 - y position of second anchor point.\r\n       * @returns {Object} Object contains min and max `x` / `y` bounds.\r\n       * @see {@link https://github.com/adobe-webplatform/Snap.svg/blob/master/src/path.js#L856}\r\n       */\r\n      getCurveBoundingBox: function(x1, y1, x2, y2, x3, y3, x4, y4) {\r\n\r\n        var tvalues = [];\r\n        var bounds = [[], []];\r\n        var a, b, c, t, t1, t2, b2ac, sqrtb2ac;\r\n\r\n        for (var i = 0; i < 2; ++i) {\r\n            if (i == 0) {\r\n              b = 6 * x1 - 12 * x2 + 6 * x3;\r\n              a = -3 * x1 + 9 * x2 - 9 * x3 + 3 * x4;\r\n              c = 3 * x2 - 3 * x1;\r\n            } else {\r\n              b = 6 * y1 - 12 * y2 + 6 * y3;\r\n              a = -3 * y1 + 9 * y2 - 9 * y3 + 3 * y4;\r\n              c = 3 * y2 - 3 * y1;\r\n            }\r\n            if (abs(a) < 1e-12) {\r\n              if (abs(b) < 1e-12) {\r\n                continue;\r\n              }\r\n              t = -c / b;\r\n              if (0 < t && t < 1) {\r\n                tvalues.push(t);\r\n              }\r\n              continue;\r\n            }\r\n            b2ac = b * b - 4 * c * a;\r\n            sqrtb2ac = Math.sqrt(b2ac);\r\n            if (b2ac < 0) {\r\n              continue;\r\n            }\r\n            t1 = (-b + sqrtb2ac) / (2 * a);\r\n            if (0 < t1 && t1 < 1) {\r\n              tvalues.push(t1);\r\n            }\r\n            t2 = (-b - sqrtb2ac) / (2 * a);\r\n            if (0 < t2 && t2 < 1) {\r\n              tvalues.push(t2);\r\n            }\r\n        }\r\n\r\n        var x, y, j = tvalues.length;\r\n        var jlen = j;\r\n        var mt;\r\n\r\n        while (j--) {\r\n          t = tvalues[j];\r\n          mt = 1 - t;\r\n          bounds[0][j] = mt * mt * mt * x1 + 3 * mt * mt * t * x2 + 3 * mt * t * t * x3 + t * t * t * x4;\r\n          bounds[1][j] = mt * mt * mt * y1 + 3 * mt * mt * t * y2 + 3 * mt * t * t * y3 + t * t * t * y4;\r\n        }\r\n\r\n        bounds[0][jlen] = x1;\r\n        bounds[1][jlen] = y1;\r\n        bounds[0][jlen + 1] = x4;\r\n        bounds[1][jlen + 1] = y4;\r\n        bounds[0].length = bounds[1].length = jlen + 2;\r\n\r\n        return {\r\n          min: { x: Math.min.apply(0, bounds[0]), y: Math.min.apply(0, bounds[1]) },\r\n          max: { x: Math.max.apply(0, bounds[0]), y: Math.max.apply(0, bounds[1]) }\r\n        };\r\n\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.integrate\r\n       * @function\r\n       * @param {Function} f\r\n       * @param {Number} a\r\n       * @param {Number} b\r\n       * @param {Integer} n\r\n       * @description Integration for `getCurveLength` calculations.\r\n       * @see [Paper.js]{@link https://github.com/paperjs/paper.js/blob/master/src/util/Numerical.js#L101}\r\n       */\r\n      integrate: function(f, a, b, n) {\r\n        var x = Two.Utils.Curve.abscissas[n - 2],\r\n          w = Two.Utils.Curve.weights[n - 2],\r\n          A = 0.5 * (b - a),\r\n          B = A + a,\r\n          i = 0,\r\n          m = (n + 1) >> 1,\r\n          sum = n & 1 ? w[i++] * f(B) : 0; // Handle odd n\r\n        while (i < m) {\r\n          var Ax = A * x[i];\r\n          sum += w[i++] * (f(B + Ax) + f(B - Ax));\r\n        }\r\n        return A * sum;\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.getCurveFromPoints\r\n       * @function\r\n       * @param {Two.Anchor[]} points\r\n       * @param {Boolean} closed\r\n       * @description Sets the bezier handles on {@link Two.Anchor}s in the `points` list with estimated values to create a catmull-rom like curve. Used by {@link Two.Path#plot}.\r\n       */\r\n      getCurveFromPoints: function(points, closed) {\r\n\r\n        var l = points.length, last = l - 1;\r\n\r\n        for (var i = 0; i < l; i++) {\r\n\r\n          var point = points[i];\r\n\r\n          if (!_.isObject(point.controls)) {\r\n            Two.Anchor.AppendCurveProperties(point);\r\n          }\r\n\r\n          var prev = closed ? mod(i - 1, l) : max(i - 1, 0);\r\n          var next = closed ? mod(i + 1, l) : min(i + 1, last);\r\n\r\n          var a = points[prev];\r\n          var b = point;\r\n          var c = points[next];\r\n          getControlPoints(a, b, c);\r\n\r\n          b.command = i === 0 ? Two.Commands.move : Two.Commands.curve;\r\n\r\n        }\r\n\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.getControlPoints\r\n       * @function\r\n       * @param {Two.Anchor} a\r\n       * @param {Two.Anchor} b\r\n       * @param {Two.Anchor} c\r\n       * @returns {Two.Anchor} Returns the passed middle point `b`.\r\n       * @description Given three coordinates set the control points for the middle, b, vertex based on its position with the adjacent points.\r\n       */\r\n      getControlPoints: function(a, b, c) {\r\n\r\n        var a1 = Two.Vector.angleBetween(a, b);\r\n        var a2 = Two.Vector.angleBetween(c, b);\r\n\r\n        var d1 = Two.Vector.distanceBetween(a, b);\r\n        var d2 = Two.Vector.distanceBetween(c, b);\r\n\r\n        var mid = (a1 + a2) / 2;\r\n\r\n        // TODO: Issue 73\r\n        if (d1 < 0.0001 || d2 < 0.0001) {\r\n          if (_.isBoolean(b.relative) && !b.relative) {\r\n            b.controls.left.copy(b);\r\n            b.controls.right.copy(b);\r\n          }\r\n          return b;\r\n        }\r\n\r\n        d1 *= 0.33; // Why 0.33?\r\n        d2 *= 0.33;\r\n\r\n        if (a2 < a1) {\r\n          mid += HALF_PI;\r\n        } else {\r\n          mid -= HALF_PI;\r\n        }\r\n\r\n        b.controls.left.x = cos(mid) * d1;\r\n        b.controls.left.y = sin(mid) * d1;\r\n\r\n        mid -= PI;\r\n\r\n        b.controls.right.x = cos(mid) * d2;\r\n        b.controls.right.y = sin(mid) * d2;\r\n\r\n        if (_.isBoolean(b.relative) && !b.relative) {\r\n          b.controls.left.x += b.x;\r\n          b.controls.left.y += b.y;\r\n          b.controls.right.x += b.x;\r\n          b.controls.right.y += b.y;\r\n        }\r\n\r\n        return b;\r\n\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.getReflection\r\n       * @function\r\n       * @param {Two.Vector} a\r\n       * @param {Two.Vector} b\r\n       * @param {Boolean} [relative=false]\r\n       * @returns {Two.Vector} New {@link Two.Vector} that represents the reflection point.\r\n       * @description Get the reflection of a point `b` about point `a`. Where `a` is in absolute space and `b` is relative to `a`.\r\n       * @see {@link http://www.w3.org/TR/SVG11/implnote.html#PathElementImplementationNotes}\r\n       */\r\n      getReflection: function(a, b, relative) {\r\n\r\n        return new Two.Vector(\r\n          2 * a.x - (b.x + a.x) - (relative ? a.x : 0),\r\n          2 * a.y - (b.y + a.y) - (relative ? a.y : 0)\r\n        );\r\n\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.getAnchorsFromArcData\r\n       * @function\r\n       * @param {Two.Vector} center\r\n       * @param {Radians} xAxisRotation\r\n       * @param {Number} rx - x radius\r\n       * @param {Number} ry - y radius\r\n       * @param {Radians} ts\r\n       * @param {Radians} td\r\n       * @param {Boolean} [ccw=false] - Set path traversal to counter-clockwise\r\n       */\r\n      getAnchorsFromArcData: function(center, xAxisRotation, rx, ry, ts, td, ccw) {\r\n\r\n        var l = Two.Resolution;\r\n\r\n        return _.map(_.range(l), function(i) {\r\n\r\n          var pct = (i + 1) / l;\r\n          if (ccw) {\r\n            pct = 1 - pct;\r\n          }\r\n\r\n          var theta = pct * td + ts;\r\n          var x = rx * Math.cos(theta);\r\n          var y = ry * Math.sin(theta);\r\n\r\n          // x += center.x;\r\n          // y += center.y;\r\n\r\n          var anchor = new Two.Anchor(x, y);\r\n          Two.Anchor.AppendCurveProperties(anchor);\r\n          anchor.command = Two.Commands.line;\r\n\r\n          // TODO: Calculate control points here...\r\n\r\n          return anchor;\r\n\r\n        });\r\n\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.lerp\r\n       * @function\r\n       * @param {Number} a - Start value.\r\n       * @param {Number} b - End value.\r\n       * @param {Number} t - Zero-to-one value describing percentage between a and b.\r\n       * @returns {Number}\r\n       * @description Linear interpolation between two values `a` and `b` by an amount `t`.\r\n       */\r\n      lerp: function(a, b, t) {\r\n        return t * (b - a) + a;\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.toFixed\r\n       * @function\r\n       * @param {Number} v - Any float\r\n       * @returns {Number} That float trimmed to the third decimal place.\r\n       * @description A pretty fast toFixed(3) alternative.\r\n       * @see {@link http://jsperf.com/parsefloat-tofixed-vs-math-round/18}\r\n       */\r\n      toFixed: function(v) {\r\n        return Math.floor(v * 1000) / 1000;\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.mod\r\n       * @param {Number} v - The value to modulo\r\n       * @param {Number} l - The value to modulo by\r\n       * @returns {Number}\r\n       * @description Modulo with added functionality to handle negative values in a positive manner.\r\n       */\r\n      mod: function(v, l) {\r\n\r\n        while (v < 0) {\r\n          v += l;\r\n        }\r\n\r\n        return v % l;\r\n\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.Collection\r\n       * @class\r\n       * @extends Two.Utils.Events\r\n       * @description An `Array` like object with additional event propagation on actions. `pop`, `shift`, and `splice` trigger `removed` events. `push`, `unshift`, and `splice` with more than 2 arguments trigger 'inserted'. Finally, `sort` and `reverse` trigger `order` events.\r\n       */\r\n      Collection: function() {\r\n\r\n        Array.call(this);\r\n\r\n        if (arguments.length > 1) {\r\n          Array.prototype.push.apply(this, arguments);\r\n        } else if (arguments[0] && Array.isArray(arguments[0])) {\r\n          Array.prototype.push.apply(this, arguments[0]);\r\n        }\r\n\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.Error\r\n       * @class\r\n       * @description Custom error throwing for Two.js specific identification.\r\n       */\r\n      Error: function(message) {\r\n        this.name = 'Two.js';\r\n        this.message = message;\r\n      },\r\n\r\n      /**\r\n       * @name Two.Utils.Events\r\n       * @interface\r\n       * @description Object inherited by many Two.js objects in order to facilitate custom events.\r\n       */\r\n      Events: {\r\n\r\n        /**\r\n         * @name Two.Utils.Events.on\r\n         * @function\r\n         * @param {String} name - The name of the event to bind a function to.\r\n         * @param {Function} handler - The function to be invoked when the event is dispatched.\r\n         * @description Call to add a listener to a specific event name.\r\n         */\r\n        on: function(name, handler) {\r\n\r\n          this._events || (this._events = {});\r\n          var list = this._events[name] || (this._events[name] = []);\r\n\r\n          list.push(handler);\r\n\r\n          return this;\r\n\r\n        },\r\n\r\n        /**\r\n         * @name Two.Utils.Events.off\r\n         * @function\r\n         * @param {String} [name] - The name of the event intended to be removed.\r\n         * @param {Function} [handler] - The handler intended to be reomved.\r\n         * @description Call to remove listeners from a specific event. If only `name` is passed then all the handlers attached to that `name` will be removed. If no arguments are passed then all handlers for every event on the obejct are removed.\r\n         */\r\n        off: function(name, handler) {\r\n\r\n          if (!this._events) {\r\n            return this;\r\n          }\r\n          if (!name && !handler) {\r\n            this._events = {};\r\n            return this;\r\n          }\r\n\r\n          var names = name ? [name] : _.keys(this._events);\r\n          for (var i = 0, l = names.length; i < l; i++) {\r\n\r\n            name = names[i];\r\n            var list = this._events[name];\r\n\r\n            if (list) {\r\n              var events = [];\r\n              if (handler) {\r\n                for (var j = 0, k = list.length; j < k; j++) {\r\n                  var ev = list[j];\r\n                  ev = ev.handler ? ev.handler : ev;\r\n                  if (handler && handler !== ev) {\r\n                    events.push(ev);\r\n                  }\r\n                }\r\n              }\r\n              this._events[name] = events;\r\n            }\r\n          }\r\n\r\n          return this;\r\n        },\r\n\r\n        /**\r\n         * @name Two.Utils.Events.trigger\r\n         * @function\r\n         * @param {String} name - The name of the event to dispatch.\r\n         * @param arguments - Anything can be passed after the name and those will be passed on to handlers attached to the event in the order they are passed.\r\n         * @description Call to trigger a custom event. Any additional arguments passed after the name will be passed along to the attached handlers.\r\n         */\r\n        trigger: function(name) {\r\n          if (!this._events) return this;\r\n          var args = slice.call(arguments, 1);\r\n          var events = this._events[name];\r\n          if (events) trigger(this, events, args);\r\n          return this;\r\n        },\r\n\r\n        listen: function(obj, name, handler) {\r\n\r\n          var bound = this;\r\n\r\n          if (obj) {\r\n\r\n            var event = function () {\r\n              handler.apply(bound, arguments);\r\n            };\r\n\r\n            // Add references about the object that assigned this listener\r\n            event.obj = obj;\r\n            event.name = name;\r\n            event.handler = handler;\r\n\r\n            obj.on(name, event);\r\n\r\n          }\r\n\r\n          return this;\r\n\r\n        },\r\n\r\n        ignore: function(obj, name, handler) {\r\n\r\n          obj.off(name, handler);\r\n          return this;\r\n\r\n        }\r\n\r\n      }\r\n\r\n    })\r\n\r\n  });\r\n\r\n  /**\r\n   * @name Two.Utils.Events.bind\r\n   * @borrows Two.Utils.Events.on as Two.Utils.Events.bind\r\n   */\r\n  Two.Utils.Events.bind = Two.Utils.Events.on;\r\n\r\n  /**\r\n   * @name Two.Utils.Events.unbind\r\n   * @borrows Two.Utils.Events.off as Two.Utils.Events.unbind\r\n   */\r\n  Two.Utils.Events.unbind = Two.Utils.Events.off;\r\n\r\n  var trigger = function(obj, events, args) {\r\n    var method;\r\n    switch (args.length) {\r\n    case 0:\r\n      method = function(i) {\r\n        events[i].call(obj, args[0]);\r\n      };\r\n      break;\r\n    case 1:\r\n      method = function(i) {\r\n        events[i].call(obj, args[0], args[1]);\r\n      };\r\n      break;\r\n    case 2:\r\n      method = function(i) {\r\n        events[i].call(obj, args[0], args[1], args[2]);\r\n      };\r\n      break;\r\n    case 3:\r\n      method = function(i) {\r\n        events[i].call(obj, args[0], args[1], args[2], args[3]);\r\n      };\r\n      break;\r\n    default:\r\n      method = function(i) {\r\n        events[i].apply(obj, args);\r\n      };\r\n    }\r\n    for (var i = 0; i < events.length; i++) {\r\n      method(i);\r\n    }\r\n  };\r\n\r\n  Two.Utils.Error.prototype = new Error();\r\n  Two.Utils.Error.prototype.constructor = Two.Utils.Error;\r\n\r\n  Two.Utils.Collection.prototype = new Array();\r\n  Two.Utils.Collection.prototype.constructor = Two.Utils.Collection;\r\n\r\n  _.extend(Two.Utils.Collection.prototype, Two.Utils.Events, {\r\n\r\n    pop: function() {\r\n      var popped = Array.prototype.pop.apply(this, arguments);\r\n      this.trigger(Two.Events.remove, [popped]);\r\n      return popped;\r\n    },\r\n\r\n    shift: function() {\r\n      var shifted = Array.prototype.shift.apply(this, arguments);\r\n      this.trigger(Two.Events.remove, [shifted]);\r\n      return shifted;\r\n    },\r\n\r\n    push: function() {\r\n      var pushed = Array.prototype.push.apply(this, arguments);\r\n      this.trigger(Two.Events.insert, arguments);\r\n      return pushed;\r\n    },\r\n\r\n    unshift: function() {\r\n      var unshifted = Array.prototype.unshift.apply(this, arguments);\r\n      this.trigger(Two.Events.insert, arguments);\r\n      return unshifted;\r\n    },\r\n\r\n    splice: function() {\r\n      var spliced = Array.prototype.splice.apply(this, arguments);\r\n      var inserted;\r\n\r\n      this.trigger(Two.Events.remove, spliced);\r\n\r\n      if (arguments.length > 2) {\r\n        inserted = this.slice(arguments[0], arguments[0] + arguments.length - 2);\r\n        this.trigger(Two.Events.insert, inserted);\r\n        this.trigger(Two.Events.order);\r\n      }\r\n      return spliced;\r\n    },\r\n\r\n    sort: function() {\r\n      Array.prototype.sort.apply(this, arguments);\r\n      this.trigger(Two.Events.order);\r\n      return this;\r\n    },\r\n\r\n    reverse: function() {\r\n      Array.prototype.reverse.apply(this, arguments);\r\n      this.trigger(Two.Events.order);\r\n      return this;\r\n    }\r\n\r\n  });\r\n\r\n  // Localize utils\r\n\r\n  var getAnchorsFromArcData = Two.Utils.getAnchorsFromArcData,\r\n    getControlPoints = Two.Utils.getControlPoints,\r\n    getCurveFromPoints = Two.Utils.getCurveFromPoints,\r\n    solveSegmentIntersection = Two.Utils.solveSegmentIntersection,\r\n    decoupleShapes = Two.Utils.decoupleShapes,\r\n    mod = Two.Utils.mod,\r\n    getBackingStoreRatio = Two.Utils.getBackingStoreRatio,\r\n    getComponentOnCubicBezier = Two.Utils.getComponentOnCubicBezier,\r\n    getCurveLength = Two.Utils.getCurveLength,\r\n    integrate = Two.Utils.integrate,\r\n    getReflection = Two.Utils.getReflection;\r\n\r\n  _.extend(Two.prototype, Two.Utils.Events, {\r\n\r\n    constructor: Two,\r\n\r\n    /**\r\n     * @name Two#appendTo\r\n     * @function\r\n     * @param {Element} elem - The DOM element to append the Two.js stage to.\r\n     * @description Shorthand method to append your instance of Two.js to the `document`.\r\n     */\r\n    appendTo: function(elem) {\r\n\r\n      elem.appendChild(this.renderer.domElement);\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two#play\r\n     * @function\r\n     * @fires Two.Events.play event\r\n     * @description Call to start an internal animation loop.\r\n     * @nota-bene This function initiates a `requestAnimationFrame` loop.\r\n     */\r\n    play: function() {\r\n\r\n      Two.Utils.setPlaying.call(this, true);\r\n      raf.init();\r\n      return this.trigger(Two.Events.play);\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two#pause\r\n     * @function\r\n     * @fires Two.Events.pause event\r\n     * @description Call to stop the internal animation loop for a specific instance of Two.js.\r\n     */\r\n    pause: function() {\r\n\r\n      this.playing = false;\r\n      return this.trigger(Two.Events.pause);\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two#update\r\n     * @fires Two.Events.update event\r\n     * @description Update positions and calculations in one pass before rendering. Then render to the canvas.\r\n     * @nota-bene This function is called automatically if using {@link Two#play} or the `autostart` parameter in construction.\r\n     */\r\n    update: function() {\r\n\r\n      var animated = !!this._lastFrame;\r\n      var now = perf.now();\r\n\r\n      if (animated) {\r\n        this.timeDelta = parseFloat((now - this._lastFrame).toFixed(3));\r\n      }\r\n      this._lastFrame = now;\r\n\r\n      var width = this.width;\r\n      var height = this.height;\r\n      var renderer = this.renderer;\r\n\r\n      // Update width / height for the renderer\r\n      if (width !== renderer.width || height !== renderer.height) {\r\n        renderer.setSize(width, height, this.ratio);\r\n      }\r\n\r\n      this.trigger(Two.Events.update, this.frameCount, this.timeDelta);\r\n\r\n      return this.render();\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two#render\r\n     * @fires Two.Events.render event\r\n     * @description Render all drawable and visible objects of the scene.\r\n     */\r\n    render: function() {\r\n\r\n      this.renderer.render();\r\n      return this.trigger(Two.Events.render, this.frameCount++);\r\n\r\n    },\r\n\r\n    // Convenience Methods\r\n\r\n    /**\r\n     * @name Two#add\r\n     * @function\r\n     * @param {(Two.Shape[]|...Two.Shape)}} [objects] - An array of Two.js objects. Alternatively can add objects as individual arguments.\r\n     * @description A shorthand method to add specific Two.js objects to the scene.\r\n     */\r\n    add: function(o) {\r\n\r\n      var objects = o;\r\n      if (!(objects instanceof Array)) {\r\n        objects = _.toArray(arguments);\r\n      }\r\n\r\n      this.scene.add(objects);\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two#remove\r\n     * @function\r\n     * @param {(Two.Shape[]|...Two.Shape)} [objects] - An array of Two.js objects.\r\n     * @description A shorthand method to remove specific Two.js objects from the scene.\r\n     */\r\n    remove: function(o) {\r\n\r\n      var objects = o;\r\n      if (!(objects instanceof Array)) {\r\n        objects = _.toArray(arguments);\r\n      }\r\n\r\n      this.scene.remove(objects);\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two#clear\r\n     * @function\r\n     * @description Remove all all Two.js objects from the scene.\r\n     */\r\n    clear: function() {\r\n\r\n      this.scene.remove(this.scene.children);\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two#makeLine\r\n     * @function\r\n     * @param {Number} x1\r\n     * @param {Number} y1\r\n     * @param {Number} x2\r\n     * @param {Number} y2\r\n     * @returns {Two.Line}\r\n     * @description Creates a Two.js line and adds it to the scene.\r\n     */\r\n    makeLine: function(x1, y1, x2, y2) {\r\n\r\n      var line = new Two.Line(x1, y1, x2, y2);\r\n      this.scene.add(line);\r\n\r\n      return line;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two#makeArrow\r\n     * @function\r\n     * @param {Number} x1\r\n     * @param {Number} y1\r\n     * @param {Number} x2\r\n     * @param {Number} y2\r\n     * @returns {Two.Path}\r\n     * @description Creates a Two.js arrow and adds it to the scene.\r\n     */\r\n    makeArrow: function(x1, y1, x2, y2, size) {\r\n\r\n      var headlen = _.isNumber(size ) ? size : 10;\r\n\r\n      var angle = Math.atan2(y2 - y1, x2 - x1);\r\n\r\n      var vertices = [\r\n\r\n        new Two.Anchor(x1, y1, undefined, undefined, undefined, undefined, Two.Commands.move),\r\n        new Two.Anchor(x2, y2, undefined, undefined, undefined, undefined, Two.Commands.line),\r\n        new Two.Anchor(\r\n          x2 - headlen * Math.cos(angle - Math.PI / 4),\r\n          y2 - headlen * Math.sin(angle - Math.PI / 4),\r\n          undefined, undefined, undefined, undefined, Two.Commands.line\r\n        ),\r\n\r\n        new Two.Anchor(x2, y2, undefined, undefined, undefined, undefined, Two.Commands.move),\r\n        new Two.Anchor(\r\n          x2 - headlen * Math.cos(angle + Math.PI / 4),\r\n          y2 - headlen * Math.sin(angle + Math.PI / 4),\r\n          undefined, undefined, undefined, undefined, Two.Commands.line\r\n        )\r\n\r\n      ];\r\n\r\n      var path = new Two.Path(vertices, false, false, true);\r\n      path.noFill();\r\n      path.cap = 'round';\r\n      path.join = 'round';\r\n\r\n      this.scene.add(path);\r\n\r\n      return path;\r\n    },\r\n\r\n    /**\r\n     * @name Two#makeRectangle\r\n     * @function\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @returns {Two.Rectangle}\r\n     * @description Creates a Two.js rectangle and adds it to the scene.\r\n     */\r\n    makeRectangle: function(x, y, width, height) {\r\n\r\n      var rect = new Two.Rectangle(x, y, width, height);\r\n      this.scene.add(rect);\r\n\r\n      return rect;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two#makeRoundedRectangle\r\n     * @function\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @param {Number} sides\r\n     * @returns {Two.Rectangle}\r\n     * @description Creates a Two.js rounded rectangle and adds it to the scene.\r\n     */\r\n    makeRoundedRectangle: function(x, y, width, height, sides) {\r\n\r\n      var rect = new Two.RoundedRectangle(x, y, width, height, sides);\r\n      this.scene.add(rect);\r\n\r\n      return rect;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two#makeCircle\r\n     * @function\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @param {Number} radius\r\n     * @param {Number} [resolution=4]\r\n     * @returns {Two.Circle}\r\n     * @description Creates a Two.js circle and adds it to the scene.\r\n     */\r\n    makeCircle: function(x, y, radius, resolution) {\r\n\r\n      var circle = new Two.Circle(x, y, radius, resolution);\r\n      this.scene.add(circle);\r\n\r\n      return circle;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two#makeEllipse\r\n     * @function\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @param {Number} rx\r\n     * @param {Number} ry\r\n     * @param {Number} [resolution=4]\r\n     * @returns {Two.Ellipse}\r\n     * @description Creates a Two.js ellipse and adds it to the scene.\r\n     */\r\n    makeEllipse: function(x, y, rx, ry, resolution) {\r\n\r\n      var ellipse = new Two.Ellipse(x, y, rx, ry, resolution);\r\n      this.scene.add(ellipse);\r\n\r\n      return ellipse;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two#makeStar\r\n     * @function\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @param {Number} outerRadius\r\n     * @param {Number} innerRadius\r\n     * @param {Number} sides\r\n     * @returns {Two.Star}\r\n     * @description Creates a Two.js star and adds it to the scene.\r\n     */\r\n    makeStar: function(ox, oy, outerRadius, innerRadius, sides) {\r\n\r\n      var star = new Two.Star(ox, oy, outerRadius, innerRadius, sides);\r\n      this.scene.add(star);\r\n\r\n      return star;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two#makeCurve\r\n     * @function\r\n     * @param {Two.Anchor[]} [points] - An array of {@link Two.Anchor} points.\r\n     * @param {...Number} - Alternatively you can pass alternating `x` / `y` coordinate values as individual arguments. These will be combined into {@link Two.Anchor}s for use in the path.\r\n     * @returns {Two.Path} - Where `path.curved` is set to `true`.\r\n     * @description Creates a Two.js path that is curved and adds it to the scene.\r\n     * @nota-bene In either case of passing an array or passing numbered arguments the last argument is an optional `Boolean` that defines whether the path should be open or closed.\r\n     */\r\n    makeCurve: function(p) {\r\n\r\n      var l = arguments.length, points = p;\r\n      if (!_.isArray(p)) {\r\n        points = [];\r\n        for (var i = 0; i < l; i+=2) {\r\n          var x = arguments[i];\r\n          if (!_.isNumber(x)) {\r\n            break;\r\n          }\r\n          var y = arguments[i + 1];\r\n          points.push(new Two.Anchor(x, y));\r\n        }\r\n      }\r\n\r\n      var last = arguments[l - 1];\r\n      var curve = new Two.Path(points, !(_.isBoolean(last) ? last : undefined), true);\r\n      var rect = curve.getBoundingClientRect();\r\n      curve.center().translation\r\n        .set(rect.left + rect.width / 2, rect.top + rect.height / 2);\r\n\r\n      this.scene.add(curve);\r\n\r\n      return curve;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two#makePolygon\r\n     * @function\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @param {Number} radius\r\n     * @param {Number} sides\r\n     * @returns {Two.Polygon}\r\n     * @description Creates a Two.js polygon and adds it to the scene.\r\n     */\r\n    makePolygon: function(x, y, radius, sides) {\r\n\r\n      var poly = new Two.Polygon(x, y, radius, sides);\r\n      this.scene.add(poly);\r\n\r\n      return poly;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two#makeArcSegment\r\n     * @function\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @param {Number} innerRadius\r\n     * @param {Number} outerRadius\r\n     * @param {Number} startAngle\r\n     * @param {Number} endAngle\r\n     * @param {Number} [resolution=Two.Resolution] - The number of vertices that should comprise the arc segment.\r\n     */\r\n    makeArcSegment: function(ox, oy, ir, or, sa, ea, res) {\r\n      var arcSegment = new Two.ArcSegment(ox, oy, ir, or, sa, ea, res);\r\n      this.scene.add(arcSegment);\r\n      return arcSegment;\r\n    },\r\n\r\n    /**\r\n     * @name Two#makePath\r\n     * @function\r\n     * @param {Two.Anchor[]} [points] - An array of {@link Two.Anchor} points.\r\n     * @param {...Number} - Alternatively you can pass alternating `x` / `y` coordinate values as individual arguments. These will be combined into {@link Two.Anchor}s for use in the path.\r\n     * @returns {Two.Path}\r\n     * @description Creates a Two.js path and adds it to the scene.\r\n     * @nota-bene In either case of passing an array or passing numbered arguments the last argument is an optional `Boolean` that defines whether the path should be open or closed.\r\n     */\r\n    makePath: function(p) {\r\n\r\n      var l = arguments.length, points = p;\r\n      if (!_.isArray(p)) {\r\n        points = [];\r\n        for (var i = 0; i < l; i+=2) {\r\n          var x = arguments[i];\r\n          if (!_.isNumber(x)) {\r\n            break;\r\n          }\r\n          var y = arguments[i + 1];\r\n          points.push(new Two.Anchor(x, y));\r\n        }\r\n      }\r\n\r\n      var last = arguments[l - 1];\r\n      var path = new Two.Path(points, !(_.isBoolean(last) ? last : undefined));\r\n      var rect = path.getBoundingClientRect();\r\n\r\n      if (_.isNumber(rect.top)   && _.isNumber(rect.left)   &&\r\n          _.isNumber(rect.right) && _.isNumber(rect.bottom)) {\r\n        path.center().translation\r\n          .set(rect.left + rect.width / 2, rect.top + rect.height / 2);\r\n      }\r\n\r\n      this.scene.add(path);\r\n\r\n      return path;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two#makeText\r\n     * @function\r\n     * @param {String} message\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @param {Object} [styles] - An object to describe any of the {@link Two.Text.Properties} including `fill`, `stroke`, `linewidth`, `family`, `alignment`, `leading`, `opacity`, etc..\r\n     * @returns {Two.Text}\r\n     * @description Creates a Two.js text object and adds it to the scene.\r\n     */\r\n    makeText: function(message, x, y, styles) {\r\n      var text = new Two.Text(message, x, y, styles);\r\n      this.add(text);\r\n      return text;\r\n    },\r\n\r\n    /**\r\n     * @name Two#makeLinearGradient\r\n     * @function\r\n     * @param {Number} x1\r\n     * @param {Number} y1\r\n     * @param {Number} x2\r\n     * @param {Number} y2\r\n     * @param {...Two.Stop} [stops] - Any number of color stops sometimes reffered to as ramp stops. If none are supplied then the default black-to-white two stop gradient is applied.\r\n     * @returns {Two.LinearGradient}\r\n     * @description Creates a Two.js linear gradient and ads it to the scene. In the case of an effect it's added to an invisible \"definitions\" group.\r\n     */\r\n    makeLinearGradient: function(x1, y1, x2, y2 /* stops */) {\r\n\r\n      var stops = slice.call(arguments, 4);\r\n      var gradient = new Two.LinearGradient(x1, y1, x2, y2, stops);\r\n\r\n      this.add(gradient);\r\n\r\n      return gradient;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two#makeRadialGradient\r\n     * @function\r\n     * @param {Number} x1\r\n     * @param {Number} y1\r\n     * @param {Number} radius\r\n     * @param {...Two.Stop} [stops] - Any number of color stops sometimes reffered to as ramp stops. If none are supplied then the default black-to-white two stop gradient is applied.\r\n     * @returns {Two.RadialGradient}\r\n     * @description Creates a Two.js linear-gradient object and ads it to the scene. In the case of an effect it's added to an invisible \"definitions\" group.\r\n     */\r\n    makeRadialGradient: function(x1, y1, r /* stops */) {\r\n\r\n      var stops = slice.call(arguments, 3);\r\n      var gradient = new Two.RadialGradient(x1, y1, r, stops);\r\n\r\n      this.add(gradient);\r\n\r\n      return gradient;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two#makeSprite\r\n     * @function\r\n     * @param {(String|Two.Texture)} pathOrTexture - The URL path to an image or an already created {@link Two.Texture}.\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @param {Number} [columns=1]\r\n     * @param {Number} [rows=1]\r\n     * @param {Integer} [frameRate=0]\r\n     * @param {Boolean} [autostart=false]\r\n     * @returns {Two.Sprite}\r\n     * @description Creates a Two.js sprite object and adds it to the scene. Sprites can be used for still images as well as animations.\r\n     */\r\n    makeSprite: function(path, x, y, cols, rows, frameRate, autostart) {\r\n\r\n      var sprite = new Two.Sprite(path, x, y, cols, rows, frameRate);\r\n      if (autostart) {\r\n        sprite.play();\r\n      }\r\n      this.add(sprite);\r\n\r\n      return sprite;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two#makeImageSequence\r\n     * @function\r\n     * @param {(String[]|Two.Texture[])} pathsOrTextures - An array of paths or of {@link Two.Textures}.\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @param {Number} [frameRate=0]\r\n     * @param {Boolean} [autostart=false]\r\n     * @returns {Two.ImageSequence}\r\n     * @description Creates a Two.js image sequence object and adds it to the scene.\r\n     */\r\n    makeImageSequence: function(paths, x, y, frameRate, autostart) {\r\n\r\n      var imageSequence = new Two.ImageSequence(paths, x, y, frameRate);\r\n      if (autostart) {\r\n        imageSequence.play();\r\n      }\r\n      this.add(imageSequence);\r\n\r\n      return imageSequence;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two#makeTexture\r\n     * @function\r\n     * @param {(String|Image|Canvas|Video)} [pathOrSource] - The URL path to an image or a DOM image-like element.\r\n     * @param {Function} [callback] - Function to be invoked when the image is loaded.\r\n     * @returns {Two.Texture}\r\n     * @description Creates a Two.js texture object.\r\n     */\r\n    makeTexture: function(path, callback) {\r\n\r\n      var texture = new Two.Texture(path, callback);\r\n      return texture;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two#makeGroup\r\n     * @function\r\n     * @param {(Two.Shape[]|...Two.Shape)} [objects] - Two.js objects to be added to the group in the form of an array or as individual arguments.\r\n     * @returns {Two.Group}\r\n     * @description Creates a Two.js group object and adds it to the scene.\r\n     */\r\n    makeGroup: function(o) {\r\n\r\n      var objects = o;\r\n      if (!(objects instanceof Array)) {\r\n        objects = _.toArray(arguments);\r\n      }\r\n\r\n      var group = new Two.Group();\r\n      this.scene.add(group);\r\n      group.add(objects);\r\n\r\n      return group;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two#interpret\r\n     * @function\r\n     * @param {SvgNode} svgNode - The SVG node to be parsed.\r\n     * @param {Boolean} shallow - Don't create a top-most group but append all content directly.\r\n     * @param {Boolean} add – Automatically add the reconstructed SVG node to scene.\r\n     * @returns {Two.Group}\r\n     * @description Interpret an SVG Node and add it to this instance's scene. The distinction should be made that this doesn't `import` svg's, it solely interprets them into something compatible for Two.js - this is slightly different than a direct transcription.\r\n     */\r\n    interpret: function(svgNode, shallow, add) {\r\n\r\n      var tag = svgNode.tagName.toLowerCase();\r\n\r\n      add = (typeof add !== 'undefined') ? add : true;\r\n\r\n      if (!(tag in Two.Utils.read)) {\r\n        return null;\r\n      }\r\n\r\n      var node = Two.Utils.read[tag].call(this, svgNode);\r\n\r\n      if (add) {\r\n        this.add(shallow && node instanceof Two.Group ? node.children : node);\r\n      }\r\n\r\n      return node;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two#load\r\n     * @function\r\n     * @param {String|SvgNode} pathOrSVGContent - The URL path of an SVG file or an SVG document as text.\r\n     * @param {Function} callback - Function to call once loading has completed.\r\n     * @returns {Two.Group}\r\n     * @description Load an SVG file or SVG text and interpret it into Two.js legible objects.\r\n     */\r\n    load: function(text, callback) {\r\n\r\n      var group = new Two.Group();\r\n      var elem, i, j;\r\n\r\n      var attach = _.bind(function(data) {\r\n\r\n        dom.temp.innerHTML = data;\r\n\r\n        for (i = 0; i < dom.temp.children.length; i++) {\r\n          elem = dom.temp.children[i];\r\n          if (/svg/i.test(elem.nodeName)) {\r\n            // Two.Utils.applySvgViewBox.call(this, group, elem.getAttribute('viewBox'));\r\n            for (j = 0; j < elem.children.length; j++) {\r\n              group.add(this.interpret(elem.children[j]));\r\n            }\r\n          } else {\r\n            group.add(this.interpret(elem));\r\n          }\r\n        }\r\n\r\n        if (_.isFunction(callback)) {\r\n          var svg = dom.temp.children.length <= 1\r\n            ? dom.temp.children[0] : dom.temp.children;\r\n          callback(group, svg);\r\n        }\r\n\r\n      }, this);\r\n\r\n      if (/.*\\.svg$/ig.test(text)) {\r\n\r\n        Two.Utils.xhr(text, attach);\r\n\r\n        return group;\r\n\r\n      }\r\n\r\n      attach(text);\r\n\r\n      return group;\r\n\r\n    }\r\n\r\n  });\r\n\r\n  function fitToWindow() {\r\n\r\n    var wr = document.body.getBoundingClientRect();\r\n\r\n    var width = this.width = wr.width;\r\n    var height = this.height = wr.height;\r\n\r\n    this.renderer.setSize(width, height, this.ratio);\r\n\r\n  }\r\n\r\n  function updateDimensions(width, height) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.trigger(Two.Events.resize, width, height);\r\n  }\r\n\r\n  // Request Animation Frame\r\n\r\n  var raf = dom.getRequestAnimationFrame();\r\n\r\n  function loop() {\r\n\r\n    for (var i = 0; i < Two.Instances.length; i++) {\r\n      var t = Two.Instances[i];\r\n      if (t.playing) {\r\n        t.update();\r\n      }\r\n    }\r\n\r\n    Two.nextFrameID = raf(loop);\r\n\r\n  }\r\n\r\n  if ( true && module.exports) {\r\n    module.exports = Two;\r\n  } else if (typeof define === 'function' && __webpack_require__.amdO) {\r\n    define('two', [], function() {\r\n      return Two;\r\n    });\r\n  }\r\n\r\n  return Two;\r\n\r\n})((typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : (undefined || self || window)).Two);\r\n\n(function(Two) {\r\n\r\n  var _ = Two.Utils;\r\n\r\n  /**\r\n   * @name Two.Registry\r\n   * @class\r\n   * @description An arbitrary class to manage a directory of things. Mainly used for keeping tabs of textures in Two.js.\r\n   */\r\n  var Registry = Two.Registry = function() {\r\n\r\n    this.map = {};\r\n\r\n  };\r\n\r\n  _.extend(Registry.prototype, {\r\n\r\n    constructor: Registry,\r\n\r\n    /**\r\n     * @name Two.Registry#add\r\n     * @function\r\n     * @param {String} id - A unique identifier.\r\n     * @param value - Any type of variable to be registered to the directory.\r\n     * @description Adds any value to the directory. Assigned by the `id`.\r\n     */\r\n    add: function(id, obj) {\r\n      this.map[id] = obj;\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Registry#remove\r\n     * @function\r\n     * @param {String} id - A unique identifier.\r\n     * @description Remove any value from the directory by its `id`.\r\n     */\r\n    remove: function(id) {\r\n      delete this.map[id];\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Registry#get\r\n     * @function\r\n     * @param {String} id - A unique identifier.\r\n     * @returns value - The associated value. If unavailable then `undefined` is returned.\r\n     * @description Get a registered value by its `id`.\r\n     */\r\n    get: function(id) {\r\n      return this.map[id];\r\n    },\r\n\r\n    /**\r\n     * @name Two.Registry#contains\r\n     * @function\r\n     * @param {String} id - A unique identifier.\r\n     * @returns {Boolean}\r\n     * @description Convenience method to see if a value is registered to an `id` already.\r\n     */\r\n    contains: function(id) {\r\n      return id in this.map;\r\n    }\r\n\r\n  });\r\n\r\n})((typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : (undefined || self || window)).Two);\r\n\n(function(Two) {\r\n\r\n  var _ = Two.Utils;\r\n\r\n  /**\r\n   * @name Two.Vector\r\n   * @class\r\n   * @param {Number} [x=0] - Any number to represent the horizontal x-component of the vector.\r\n   * @param {Number} [y=0] - Any number to represent the vertical y-component of the vector.\r\n   * @description A class to store x / y component vector data. In addition to storing data `Two.Vector` has suped up methods for commonplace mathematical operations.\r\n   */\r\n  var Vector = Two.Vector = function(x, y) {\r\n\r\n    /**\r\n     * @name Two.Vector#x\r\n     * @property {Number} - The horizontal x-component of the vector.\r\n     */\r\n    this.x = x || 0;\r\n\r\n    /**\r\n     * @name Two.Vector#y\r\n     * @property {Number} - The vertical y-component of the vector.\r\n     */\r\n    this.y = y || 0;\r\n\r\n  };\r\n\r\n  _.extend(Vector, {\r\n\r\n    /**\r\n     * @name Two.Vector.zero\r\n     * @readonly\r\n     * @property {Two.Vector} - Handy reference to a vector with component values 0, 0 at all times.\r\n     */\r\n    zero: new Two.Vector(),\r\n\r\n    /**\r\n     * @name Two.Vector.add\r\n     * @function\r\n     * @param {Two.Vector} v1\r\n     * @param {Two.Vector} v2\r\n     * @returns {Two.Vector}\r\n     * @description Add two vectors together.\r\n     */\r\n    add: function(v1, v2) {\r\n      return new Vector(v1.x + v2.x, v1.y + v2.y);\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector.sub\r\n     * @function\r\n     * @param {Two.Vector} v1\r\n     * @param {Two.Vector} v2\r\n     * @returns {Two.Vector}\r\n     * @description Subtract two vectors: `v2` from `v1`.\r\n     */\r\n    sub: function(v1, v2) {\r\n      return new Vector(v1.x - v2.x, v1.y - v2.y);\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector.subtract\r\n     * @borrows Two.Vector.sub as Two.Vector.subtract\r\n     */\r\n    subtract: function(v1, v2) {\r\n      return Vector.sub(v1, v2);\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector.ratioBetween\r\n     * @function\r\n     * @param {Two.Vector} A\r\n     * @param {Two.Vector} B\r\n     * @returns {Number} The ratio betwen two points `v1` and `v2`.\r\n     */\r\n    ratioBetween: function(v1, v2) {\r\n\r\n      return (v1.x * v2.x + v1.y * v2.y) / (v1.length() * v2.length());\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector.angleBetween\r\n     * @function\r\n     * @param {Two.Vector} v1\r\n     * @param {Two.Vector} v2\r\n     * @returns {Radians} The angle between points `v1` and `v2`.\r\n     */\r\n    angleBetween: function(v1, v2) {\r\n\r\n      var dx, dy;\r\n\r\n      if (arguments.length >= 4) {\r\n\r\n        dx = arguments[0] - arguments[2];\r\n        dy = arguments[1] - arguments[3];\r\n\r\n        return Math.atan2(dy, dx);\r\n\r\n      }\r\n\r\n      dx = v1.x - v2.x;\r\n      dy = v1.y - v2.y;\r\n\r\n      return Math.atan2(dy, dx);\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector.distanceBetween\r\n     * @function\r\n     * @param {Two.Vector} v1\r\n     * @param {Two.Vector} v2\r\n     * @returns {Number} The distance between points `v1` and `v2`. Distance is always positive.\r\n     */\r\n    distanceBetween: function(v1, v2) {\r\n\r\n      return Math.sqrt(Vector.distanceBetweenSquared(v1, v2));\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector.distanceBetweenSquared\r\n     * @function\r\n     * @param {Two.Vector} v1\r\n     * @param {Two.Vector} v2\r\n     * @returns {Number} The squared distance between points `v1` and `v2`.\r\n     */\r\n    distanceBetweenSquared: function(v1, v2) {\r\n\r\n      var dx = v1.x - v2.x;\r\n      var dy = v1.y - v2.y;\r\n\r\n      return dx * dx + dy * dy;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector.MakeObservable\r\n     * @function\r\n     * @param {Object} object - The object to make observable.\r\n     * @description Convenience function to apply observable qualities of a {@link Two.Vector} to any object. Handy if you'd like to extend the {@link Two.Vector} class on a custom class.\r\n     */\r\n    MakeObservable: function(object) {\r\n\r\n      // /**\r\n      //  * Override Backbone bind / on in order to add properly broadcasting.\r\n      //  * This allows Two.Vector to not broadcast events unless event listeners\r\n      //  * are explicity bound to it.\r\n      //  */\r\n\r\n      object.bind = object.on = function() {\r\n\r\n        if (!this._bound) {\r\n          this._x = this.x;\r\n          this._y = this.y;\r\n          Object.defineProperty(this, 'x', xgs);\r\n          Object.defineProperty(this, 'y', ygs);\r\n          _.extend(this, BoundProto);\r\n          this._bound = true; // Reserved for event initialization check\r\n        }\r\n\r\n        Two.Utils.Events.bind.apply(this, arguments);\r\n\r\n        return this;\r\n\r\n      };\r\n\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(Vector.prototype, Two.Utils.Events, {\r\n\r\n    constructor: Vector,\r\n\r\n    /**\r\n     * @name Two.Vector#set\r\n     * @function\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @returns {Two.Vector} - An instance of itself for the purpose of chaining.\r\n     * @description Set the x / y components of a vector to specific number values.\r\n     */\r\n    set: function(x, y) {\r\n      this.x = x;\r\n      this.y = y;\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#copy\r\n     * @function\r\n     * @param {Two.Vector} v\r\n     * @returns {Two.Vector} - An instance of itself for the purpose of chaining.\r\n     * @description Copy the x / y components of another object `v`.\r\n     */\r\n    copy: function(v) {\r\n      this.x = v.x;\r\n      this.y = v.y;\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#clear\r\n     * @function\r\n     * @returns {Two.Vector} - An instance of itself for the purpose of chaining.\r\n     * @description Set the x / y component values of the vector to zero.\r\n     */\r\n    clear: function() {\r\n      this.x = 0;\r\n      this.y = 0;\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#clone\r\n     * @function\r\n     * @returns {Two.Vector} - A new instance of {@link Two.Vector}.\r\n     * @description Create a new vector and copy the existing values onto the newly created instance.\r\n     */\r\n    clone: function() {\r\n      return new Vector(this.x, this.y);\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#add\r\n     * @function\r\n     * @param {Two.Vector} v\r\n     * @returns {Two.Vector} - An instance of itself for the purpose of chaining.\r\n     * @description Add an object with x / y component values to the instance.\r\n     * @overloaded\r\n     */\r\n\r\n    /**\r\n     * @name Two.Vector#add\r\n     * @function\r\n     * @param {Number} v\r\n     * @returns {Two.Vector} - An instance of itself for the purpose of chaining.\r\n     * @description Add the **same** number to both x / y component values of the instance.\r\n     * @overloaded\r\n     */\r\n\r\n    /**\r\n     * @name Two.Vector#add\r\n     * @function\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @returns {Two.Vector} - An instance of itself for the purpose of chaining.\r\n     * @description Add `x` / `y` values to their respective component value on the instance.\r\n     * @overloaded\r\n     */\r\n    add: function(x, y) {\r\n      if (arguments.length <= 0) {\r\n        return this;\r\n      } else if (arguments.length <= 1) {\r\n        if (_.isNumber(x)) {\r\n          this.x += x;\r\n          this.y += x;\r\n        } else if (x && _.isNumber(x.x) && _.isNumber(x.y)) {\r\n          this.x += x.x;\r\n          this.y += x.y;\r\n        }\r\n      } else {\r\n        this.x += x;\r\n        this.y += y;\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#addSelf\r\n     * @borrows Two.Vector#add as Two.Vector#addSelf\r\n     */\r\n    addSelf: function(v) {\r\n      return this.add.apply(this, arguments);\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#sub\r\n     * @function\r\n     * @param {Two.Vector} v\r\n     * @returns {Two.Vector} - An instance of itself for the purpose of chaining.\r\n     * @description Subtract an object with x / y component values to the instance.\r\n     * @overloaded\r\n     */\r\n\r\n    /**\r\n     * @name Two.Vector#sub\r\n     * @function\r\n     * @param {Number} v\r\n     * @returns {Two.Vector} - An instance of itself for the purpose of chaining.\r\n     * @description Subtract the **same** number to both x / y component values of the instance.\r\n     * @overloaded\r\n     */\r\n\r\n    /**\r\n     * @name Two.Vector#sub\r\n     * @function\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @returns {Two.Vector} - An instance of itself for the purpose of chaining.\r\n     * @description Subtract `x` / `y` values to their respective component value on the instance.\r\n     * @overloaded\r\n     */\r\n    sub: function(x, y) {\r\n      if (arguments.length <= 0) {\r\n        return this;\r\n      } else if (arguments.length <= 1) {\r\n        if (_.isNumber(x)) {\r\n          this.x -= x;\r\n          this.y -= x;\r\n        } else if (x && _.isNumber(x.x) && _.isNumber(x.y)) {\r\n          this.x -= x.x;\r\n          this.y -= x.y;\r\n        }\r\n      } else {\r\n        this.x -= x;\r\n        this.y -= y;\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#subtract\r\n     * @borrows Two.Vector#sub as Two.Vector#subtract\r\n     */\r\n    subtract: function() {\r\n      return this.sub.apply(this, arguments);\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#subSelf\r\n     * @borrows Two.Vector#sub as Two.Vector#subSelf\r\n     */\r\n    subSelf: function(v) {\r\n      return this.sub.apply(this, arguments);\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#subtractSelf\r\n     * @borrows Two.Vector#sub as Two.Vector#subtractSelf\r\n     */\r\n    subtractSelf: function(v) {\r\n      return this.sub.apply(this, arguments);\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#multiply\r\n     * @function\r\n     * @param {Two.Vector} v\r\n     * @returns {Two.Vector} - An instance of itself for the purpose of chaining.\r\n     * @description Multiply an object with x / y component values to the instance.\r\n     * @overloaded\r\n     */\r\n\r\n    /**\r\n     * @name Two.Vector#multiply\r\n     * @function\r\n     * @param {Number} v\r\n     * @returns {Two.Vector} - An instance of itself for the purpose of chaining.\r\n     * @description Multiply the **same** number to both x / y component values of the instance.\r\n     * @overloaded\r\n     */\r\n\r\n    /**\r\n     * @name Two.Vector#multiply\r\n     * @function\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @returns {Two.Vector} - An instance of itself for the purpose of chaining.\r\n     * @description Multiply `x` / `y` values to their respective component value on the instance.\r\n     * @overloaded\r\n     */\r\n    multiply: function(x, y) {\r\n      if (arguments.length <= 0) {\r\n        return this;\r\n      } else if (arguments.length <= 1) {\r\n        if (_.isNumber(x)) {\r\n          this.x *= x;\r\n          this.y *= x;\r\n        } else if (x && _.isNumber(x.x) && _.isNumber(x.y)) {\r\n          this.x *= x.x;\r\n          this.y *= x.y;\r\n        }\r\n      } else {\r\n        this.x *= x;\r\n        this.y *= y;\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#multiplySelf\r\n     * @borrows Two.Vector#multiply as Two.Vector#multiplySelf\r\n     */\r\n    multiplySelf: function(v) {\r\n      return this.multiply.apply(this, arguments);\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#multiplyScalar\r\n     * @function\r\n     * @param {Number} s - The scalar to multiply by.\r\n     * @description Mulitiply the vector by a single number. Shorthand to call {@link Two.Vector#multiply} directly.\r\n     */\r\n    multiplyScalar: function(s) {\r\n      return this.multiply(s);\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#divide\r\n     * @function\r\n     * @param {Two.Vector} v\r\n     * @returns {Two.Vector} - An instance of itself for the purpose of chaining.\r\n     * @description Divide an object with x / y component values to the instance.\r\n     * @overloaded\r\n     */\r\n\r\n    /**\r\n     * @name Two.Vector#divide\r\n     * @function\r\n     * @param {Number} v\r\n     * @returns {Two.Vector} - An instance of itself for the purpose of chaining.\r\n     * @description Divide the **same** number to both x / y component values of the instance.\r\n     * @overloaded\r\n     */\r\n\r\n    /**\r\n     * @name Two.Vector#divide\r\n     * @function\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @returns {Two.Vector} - An instance of itself for the purpose of chaining.\r\n     * @description Divide `x` / `y` values to their respective component value on the instance.\r\n     * @overloaded\r\n     */\r\n    divide: function(x, y) {\r\n      if (arguments.length <= 0) {\r\n        return this;\r\n      } else if (arguments.length <= 1) {\r\n        if (_.isNumber(x)) {\r\n          this.x /= x;\r\n          this.y /= x;\r\n        } else if (x && _.isNumber(x.x) && _.isNumber(x.y)) {\r\n          this.x /= x.x;\r\n          this.y /= x.y;\r\n        }\r\n      } else {\r\n        this.x /= x;\r\n        this.y /= y;\r\n      }\r\n      if (_.isNaN(this.x)) {\r\n        this.x = 0;\r\n      }\r\n      if (_.isNaN(this.y)) {\r\n        this.y = 0;\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#divideSelf\r\n     * @borrows Two.Vector#divide as Two.Vector#divideSelf\r\n     */\r\n    divideSelf: function(v) {\r\n      return this.divide.apply(this, arguments);\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#divideScalar\r\n     * @function\r\n     * @param {Number} s - The scalar to divide by.\r\n     * @description Divide the vector by a single number. Shorthand to call {@link Two.Vector#divide} directly.\r\n     */\r\n    divideScalar: function(s) {\r\n      return this.divide(s);\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#negate\r\n     * @function\r\n     * @description Invert each component's sign value.\r\n     */\r\n    negate: function() {\r\n      return this.multiply(-1);\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#negate\r\n     * @function\r\n     * @returns {Number}\r\n     * @description Get the [dot product]{@link https://en.wikipedia.org/wiki/Dot_product} of the vector.\r\n     */\r\n    dot: function(v) {\r\n      return this.x * v.x + this.y * v.y;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#length\r\n     * @function\r\n     * @returns {Number}\r\n     * @description Get the length of a vector.\r\n     */\r\n    length: function() {\r\n      return Math.sqrt(this.lengthSquared());\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#lengthSquared\r\n     * @function\r\n     * @returns {Number}\r\n     * @description Get the length of the vector to the power of two. Widely used as less expensive than {@link Two.Vector#length}, because it isn't square-rooting any numbers.\r\n     */\r\n    lengthSquared: function() {\r\n      return this.x * this.x + this.y * this.y;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#normalize\r\n     * @function\r\n     * @description Normalize the vector from negative one to one.\r\n     */\r\n    normalize: function() {\r\n      return this.divideScalar(this.length());\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#distanceTo\r\n     * @function\r\n     * @returns {Number}\r\n     * @description Get the distance between two vectors.\r\n     */\r\n    distanceTo: function(v) {\r\n      return Math.sqrt(this.distanceToSquared(v));\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#distanceToSquared\r\n     * @function\r\n     * @returns {Number}\r\n     * @description Get the distance between two vectors to the power of two. Widely used as less expensive than {@link Two.Vector#distanceTo}, because it isn't square-rooting any numbers.\r\n     */\r\n    distanceToSquared: function(v) {\r\n      var dx = this.x - v.x,\r\n          dy = this.y - v.y;\r\n      return dx * dx + dy * dy;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#setLength\r\n     * @function\r\n     * @param {Number} l - length to set vector to.\r\n     * @description Set the length of a vector.\r\n     */\r\n    setLength: function(l) {\r\n      return this.normalize().multiplyScalar(l);\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#equals\r\n     * @function\r\n     * @param {Two.Vector} v - The vector to compare against.\r\n     * @param {Number} [eps=0.0001] - An options epsilon for precision.\r\n     * @returns {Boolean}\r\n     * @description Qualify if one vector roughly equal another. With a margin of error defined by epsilon.\r\n     */\r\n    equals: function(v, eps) {\r\n      eps = (typeof eps === 'undefined') ?  0.0001 : eps;\r\n      return (this.distanceTo(v) < eps);\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#lerp\r\n     * @function\r\n     * @param {Two.Vector} v - The destination vector to step towards.\r\n     * @param {Number} t - The zero to one value of how close the current vector gets to the destination vector.\r\n     * @description Linear interpolate one vector to another by an amount `t` defined as a zero to one number.\r\n     * @see [Matt DesLauriers]{@link https://twitter.com/mattdesl/status/1031305279227478016} has a good thread about this.\r\n     */\r\n    lerp: function(v, t) {\r\n      var x = (v.x - this.x) * t + this.x;\r\n      var y = (v.y - this.y) * t + this.y;\r\n      return this.set(x, y);\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#isZero\r\n     * @function\r\n     * @param {Number} [eps=0.0001] - Optional precision amount to check against.\r\n     * @returns {Boolean}\r\n     * @description Check to see if vector is roughly zero, based on the `epsilon` precision value.\r\n     */\r\n    isZero: function(eps) {\r\n      eps = (typeof eps === 'undefined') ?  0.0001 : eps;\r\n      return (this.length() < eps);\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#toString\r\n     * @function\r\n     * @returns {String}\r\n     * @description Return a comma-separated string of x, y value. Great for storing in a database.\r\n     */\r\n    toString: function() {\r\n      return this.x + ', ' + this.y;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#toObject\r\n     * @function\r\n     * @returns {Object}\r\n     * @description Return a JSON compatible plain object that represents the vector.\r\n     */\r\n    toObject: function() {\r\n      return { x: this.x, y: this.y };\r\n    },\r\n\r\n    /**\r\n     * @name Two.Vector#rotate\r\n     * @function\r\n     * @param {Radians} radians - The amoun to rotate the vector by.\r\n     * @description Rotate a vector.\r\n     */\r\n    rotate: function(radians) {\r\n      var cos = Math.cos(radians);\r\n      var sin = Math.sin(radians);\r\n      this.x = this.x * cos - this.y * sin;\r\n      this.y = this.x * sin + this.y * cos;\r\n      return this;\r\n    }\r\n\r\n  });\r\n\r\n  // The same set of prototypical functions, but using the underlying\r\n  // getter or setter for `x` and `y` values. This set of functions\r\n  // is used instead of the previously documented ones above when\r\n  // Two.Vector#bind is invoked and there is event dispatching processed\r\n  // on x / y property changes.\r\n  var BoundProto = {\r\n\r\n    constructor: Vector,\r\n\r\n    set: function(x, y) {\r\n      this._x = x;\r\n      this._y = y;\r\n      return this.trigger(Two.Events.change);\r\n    },\r\n\r\n    copy: function(v) {\r\n      this._x = v.x;\r\n      this._y = v.y;\r\n      return this.trigger(Two.Events.change);\r\n    },\r\n\r\n    clear: function() {\r\n      this._x = 0;\r\n      this._y = 0;\r\n      return this.trigger(Two.Events.change);\r\n    },\r\n\r\n    clone: function() {\r\n      return new Vector(this._x, this._y);\r\n    },\r\n\r\n    add: function(x, y) {\r\n      if (arguments.length <= 0) {\r\n        return this;\r\n      } else if (arguments.length <= 1) {\r\n        if (_.isNumber(x)) {\r\n          this._x += x;\r\n          this._y += x;\r\n        }  else if (x && _.isNumber(x.x) && _.isNumber(x.y)) {\r\n          this._x += x.x;\r\n          this._y += x.y;\r\n        }\r\n      } else {\r\n        this._x += x;\r\n        this._y += y;\r\n      }\r\n      return this.trigger(Two.Events.change);\r\n    },\r\n\r\n    sub: function(x, y) {\r\n      if (arguments.length <= 0) {\r\n        return this;\r\n      } else if (arguments.length <= 1) {\r\n        if (_.isNumber(x)) {\r\n          this._x -= x;\r\n          this._y -= x;\r\n        } else if (x && _.isNumber(x.x) && _.isNumber(x.y)) {\r\n          this._x -= x.x;\r\n          this._y -= x.y;\r\n        }\r\n      } else {\r\n        this._x -= x;\r\n        this._y -= y;\r\n      }\r\n      return this.trigger(Two.Events.change);\r\n    },\r\n\r\n    multiply: function(x, y) {\r\n      if (arguments.length <= 0) {\r\n        return this;\r\n      } else if (arguments.length <= 1) {\r\n        if (_.isNumber(x)) {\r\n          this._x *= x;\r\n          this._y *= x;\r\n        } else if (x && _.isNumber(x.x) && _.isNumber(x.y)) {\r\n          this._x *= x.x;\r\n          this._y *= x.y;\r\n        }\r\n      } else {\r\n        this._x *= x;\r\n        this._y *= y;\r\n      }\r\n      return this.trigger(Two.Events.change);\r\n    },\r\n\r\n    divide: function(x, y) {\r\n      if (arguments.length <= 0) {\r\n        return this;\r\n      } else if (arguments.length <= 1) {\r\n        if (_.isNumber(x)) {\r\n          this._x /= x;\r\n          this._y /= x;\r\n        } else if (x && _.isNumber(x.x) && _.isNumber(x.y)) {\r\n          this._x /= x.x;\r\n          this._y /= x.y;\r\n        }\r\n      } else {\r\n        this._x /= x;\r\n        this._y /= y;\r\n      }\r\n      if (_.isNaN(this._x)) {\r\n        this._x = 0;\r\n      }\r\n      if (_.isNaN(this._y)) {\r\n        this._y = 0;\r\n      }\r\n      return this.trigger(Two.Events.change);\r\n    },\r\n\r\n    dot: function(v) {\r\n      return this._x * v.x + this._y * v.y;\r\n    },\r\n\r\n    lengthSquared: function() {\r\n      return this._x * this._x + this._y * this._y;\r\n    },\r\n\r\n    distanceToSquared: function(v) {\r\n      var dx = this._x - v.x,\r\n          dy = this._y - v.y;\r\n      return dx * dx + dy * dy;\r\n    },\r\n\r\n    lerp: function(v, t) {\r\n      var x = (v.x - this._x) * t + this._x;\r\n      var y = (v.y - this._y) * t + this._y;\r\n      return this.set(x, y);\r\n    },\r\n\r\n    toString: function() {\r\n      return this._x + ', ' + this._y;\r\n    },\r\n\r\n    toObject: function() {\r\n      return { x: this._x, y: this._y };\r\n    },\r\n\r\n    rotate: function (radians) {\r\n      var cos = Math.cos(radians);\r\n      var sin = Math.sin(radians);\r\n      this._x = this._x * cos - this._y * sin;\r\n      this._y = this._x * sin + this._y * cos;\r\n      return this;\r\n    }\r\n\r\n  };\r\n\r\n  var xgs = {\r\n    enumerable: true,\r\n    get: function() {\r\n      return this._x;\r\n    },\r\n    set: function(v) {\r\n      this._x = v;\r\n      this.trigger(Two.Events.change, 'x');\r\n    }\r\n  };\r\n\r\n  var ygs = {\r\n    enumerable: true,\r\n    get: function() {\r\n      return this._y;\r\n    },\r\n    set: function(v) {\r\n      this._y = v;\r\n      this.trigger(Two.Events.change, 'y');\r\n    }\r\n  };\r\n\r\n  Vector.MakeObservable(Vector.prototype);\r\n\r\n})((typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : (undefined || self || window)).Two);\r\n\n(function(Two) {\r\n\r\n  // Localized variables\r\n  var commands = Two.Commands;\r\n  var _ = Two.Utils;\r\n\r\n  /**\r\n   * @class\r\n   * @name Two.Anchor\r\n   * @param {Number} [x=0] - The x position of the root anchor point.\r\n   * @param {Number} [y=0] - The y position of the root anchor point.\r\n   * @param {Number} [lx=0] - The x position of the left handle point.\r\n   * @param {Number} [ly=0] - The y position of the left handle point.\r\n   * @param {Number} [rx=0] - The x position of the right handle point.\r\n   * @param {Number} [ry=0] - The y position of the right handle point.\r\n   * @param {String} [command=Two.Commands.move] - The command to describe how to render. Applicable commands are {@link Two.Commands}\r\n   * @extends Two.Vector\r\n   * @description An object that holds 3 {@link Two.Vector}s, the anchor point and its corresponding handles: `left` and `right`. In order to properly describe the bezier curve about the point there is also a command property to describe what type of drawing should occur when Two.js renders the anchors.\r\n   */\r\n  var Anchor = Two.Anchor = function(x, y, lx, ly, rx, ry, command) {\r\n\r\n    Two.Vector.call(this, x, y);\r\n\r\n    this._broadcast = _.bind(function() {\r\n      this.trigger(Two.Events.change);\r\n    }, this);\r\n\r\n    this._command = command || commands.move;\r\n    this._relative = true;\r\n\r\n    var ilx = _.isNumber(lx);\r\n    var ily = _.isNumber(ly);\r\n    var irx = _.isNumber(rx);\r\n    var iry = _.isNumber(ry);\r\n\r\n    // Append the `controls` object only if control points are specified,\r\n    // keeping the Two.Anchor inline with a Two.Vector until it needs to\r\n    // evolve beyond those functions - e.g: a simple 2 component vector.\r\n    if (ilx || ily || irx || iry) {\r\n      Two.Anchor.AppendCurveProperties(this);\r\n    }\r\n\r\n    if (ilx) {\r\n      this.controls.left.x = lx;\r\n    }\r\n    if (ily) {\r\n      this.controls.left.y = ly;\r\n    }\r\n    if (irx) {\r\n      this.controls.right.x = rx;\r\n    }\r\n    if (iry) {\r\n      this.controls.right.y = ry;\r\n    }\r\n\r\n  };\r\n\r\n  _.extend(Two.Anchor, {\r\n\r\n    /**\r\n     * @name Two.Anchor.AppendCurveProperties\r\n     * @function\r\n     * @param {Two.Anchor} anchor - The instance to append the `control`object to.\r\n     * @description Adds the `controls` property as an object with `left` and `right` properties to access the bezier control handles that define how the curve is drawn. It also sets the `relative` property to `true` making vectors in the `controls` object relative to their corresponding root anchor point.\r\n     */\r\n    AppendCurveProperties: function(anchor) {\r\n\r\n      anchor.relative = true;\r\n\r\n      /**\r\n       * @name Two.Anchor#controls\r\n       * @property {Object} controls\r\n       * @description An plain object that holds the controls handles for a {@link Two.Anchor}.\r\n       */\r\n      anchor.controls = {};\r\n\r\n      /**\r\n       * @name Two.Anchor#controls#left\r\n       * @property {Two.Vector} left\r\n       * @description The \"left\" control point to define handles on a bezier curve.\r\n       */\r\n      anchor.controls.left = new Two.Vector(0, 0);\r\n\r\n      /**\r\n       * @name Two.Anchor#controls#right\r\n       * @property {Two.Vector} right\r\n       * @description The \"left\" control point to define handles on a bezier curve.\r\n       */\r\n      anchor.controls.right = new Two.Vector(0, 0);\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Anchor.MakeObservable\r\n     * @function\r\n     * @param {Object} object - The object to make observable.\r\n     * @description Convenience function to apply observable qualities of a {@link Two.Anchor} to any object. Handy if you'd like to extend the {@link Two.Anchor} class on a custom class.\r\n     */\r\n    MakeObservable: function(object) {\r\n\r\n      /**\r\n       * @name Two.Anchor#command\r\n       * @property {Two.Commands}\r\n       * @description A draw command associated with the anchor point.\r\n       */\r\n      Object.defineProperty(object, 'command', {\r\n\r\n        enumerable: true,\r\n\r\n        get: function() {\r\n          return this._command;\r\n        },\r\n\r\n        set: function(c) {\r\n          this._command = c;\r\n          if (this._command === commands.curve && !_.isObject(this.controls)) {\r\n            Anchor.AppendCurveProperties(this);\r\n          }\r\n          return this.trigger(Two.Events.change);\r\n        }\r\n\r\n      });\r\n\r\n      /**\r\n       * @name Two.Anchor#relative\r\n       * @property {Boolean}\r\n       * @description A boolean to render control points relative to the root anchor point or in global coordinate-space to the rest of the scene.\r\n       */\r\n      Object.defineProperty(object, 'relative', {\r\n\r\n        enumerable: true,\r\n\r\n        get: function() {\r\n          return this._relative;\r\n        },\r\n\r\n        set: function(b) {\r\n          if (this._relative == b) {\r\n            return this;\r\n          }\r\n          this._relative = !!b;\r\n          return this.trigger(Two.Events.change);\r\n        }\r\n\r\n      });\r\n\r\n      _.extend(object, Two.Vector.prototype, AnchorProto);\r\n\r\n      // Make it possible to bind and still have the Anchor specific\r\n      // inheritance from Two.Vector. In this case relying on `Two.Vector`\r\n      // to do much of the heavy event-listener binding / unbinding.\r\n      object.bind = object.on = function() {\r\n        var bound = this._bound;\r\n        Two.Vector.prototype.bind.apply(this, arguments);\r\n        if (!bound) {\r\n          _.extend(this, AnchorProto);\r\n        }\r\n      };\r\n\r\n    }\r\n\r\n  });\r\n\r\n  var AnchorProto = {\r\n\r\n    constructor: Two.Anchor,\r\n\r\n    /**\r\n     * @name Two.Anchor#listen\r\n     * @function\r\n     * @description Convenience method used mainly by {@link Two.Path#vertices} to listen and propagate changes from control points up to their respective anchors and further if necessary.\r\n     */\r\n    listen: function() {\r\n\r\n      if (!_.isObject(this.controls)) {\r\n        Two.Anchor.AppendCurveProperties(this);\r\n      }\r\n\r\n      this.controls.left.bind(Two.Events.change, this._broadcast);\r\n      this.controls.right.bind(Two.Events.change, this._broadcast);\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Anchor#ignore\r\n     * @function\r\n     * @description Convenience method used mainly by {@link Two.Path#vertices} to ignore changes from a specific anchor's control points.\r\n     */\r\n    ignore: function() {\r\n\r\n      this.controls.left.unbind(Two.Events.change, this._broadcast);\r\n      this.controls.right.unbind(Two.Events.change, this._broadcast);\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Anchor#copy\r\n     * @function\r\n     * @param {Two.Anchor} v - The anchor to apply values to.\r\n     * @description Copy the properties of one {@link Two.Anchor} onto another.\r\n     */\r\n    copy: function(v) {\r\n\r\n      this.x = v.x;\r\n      this.y = v.y;\r\n\r\n      if (_.isString(v.command)) {\r\n        this.command = v.command;\r\n      }\r\n      if (_.isObject(v.controls)) {\r\n        if (!_.isObject(this.controls)) {\r\n          Two.Anchor.AppendCurveProperties(this);\r\n        }\r\n        // TODO: Do we need to listen here?\r\n        this.controls.left.copy(v.controls.left);\r\n        this.controls.right.copy(v.controls.right);\r\n      }\r\n      if (_.isBoolean(v.relative)) {\r\n        this.relative = v.relative;\r\n      }\r\n\r\n      // TODO: Hack for `Two.Commands.arc`\r\n      if (this.command === Two.Commands.arc) {\r\n        this.rx = v.rx;\r\n        this.ry = v.ry;\r\n        this.xAxisRotation = v.xAxisRotation;\r\n        this.largeArcFlag = v.largeArcFlag;\r\n        this.sweepFlag = v.sweepFlag;\r\n      }\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Anchor#clone\r\n     * @function\r\n     * @returns {Two.Anchor}\r\n     * @description Create a new {@link Two.Anchor}, set all its values to the current instance and return it for use.\r\n     */\r\n    clone: function() {\r\n\r\n      var controls = this.controls;\r\n\r\n      var clone = new Two.Anchor(\r\n        this.x,\r\n        this.y,\r\n        controls && controls.left.x,\r\n        controls && controls.left.y,\r\n        controls && controls.right.x,\r\n        controls && controls.right.y,\r\n        this.command\r\n      );\r\n      clone.relative = this._relative;\r\n      return clone;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Anchor#toObject\r\n     * @function\r\n     * @returns {Object} - An object with properties filled out to mirror {@link Two.Anchor}.\r\n     * @description Create a JSON compatible plain object of the current instance. Intended for use with storing values in a database.\r\n     */\r\n    toObject: function() {\r\n      var o = {\r\n        x: this.x,\r\n        y: this.y\r\n      };\r\n      if (this._command) {\r\n        o.command = this._command;\r\n      }\r\n      if (this._relative) {\r\n        o.relative = this._relative;\r\n      }\r\n      if (this.controls) {\r\n        o.controls = {\r\n          left: this.controls.left.toObject(),\r\n          right: this.controls.right.toObject()\r\n        };\r\n      }\r\n      return o;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Anchor#toString\r\n     * @function\r\n     * @returns {String} - A String with comma-separated values reflecting the various values on the current instance.\r\n     * @description Create a string form of the current instance. Intended for use with storing values in a database. This is lighter to store than the JSON compatible {@link Two.Anchor#toObject}.\r\n     */\r\n    toString: function() {\r\n      if (!this.controls) {\r\n        return [this._x, this._y].join(', ');\r\n      }\r\n      return [this._x, this._y, this.controls.left.x, this.controls.left.y,\r\n        this.controls.right.x, this.controls.right.y, this._command,\r\n        this._relative ? 1 : 0].join(', ');\r\n    }\r\n\r\n  };\r\n\r\n  Two.Anchor.MakeObservable(Two.Anchor.prototype);\r\n\r\n})((typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : (undefined || self || window)).Two);\r\n\n(function(Two) {\r\n\r\n  // Constants\r\n\r\n  var cos = Math.cos, sin = Math.sin, tan = Math.tan;\r\n  var _ = Two.Utils;\r\n  var array = [];\r\n\r\n  /**\r\n   * @name Two.Matrix\r\n   * @class\r\n   * @param {Number} [a=1] - The value for element at the first column and first row.\r\n   * @param {Number} [b=0] - The value for element at the second column and first row.\r\n   * @param {Number} [c=0] - The value for element at the third column and first row.\r\n   * @param {Number} [d=0] - The value for element at the first column and second row.\r\n   * @param {Number} [e=1] - The value for element at the second column and second row.\r\n   * @param {Number} [f=0] - The value for element at the third column and second row.\r\n   * @param {Number} [g=0] - The value for element at the first column and third row.\r\n   * @param {Number} [h=0] - The value for element at the second column and third row.\r\n   * @param {Number} [i=1] - The value for element at the third column and third row.\r\n   * @description A class to store 3 x 3 transformation matrix information. In addition to storing data `Two.Matrix` has suped up methods for commonplace mathematical operations.\r\n   * @nota-bene Order is based on how to construct transformation strings for the browser.\r\n   */\r\n  var Matrix = Two.Matrix = function(a, b, c, d, e, f) {\r\n\r\n    /**\r\n     * @name Two.Matrix#elements\r\n     * @property {Number[]} - The underlying data stored as an array.\r\n     */\r\n    this.elements = new Two.Array(9);\r\n\r\n    var elements = a;\r\n    if (!_.isArray(elements)) {\r\n      elements = _.toArray(arguments);\r\n    }\r\n\r\n    // initialize the elements with default values.\r\n    this.identity();\r\n\r\n    if (elements.length > 0) {\r\n      this.set(elements);\r\n    }\r\n\r\n  };\r\n\r\n  _.extend(Matrix, {\r\n\r\n    /**\r\n     * @name Two.Matrix.Identity\r\n     * @property {Number[]} - A stored reference to the default value of a 3 x 3 matrix.\r\n     */\r\n    Identity: [\r\n      1, 0, 0,\r\n      0, 1, 0,\r\n      0, 0, 1\r\n    ],\r\n\r\n    /**\r\n     * @name Two.Matrix.Multiply\r\n     * @function\r\n     * @param {Two.Matrix} A\r\n     * @param {Two.Matrix} B\r\n     * @param {Two.Matrix} [C] - An optional matrix to apply the multiplication to.\r\n     * @returns {Two.Matrix} - If an optional `C` matrix isn't passed then a new one is created and returned.\r\n     * @description Multiply two matrices together and return the result.\r\n     */\r\n    Multiply: function(A, B, C) {\r\n\r\n      if (B.length <= 3) { // Multiply Vector\r\n\r\n        var x, y, z, e = A;\r\n\r\n        var a = B[0] || 0,\r\n            b = B[1] || 0,\r\n            c = B[2] || 0;\r\n\r\n        // Go down rows first\r\n        // a, d, g, b, e, h, c, f, i\r\n\r\n        x = e[0] * a + e[1] * b + e[2] * c;\r\n        y = e[3] * a + e[4] * b + e[5] * c;\r\n        z = e[6] * a + e[7] * b + e[8] * c;\r\n\r\n        return { x: x, y: y, z: z };\r\n\r\n      }\r\n\r\n      var A0 = A[0], A1 = A[1], A2 = A[2];\r\n      var A3 = A[3], A4 = A[4], A5 = A[5];\r\n      var A6 = A[6], A7 = A[7], A8 = A[8];\r\n\r\n      var B0 = B[0], B1 = B[1], B2 = B[2];\r\n      var B3 = B[3], B4 = B[4], B5 = B[5];\r\n      var B6 = B[6], B7 = B[7], B8 = B[8];\r\n\r\n      C = C || new Two.Array(9);\r\n\r\n      C[0] = A0 * B0 + A1 * B3 + A2 * B6;\r\n      C[1] = A0 * B1 + A1 * B4 + A2 * B7;\r\n      C[2] = A0 * B2 + A1 * B5 + A2 * B8;\r\n      C[3] = A3 * B0 + A4 * B3 + A5 * B6;\r\n      C[4] = A3 * B1 + A4 * B4 + A5 * B7;\r\n      C[5] = A3 * B2 + A4 * B5 + A5 * B8;\r\n      C[6] = A6 * B0 + A7 * B3 + A8 * B6;\r\n      C[7] = A6 * B1 + A7 * B4 + A8 * B7;\r\n      C[8] = A6 * B2 + A7 * B5 + A8 * B8;\r\n\r\n      return C;\r\n\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(Matrix.prototype, Two.Utils.Events, {\r\n\r\n    constructor: Matrix,\r\n\r\n    /**\r\n     * @name Two.Matrix#manual\r\n     * @property {Boolean} - Determines whether Two.js automatically calculates the values for the matrix or if the developer intends to manage the matrix.\r\n     * @nota-bene - Setting to `true` nullifies {@link Two.Shape#translation}, {@link Two.Shape#rotation}, and {@link Two.Shape#scale}.\r\n     */\r\n    manual: false,\r\n\r\n    /**\r\n     * @name Two.Matrix#set\r\n     * @function\r\n     * @param {Number} a - The value for element at the first column and first row.\r\n     * @param {Number} b - The value for element at the second column and first row.\r\n     * @param {Number} c - The value for element at the third column and first row.\r\n     * @param {Number} d - The value for element at the first column and second row.\r\n     * @param {Number} e - The value for element at the second column and second row.\r\n     * @param {Number} f - The value for element at the third column and second row.\r\n     * @param {Number} g - The value for element at the first column and third row.\r\n     * @param {Number} h - The value for element at the second column and third row.\r\n     * @param {Number} i - The value for element at the third column and third row.\r\n     * @description Set an array of values onto the matrix. Order described in {@link Two.Matrix}.\r\n     */\r\n\r\n     /**\r\n      * @name Two.Matrix#set\r\n      * @function\r\n      * @param {Number[]} a - The array of elements to apply.\r\n      * @description Set an array of values onto the matrix. Order described in {@link Two.Matrix}.\r\n      */\r\n    set: function(a, b, c, d, e, f, g, h, i) {\r\n\r\n      var elements;\r\n\r\n      if (_.isUndefined(b)) {\r\n        elements = a;\r\n        a = elements[0];\r\n        b = elements[1];\r\n        c = elements[2];\r\n        d = elements[3];\r\n        e = elements[4];\r\n        f = elements[5];\r\n        g = elements[6];\r\n        h = elements[7];\r\n        i = elements[8];\r\n      }\r\n\r\n      this.elements[0] = a;\r\n      this.elements[1] = b;\r\n      this.elements[2] = c;\r\n      this.elements[3] = d;\r\n      this.elements[4] = e;\r\n      this.elements[5] = f;\r\n      this.elements[6] = g;\r\n      this.elements[7] = h;\r\n      this.elements[8] = i;\r\n\r\n      return this.trigger(Two.Events.change);\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Matrix#copy\r\n     * @function\r\n     * @description Copy the matrix of one to the current instance.\r\n     */\r\n    copy: function(m) {\r\n\r\n      this.elements[0] = m.elements[0];\r\n      this.elements[1] = m.elements[1];\r\n      this.elements[2] = m.elements[2];\r\n      this.elements[3] = m.elements[3];\r\n      this.elements[4] = m.elements[4];\r\n      this.elements[5] = m.elements[5];\r\n      this.elements[6] = m.elements[6];\r\n      this.elements[7] = m.elements[7];\r\n      this.elements[8] = m.elements[8];\r\n\r\n      this.manual = m.manual;\r\n\r\n      return this.trigger(Two.Events.change);\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Matrix#identity\r\n     * @function\r\n     * @description Turn matrix to the identity, like resetting.\r\n     */\r\n    identity: function() {\r\n\r\n      this.elements[0] = Matrix.Identity[0];\r\n      this.elements[1] = Matrix.Identity[1];\r\n      this.elements[2] = Matrix.Identity[2];\r\n      this.elements[3] = Matrix.Identity[3];\r\n      this.elements[4] = Matrix.Identity[4];\r\n      this.elements[5] = Matrix.Identity[5];\r\n      this.elements[6] = Matrix.Identity[6];\r\n      this.elements[7] = Matrix.Identity[7];\r\n      this.elements[8] = Matrix.Identity[8];\r\n\r\n      return this.trigger(Two.Events.change);\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Matrix.multiply\r\n     * @function\r\n     * @param {Number} a - The scalar to be multiplied.\r\n     * @description Multiply all components of the matrix against a single scalar value.\r\n     */\r\n\r\n    /**\r\n     * @name Two.Matrix.multiply\r\n     * @function\r\n     * @param {Number} a - The x component to be multiplied.\r\n     * @param {Number} b - The y component to be multiplied.\r\n     * @param {Number} c - The z component to be multiplied.\r\n     * @description Multiply all components of a matrix against a 3 component vector.\r\n     */\r\n\r\n    /**\r\n     * @name Two.Matrix.multiply\r\n     * @function\r\n     * @param {Number} a - The value at the first column and first row of the matrix to be multiplied.\r\n     * @param {Number} b - The value at the second column and first row of the matrix to be multiplied.\r\n     * @param {Number} c - The value at the third column and first row of the matrix to be multiplied.\r\n     * @param {Number} d - The value at the first column and second row of the matrix to be multiplied.\r\n     * @param {Number} e - The value at the second column and second row of the matrix to be multiplied.\r\n     * @param {Number} f - The value at the third column and second row of the matrix to be multiplied.\r\n     * @param {Number} g - The value at the first column and third row of the matrix to be multiplied.\r\n     * @param {Number} h - The value at the second column and third row of the matrix to be multiplied.\r\n     * @param {Number} i - The value at the third column and third row of the matrix to be multiplied.\r\n     * @description Multiply all components of a matrix against another matrix.\r\n     */\r\n    multiply: function(a, b, c, d, e, f, g, h, i) {\r\n\r\n      // Multiply scalar\r\n\r\n      if (_.isUndefined(b)) {\r\n\r\n        this.elements[0] *= a;\r\n        this.elements[1] *= a;\r\n        this.elements[2] *= a;\r\n        this.elements[3] *= a;\r\n        this.elements[4] *= a;\r\n        this.elements[5] *= a;\r\n        this.elements[6] *= a;\r\n        this.elements[7] *= a;\r\n        this.elements[8] *= a;\r\n\r\n        return this.trigger(Two.Events.change);\r\n\r\n      }\r\n\r\n      if (_.isUndefined(d)) { // Multiply Vector\r\n\r\n        var x, y, z;\r\n        a = a || 0;\r\n        b = b || 0;\r\n        c = c || 0;\r\n        e = this.elements;\r\n\r\n        // Go down rows first\r\n        // a, d, g, b, e, h, c, f, i\r\n\r\n        x = e[0] * a + e[1] * b + e[2] * c;\r\n        y = e[3] * a + e[4] * b + e[5] * c;\r\n        z = e[6] * a + e[7] * b + e[8] * c;\r\n\r\n        return { x: x, y: y, z: z };\r\n\r\n      }\r\n\r\n      // Multiple matrix\r\n\r\n      var A = this.elements;\r\n      var B = [a, b, c, d, e, f, g, h, i];\r\n\r\n      var A0 = A[0], A1 = A[1], A2 = A[2];\r\n      var A3 = A[3], A4 = A[4], A5 = A[5];\r\n      var A6 = A[6], A7 = A[7], A8 = A[8];\r\n\r\n      var B0 = B[0], B1 = B[1], B2 = B[2];\r\n      var B3 = B[3], B4 = B[4], B5 = B[5];\r\n      var B6 = B[6], B7 = B[7], B8 = B[8];\r\n\r\n      this.elements[0] = A0 * B0 + A1 * B3 + A2 * B6;\r\n      this.elements[1] = A0 * B1 + A1 * B4 + A2 * B7;\r\n      this.elements[2] = A0 * B2 + A1 * B5 + A2 * B8;\r\n\r\n      this.elements[3] = A3 * B0 + A4 * B3 + A5 * B6;\r\n      this.elements[4] = A3 * B1 + A4 * B4 + A5 * B7;\r\n      this.elements[5] = A3 * B2 + A4 * B5 + A5 * B8;\r\n\r\n      this.elements[6] = A6 * B0 + A7 * B3 + A8 * B6;\r\n      this.elements[7] = A6 * B1 + A7 * B4 + A8 * B7;\r\n      this.elements[8] = A6 * B2 + A7 * B5 + A8 * B8;\r\n\r\n      return this.trigger(Two.Events.change);\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Matrix#inverse\r\n     * @function\r\n     * @param {Two.Matrix} [out] - The optional matrix to apply the inversion to.\r\n     * @description Return an inverted version of the matrix. If no optional one is passed a new matrix is created and returned.\r\n     */\r\n    inverse: function(out) {\r\n\r\n      var a = this.elements;\r\n      out = out || new Two.Matrix();\r\n\r\n      var a00 = a[0], a01 = a[1], a02 = a[2];\r\n      var a10 = a[3], a11 = a[4], a12 = a[5];\r\n      var a20 = a[6], a21 = a[7], a22 = a[8];\r\n\r\n      var b01 = a22 * a11 - a12 * a21;\r\n      var b11 = -a22 * a10 + a12 * a20;\r\n      var b21 = a21 * a10 - a11 * a20;\r\n\r\n      // Calculate the determinant\r\n      var det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n      if (!det) {\r\n        return null;\r\n      }\r\n\r\n      det = 1.0 / det;\r\n\r\n      out.elements[0] = b01 * det;\r\n      out.elements[1] = (-a22 * a01 + a02 * a21) * det;\r\n      out.elements[2] = (a12 * a01 - a02 * a11) * det;\r\n      out.elements[3] = b11 * det;\r\n      out.elements[4] = (a22 * a00 - a02 * a20) * det;\r\n      out.elements[5] = (-a12 * a00 + a02 * a10) * det;\r\n      out.elements[6] = b21 * det;\r\n      out.elements[7] = (-a21 * a00 + a01 * a20) * det;\r\n      out.elements[8] = (a11 * a00 - a01 * a10) * det;\r\n\r\n      return out;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Matrix#scale\r\n     * @function\r\n     * @param {Number} scale - The one dimensional scale to apply to the matrix.\r\n     * @description Uniformly scale the transformation matrix.\r\n     */\r\n\r\n    /**\r\n     * @name Two.Matrix#scale\r\n     * @function\r\n     * @param {Number} sx - The horizontal scale factor.\r\n     * @param {Number} sy - The vertical scale factor\r\n     * @description Scale the transformation matrix in two dimensions.\r\n     */\r\n    scale: function(sx, sy) {\r\n\r\n      var l = arguments.length;\r\n      if (l <= 1) {\r\n        sy = sx;\r\n      }\r\n\r\n      return this.multiply(sx, 0, 0, 0, sy, 0, 0, 0, 1);\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Matrix#rotate\r\n     * @function\r\n     * @param {Radians} radians - The amount to rotate in radians.\r\n     * @description Rotate the matrix.\r\n     */\r\n    rotate: function(radians) {\r\n\r\n      var c = cos(radians);\r\n      var s = sin(radians);\r\n\r\n      return this.multiply(c, -s, 0, s, c, 0, 0, 0, 1);\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Matrix#translate\r\n     * @function\r\n     * @param {Number} x - The horizontal translation value to apply.\r\n     * @param {Number} y - The vertical translation value to apply.\r\n     * @description Translate the matrix.\r\n     */\r\n    translate: function(x, y) {\r\n\r\n      return this.multiply(1, 0, x, 0, 1, y, 0, 0, 1);\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Matrix#skewX\r\n     * @function\r\n     * @param {Radians} radians - The amount to skew in radians.\r\n     * @description Skew the matrix by an angle in the x axis direction.\r\n     */\r\n    skewX: function(radians) {\r\n\r\n      var a = tan(radians);\r\n\r\n      return this.multiply(1, a, 0, 0, 1, 0, 0, 0, 1);\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Matrix#skewY\r\n     * @function\r\n     * @param {Radians} radians - The amount to skew in radians.\r\n     * @description Skew the matrix by an angle in the y axis direction.\r\n     */\r\n    skewY: function(radians) {\r\n\r\n      var a = tan(radians);\r\n\r\n      return this.multiply(1, 0, 0, a, 1, 0, 0, 0, 1);\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Matrix#toString\r\n     * @function\r\n     * @param {Boolean} [fullMatrix=false] - Return the full 9 elements of the matrix or just 6 for 2D transformations.\r\n     * @returns {String} - The transformation matrix as a 6 component string separated by spaces.\r\n     * @description Create a transform string. Used for the Two.js rendering APIs.\r\n     */\r\n    toString: function(fullMatrix) {\r\n\r\n      array.length = 0;\r\n      this.toTransformArray(fullMatrix, array);\r\n\r\n      return array.map(Two.Utils.toFixed).join(' ');\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Matrix#toTransformArray\r\n     * @function\r\n     * @param {Boolean} [fullMatrix=false] - Return the full 9 elements of the matrix or just 6 in the format for 2D transformations.\r\n     * @param {Number[]} [output] - An array empty or otherwise to apply the values to.\r\n     * @description Create a transform array. Used for the Two.js rendering APIs.\r\n     */\r\n    toTransformArray: function(fullMatrix, output) {\r\n\r\n     var elements = this.elements;\r\n     var hasOutput = !!output;\r\n\r\n     var a = elements[0];\r\n     var b = elements[1];\r\n     var c = elements[2];\r\n     var d = elements[3];\r\n     var e = elements[4];\r\n     var f = elements[5];\r\n\r\n      if (fullMatrix) {\r\n\r\n        var g = elements[6];\r\n        var h = elements[7];\r\n        var i = elements[8];\r\n\r\n        if (hasOutput) {\r\n          output[0] = a;\r\n          output[1] = d;\r\n          output[2] = g;\r\n          output[3] = b;\r\n          output[4] = e;\r\n          output[5] = h;\r\n          output[6] = c;\r\n          output[7] = f;\r\n          output[8] = i;\r\n          return;\r\n        }\r\n\r\n        return [\r\n          a, d, g, b, e, h, c, f, i\r\n        ];\r\n      }\r\n\r\n      if (hasOutput) {\r\n        output[0] = a;\r\n        output[1] = d;\r\n        output[2] = b;\r\n        output[3] = e;\r\n        output[4] = c;\r\n        output[5] = f;\r\n        return;\r\n      }\r\n\r\n      return [\r\n        a, d, b, e, c, f  // Specific format see LN:19\r\n      ];\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Matrix#toArray\r\n     * @function\r\n     * @param {Boolean} [fullMatrix=false] - Return the full 9 elements of the matrix or just 6 for 2D transformations.\r\n     * @param {Number[]} [output] - An array empty or otherwise to apply the values to.\r\n     * @description Create a transform array. Used for the Two.js rendering APIs.\r\n     */\r\n    toArray: function(fullMatrix, output) {\r\n\r\n     var elements = this.elements;\r\n     var hasOutput = !!output;\r\n\r\n     var a = elements[0];\r\n     var b = elements[1];\r\n     var c = elements[2];\r\n     var d = elements[3];\r\n     var e = elements[4];\r\n     var f = elements[5];\r\n\r\n      if (fullMatrix) {\r\n\r\n        var g = elements[6];\r\n        var h = elements[7];\r\n        var i = elements[8];\r\n\r\n        if (hasOutput) {\r\n          output[0] = a;\r\n          output[1] = b;\r\n          output[2] = c;\r\n          output[3] = d;\r\n          output[4] = e;\r\n          output[5] = f;\r\n          output[6] = g;\r\n          output[7] = h;\r\n          output[8] = i;\r\n          return;\r\n        }\r\n\r\n        return [\r\n          a, b, c, d, e, f, g, h, i\r\n        ];\r\n      }\r\n\r\n      if (hasOutput) {\r\n        output[0] = a;\r\n        output[1] = b;\r\n        output[2] = c;\r\n        output[3] = d;\r\n        output[4] = e;\r\n        output[5] = f;\r\n        return;\r\n      }\r\n\r\n      return [\r\n        a, b, c, d, e, f\r\n      ];\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Matrix#toObject\r\n     * @function\r\n     * @description Create a JSON compatible object that represents information of the matrix.\r\n     */\r\n    toObject: function() {\r\n      return {\r\n        elements: this.toArray(true),\r\n        manual: !!this.manual\r\n      };\r\n    },\r\n\r\n    /**\r\n     * @name Two.Matrix#clone\r\n     * @function\r\n     * @description Clone the current matrix.\r\n     */\r\n    clone: function() {\r\n\r\n      return new Two.Matrix().copy(this);\r\n\r\n    }\r\n\r\n  });\r\n\r\n})((typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : (undefined || self || window)).Two);\r\n\n(function(Two) {\r\n\r\n  // Localize variables\r\n  var mod = Two.Utils.mod, toFixed = Two.Utils.toFixed;\r\n  var _ = Two.Utils;\r\n\r\n  var svg = {\r\n\r\n    version: 1.1,\r\n\r\n    ns: 'http://www.w3.org/2000/svg',\r\n    xlink: 'http://www.w3.org/1999/xlink',\r\n\r\n    alignments: {\r\n      left: 'start',\r\n      center: 'middle',\r\n      right: 'end'\r\n    },\r\n\r\n    /**\r\n     * Create an svg namespaced element.\r\n     */\r\n    createElement: function(name, attrs) {\r\n      var tag = name;\r\n      var elem = document.createElementNS(svg.ns, tag);\r\n      if (tag === 'svg') {\r\n        attrs = _.defaults(attrs || {}, {\r\n          version: svg.version\r\n        });\r\n      }\r\n      if (!_.isEmpty(attrs)) {\r\n        svg.setAttributes(elem, attrs);\r\n      }\r\n      return elem;\r\n    },\r\n\r\n    /**\r\n     * Add attributes from an svg element.\r\n     */\r\n    setAttributes: function(elem, attrs) {\r\n      var keys = Object.keys(attrs);\r\n      for (var i = 0; i < keys.length; i++) {\r\n        if (/href/.test(keys[i])) {\r\n          elem.setAttributeNS(svg.xlink, keys[i], attrs[keys[i]]);\r\n        } else {\r\n          elem.setAttribute(keys[i], attrs[keys[i]]);\r\n        }\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Remove attributes from an svg element.\r\n     */\r\n    removeAttributes: function(elem, attrs) {\r\n      for (var key in attrs) {\r\n        elem.removeAttribute(key);\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Turn a set of vertices into a string for the d property of a path\r\n     * element. It is imperative that the string collation is as fast as\r\n     * possible, because this call will be happening multiple times a\r\n     * second.\r\n     */\r\n    toString: function(points, closed) {\r\n\r\n      var l = points.length,\r\n        last = l - 1,\r\n        d, // The elusive last Two.Commands.move point\r\n        string = '';\r\n\r\n      for (var i = 0; i < l; i++) {\r\n        var b = points[i];\r\n        var command;\r\n        var prev = closed ? mod(i - 1, l) : Math.max(i - 1, 0);\r\n        var next = closed ? mod(i + 1, l) : Math.min(i + 1, last);\r\n\r\n        var a = points[prev];\r\n        var c = points[next];\r\n\r\n        var vx, vy, ux, uy, ar, bl, br, cl;\r\n        var rx, ry, xAxisRotation, largeArcFlag, sweepFlag;\r\n\r\n        // Access x and y directly,\r\n        // bypassing the getter\r\n        var x = toFixed(b.x);\r\n        var y = toFixed(b.y);\r\n\r\n        switch (b.command) {\r\n\r\n          case Two.Commands.close:\r\n            command = Two.Commands.close;\r\n            break;\r\n\r\n          case Two.Commands.arc:\r\n\r\n            rx = b.rx;\r\n            ry = b.ry;\r\n            xAxisRotation = b.xAxisRotation;\r\n            largeArcFlag = b.largeArcFlag;\r\n            sweepFlag = b.sweepFlag;\r\n\r\n            command = Two.Commands.arc + ' ' + rx + ' ' + ry + ' '\r\n              + xAxisRotation + ' ' + largeArcFlag + ' ' + sweepFlag + ' '\r\n              + x + ' ' + y;\r\n            break;\r\n\r\n          case Two.Commands.curve:\r\n\r\n            ar = (a.controls && a.controls.right) || Two.Vector.zero;\r\n            bl = (b.controls && b.controls.left) || Two.Vector.zero;\r\n\r\n            if (a.relative) {\r\n              vx = toFixed((ar.x + a.x));\r\n              vy = toFixed((ar.y + a.y));\r\n            } else {\r\n              vx = toFixed(ar.x);\r\n              vy = toFixed(ar.y);\r\n            }\r\n\r\n            if (b.relative) {\r\n              ux = toFixed((bl.x + b.x));\r\n              uy = toFixed((bl.y + b.y));\r\n            } else {\r\n              ux = toFixed(bl.x);\r\n              uy = toFixed(bl.y);\r\n            }\r\n\r\n            command = ((i === 0) ? Two.Commands.move : Two.Commands.curve) +\r\n              ' ' + vx + ' ' + vy + ' ' + ux + ' ' + uy + ' ' + x + ' ' + y;\r\n            break;\r\n\r\n          case Two.Commands.move:\r\n            d = b;\r\n            command = Two.Commands.move + ' ' + x + ' ' + y;\r\n            break;\r\n\r\n          default:\r\n            command = b.command + ' ' + x + ' ' + y;\r\n\r\n        }\r\n\r\n        // Add a final point and close it off\r\n\r\n        if (i >= last && closed) {\r\n\r\n          if (b.command === Two.Commands.curve) {\r\n\r\n            // Make sure we close to the most previous Two.Commands.move\r\n            c = d;\r\n\r\n            br = (b.controls && b.controls.right) || b;\r\n            cl = (c.controls && c.controls.left) || c;\r\n\r\n            if (b.relative) {\r\n              vx = toFixed((br.x + b.x));\r\n              vy = toFixed((br.y + b.y));\r\n            } else {\r\n              vx = toFixed(br.x);\r\n              vy = toFixed(br.y);\r\n            }\r\n\r\n            if (c.relative) {\r\n              ux = toFixed((cl.x + c.x));\r\n              uy = toFixed((cl.y + c.y));\r\n            } else {\r\n              ux = toFixed(cl.x);\r\n              uy = toFixed(cl.y);\r\n            }\r\n\r\n            x = toFixed(c.x);\r\n            y = toFixed(c.y);\r\n\r\n            command +=\r\n              ' C ' + vx + ' ' + vy + ' ' + ux + ' ' + uy + ' ' + x + ' ' + y;\r\n\r\n          }\r\n\r\n          if (b.command !== Two.Commands.close) {\r\n            command += ' Z';\r\n          }\r\n\r\n        }\r\n\r\n        string += command + ' ';\r\n\r\n      }\r\n\r\n      return string;\r\n\r\n    },\r\n\r\n    getClip: function(shape) {\r\n\r\n      var clip = shape._renderer.clip;\r\n\r\n      if (!clip) {\r\n\r\n        var root = shape;\r\n\r\n        while (root.parent) {\r\n          root = root.parent;\r\n        }\r\n\r\n        clip = shape._renderer.clip = svg.createElement('clipPath');\r\n        root.defs.appendChild(clip);\r\n\r\n      }\r\n\r\n      return clip;\r\n\r\n    },\r\n\r\n    group: {\r\n\r\n      // TODO: Can speed up.\r\n      // TODO: How does this effect a f\r\n      appendChild: function(object) {\r\n\r\n        var elem = object._renderer.elem;\r\n\r\n        if (!elem) {\r\n          return;\r\n        }\r\n\r\n        var tag = elem.nodeName;\r\n\r\n        if (!tag || /(radial|linear)gradient/i.test(tag) || object._clip) {\r\n          return;\r\n        }\r\n\r\n        this.elem.appendChild(elem);\r\n\r\n      },\r\n\r\n      removeChild: function(object) {\r\n\r\n        var elem = object._renderer.elem;\r\n\r\n        if (!elem || elem.parentNode != this.elem) {\r\n          return;\r\n        }\r\n\r\n        var tag = elem.nodeName;\r\n\r\n        if (!tag) {\r\n          return;\r\n        }\r\n\r\n        // Defer subtractions while clipping.\r\n        if (object._clip) {\r\n          return;\r\n        }\r\n\r\n        this.elem.removeChild(elem);\r\n\r\n      },\r\n\r\n      orderChild: function(object) {\r\n        this.elem.appendChild(object._renderer.elem);\r\n      },\r\n\r\n      renderChild: function(child) {\r\n        svg[child._renderer.type].render.call(child, this);\r\n      },\r\n\r\n      render: function(domElement) {\r\n\r\n        this._update();\r\n\r\n        // Shortcut for hidden objects.\r\n        // Doesn't reset the flags, so changes are stored and\r\n        // applied once the object is visible again\r\n        if (this._opacity === 0 && !this._flagOpacity) {\r\n          return this;\r\n        }\r\n\r\n        if (!this._renderer.elem) {\r\n          this._renderer.elem = svg.createElement('g', {\r\n            id: this.id\r\n          });\r\n          domElement.appendChild(this._renderer.elem);\r\n        }\r\n\r\n        // _Update styles for the <g>\r\n        var flagMatrix = this._matrix.manual || this._flagMatrix;\r\n        var context = {\r\n          domElement: domElement,\r\n          elem: this._renderer.elem\r\n        };\r\n\r\n        if (flagMatrix) {\r\n          this._renderer.elem.setAttribute('transform', 'matrix(' + this._matrix.toString() + ')');\r\n        }\r\n\r\n        for (var i = 0; i < this.children.length; i++) {\r\n          var child = this.children[i];\r\n          svg[child._renderer.type].render.call(child, domElement);\r\n        }\r\n\r\n        if (this._flagOpacity) {\r\n          this._renderer.elem.setAttribute('opacity', this._opacity);\r\n        }\r\n\r\n        if (this._flagClassName) {\r\n          this._renderer.elem.setAttribute('class', this.classList.join(' '));\r\n        }\r\n\r\n        if (this._flagAdditions) {\r\n          this.additions.forEach(svg.group.appendChild, context);\r\n        }\r\n\r\n        if (this._flagSubtractions) {\r\n          this.subtractions.forEach(svg.group.removeChild, context);\r\n        }\r\n\r\n        if (this._flagOrder) {\r\n          this.children.forEach(svg.group.orderChild, context);\r\n        }\r\n\r\n        /**\r\n         * Commented two-way functionality of clips / masks with groups and\r\n         * polygons. Uncomment when this bug is fixed:\r\n         * https://code.google.com/p/chromium/issues/detail?id=370951\r\n         */\r\n\r\n        // if (this._flagClip) {\r\n\r\n        //   clip = svg.getClip(this);\r\n        //   elem = this._renderer.elem;\r\n\r\n        //   if (this._clip) {\r\n        //     elem.removeAttribute('id');\r\n        //     clip.setAttribute('id', this.id);\r\n        //     clip.appendChild(elem);\r\n        //   } else {\r\n        //     clip.removeAttribute('id');\r\n        //     elem.setAttribute('id', this.id);\r\n        //     this.parent._renderer.elem.appendChild(elem); // TODO: should be insertBefore\r\n        //   }\r\n\r\n        // }\r\n\r\n        if (this._flagMask) {\r\n          if (this._mask) {\r\n            this._renderer.elem.setAttribute('clip-path', 'url(#' + this._mask.id + ')');\r\n          } else {\r\n            this._renderer.elem.removeAttribute('clip-path');\r\n          }\r\n        }\r\n\r\n        return this.flagReset();\r\n\r\n      }\r\n\r\n    },\r\n\r\n    path: {\r\n\r\n      render: function(domElement) {\r\n\r\n        this._update();\r\n\r\n        // Shortcut for hidden objects.\r\n        // Doesn't reset the flags, so changes are stored and\r\n        // applied once the object is visible again\r\n        if (this._opacity === 0 && !this._flagOpacity) {\r\n          return this;\r\n        }\r\n\r\n        // Collect any attribute that needs to be changed here\r\n        var changed = {};\r\n\r\n        var flagMatrix = this._matrix.manual || this._flagMatrix;\r\n\r\n        if (flagMatrix) {\r\n          changed.transform = 'matrix(' + this._matrix.toString() + ')';\r\n        }\r\n\r\n        if (this._flagVertices) {\r\n          var vertices = svg.toString(this._renderer.vertices, this._closed);\r\n          changed.d = vertices;\r\n        }\r\n\r\n        if (this._fill && this._fill._renderer) {\r\n          this._fill._update();\r\n          svg[this._fill._renderer.type].render.call(this._fill, domElement, true);\r\n        }\r\n\r\n        if (this._flagFill) {\r\n          changed.fill = this._fill && this._fill.id\r\n            ? 'url(#' + this._fill.id + ')' : this._fill;\r\n        }\r\n\r\n        if (this._stroke && this._stroke._renderer) {\r\n          this._stroke._update();\r\n          svg[this._stroke._renderer.type].render.call(this._stroke, domElement, true);\r\n        }\r\n\r\n        if (this._flagStroke) {\r\n          changed.stroke = this._stroke && this._stroke.id\r\n            ? 'url(#' + this._stroke.id + ')' : this._stroke;\r\n        }\r\n\r\n        if (this._flagLinewidth) {\r\n          changed['stroke-width'] = this._linewidth;\r\n        }\r\n\r\n        if (this._flagOpacity) {\r\n          changed['stroke-opacity'] = this._opacity;\r\n          changed['fill-opacity'] = this._opacity;\r\n        }\r\n\r\n        if (this._flagClassName) {\r\n          changed['class'] = this.classList.join(' ');\r\n        }\r\n\r\n        if (this._flagVisible) {\r\n          changed.visibility = this._visible ? 'visible' : 'hidden';\r\n        }\r\n\r\n        if (this._flagCap) {\r\n          changed['stroke-linecap'] = this._cap;\r\n        }\r\n\r\n        if (this._flagJoin) {\r\n          changed['stroke-linejoin'] = this._join;\r\n        }\r\n\r\n        if (this._flagMiter) {\r\n          changed['stroke-miterlimit'] = this._miter;\r\n        }\r\n\r\n        if (this.dashes && this.dashes.length > 0) {\r\n          changed['stroke-dasharray'] = this.dashes.join(' ');\r\n          changed['stroke-dashoffset'] = this.dashes.offset || 0;\r\n        }\r\n\r\n        // If there is no attached DOM element yet,\r\n        // create it with all necessary attributes.\r\n        if (!this._renderer.elem) {\r\n\r\n          changed.id = this.id;\r\n          this._renderer.elem = svg.createElement('path', changed);\r\n          domElement.appendChild(this._renderer.elem);\r\n\r\n        // Otherwise apply all pending attributes\r\n        } else {\r\n          svg.setAttributes(this._renderer.elem, changed);\r\n        }\r\n\r\n        if (this._flagClip) {\r\n\r\n          var clip = svg.getClip(this);\r\n          var elem = this._renderer.elem;\r\n\r\n          if (this._clip) {\r\n            elem.removeAttribute('id');\r\n            clip.setAttribute('id', this.id);\r\n            clip.appendChild(elem);\r\n          } else {\r\n            clip.removeAttribute('id');\r\n            elem.setAttribute('id', this.id);\r\n            this.parent._renderer.elem.appendChild(elem); // TODO: should be insertBefore\r\n          }\r\n\r\n        }\r\n\r\n        /**\r\n         * Commented two-way functionality of clips / masks with groups and\r\n         * polygons. Uncomment when this bug is fixed:\r\n         * https://code.google.com/p/chromium/issues/detail?id=370951\r\n         */\r\n\r\n        // if (this._flagMask) {\r\n        //   if (this._mask) {\r\n        //     elem.setAttribute('clip-path', 'url(#' + this._mask.id + ')');\r\n        //   } else {\r\n        //     elem.removeAttribute('clip-path');\r\n        //   }\r\n        // }\r\n\r\n        return this.flagReset();\r\n\r\n      }\r\n\r\n    },\r\n\r\n    text: {\r\n\r\n      render: function(domElement) {\r\n\r\n        this._update();\r\n\r\n        var changed = {};\r\n\r\n        var flagMatrix = this._matrix.manual || this._flagMatrix;\r\n\r\n        if (flagMatrix) {\r\n          changed.transform = 'matrix(' + this._matrix.toString() + ')';\r\n        }\r\n\r\n        if (this._flagFamily) {\r\n          changed['font-family'] = this._family;\r\n        }\r\n        if (this._flagSize) {\r\n          changed['font-size'] = this._size;\r\n        }\r\n        if (this._flagLeading) {\r\n          changed['line-height'] = this._leading;\r\n        }\r\n        if (this._flagAlignment) {\r\n          changed['text-anchor'] = svg.alignments[this._alignment] || this._alignment;\r\n        }\r\n        if (this._flagBaseline) {\r\n          changed['alignment-baseline'] = changed['dominant-baseline'] = this._baseline;\r\n        }\r\n        if (this._flagStyle) {\r\n          changed['font-style'] = this._style;\r\n        }\r\n        if (this._flagWeight) {\r\n          changed['font-weight'] = this._weight;\r\n        }\r\n        if (this._flagDecoration) {\r\n          changed['text-decoration'] = this._decoration;\r\n        }\r\n        if (this._fill && this._fill._renderer) {\r\n          this._fill._update();\r\n          svg[this._fill._renderer.type].render.call(this._fill, domElement, true);\r\n        }\r\n        if (this._flagFill) {\r\n          changed.fill = this._fill && this._fill.id\r\n            ? 'url(#' + this._fill.id + ')' : this._fill;\r\n        }\r\n        if (this._stroke && this._stroke._renderer) {\r\n          this._stroke._update();\r\n          svg[this._stroke._renderer.type].render.call(this._stroke, domElement, true);\r\n        }\r\n        if (this._flagStroke) {\r\n          changed.stroke = this._stroke && this._stroke.id\r\n            ? 'url(#' + this._stroke.id + ')' : this._stroke;\r\n        }\r\n        if (this._flagLinewidth) {\r\n          changed['stroke-width'] = this._linewidth;\r\n        }\r\n        if (this._flagOpacity) {\r\n          changed.opacity = this._opacity;\r\n        }\r\n        if (this._flagClassName) {\r\n          changed['class'] = this.classList.join(' ');\r\n        }\r\n        if (this._flagVisible) {\r\n          changed.visibility = this._visible ? 'visible' : 'hidden';\r\n        }\r\n        if (this.dashes && this.dashes.length > 0) {\r\n          changed['stroke-dasharray'] = this.dashes.join(' ');\r\n          changed['stroke-dashoffset'] = this.dashes.offset || 0;\r\n        }\r\n\r\n        if (!this._renderer.elem) {\r\n\r\n          changed.id = this.id;\r\n\r\n          this._renderer.elem = svg.createElement('text', changed);\r\n          domElement.defs.appendChild(this._renderer.elem);\r\n\r\n        } else {\r\n\r\n          svg.setAttributes(this._renderer.elem, changed);\r\n\r\n        }\r\n\r\n        if (this._flagClip) {\r\n\r\n          var clip = svg.getClip(this);\r\n          var elem = this._renderer.elem;\r\n\r\n          if (this._clip) {\r\n            elem.removeAttribute('id');\r\n            clip.setAttribute('id', this.id);\r\n            clip.appendChild(elem);\r\n          } else {\r\n            clip.removeAttribute('id');\r\n            elem.setAttribute('id', this.id);\r\n            this.parent._renderer.elem.appendChild(elem); // TODO: should be insertBefore\r\n          }\r\n\r\n        }\r\n\r\n        if (this._flagValue) {\r\n          this._renderer.elem.textContent = this._value;\r\n        }\r\n\r\n        return this.flagReset();\r\n\r\n      }\r\n\r\n    },\r\n\r\n    'linear-gradient': {\r\n\r\n      render: function(domElement, silent) {\r\n\r\n        if (!silent) {\r\n          this._update();\r\n        }\r\n\r\n        var changed = {};\r\n\r\n        if (this._flagEndPoints) {\r\n          changed.x1 = this.left._x;\r\n          changed.y1 = this.left._y;\r\n          changed.x2 = this.right._x;\r\n          changed.y2 = this.right._y;\r\n        }\r\n\r\n        if (this._flagSpread) {\r\n          changed.spreadMethod = this._spread;\r\n        }\r\n\r\n        // If there is no attached DOM element yet,\r\n        // create it with all necessary attributes.\r\n        if (!this._renderer.elem) {\r\n\r\n          changed.id = this.id;\r\n          changed.gradientUnits = 'userSpaceOnUse';\r\n          this._renderer.elem = svg.createElement('linearGradient', changed);\r\n          domElement.defs.appendChild(this._renderer.elem);\r\n\r\n        // Otherwise apply all pending attributes\r\n        } else {\r\n\r\n          svg.setAttributes(this._renderer.elem, changed);\r\n\r\n        }\r\n\r\n        if (this._flagStops) {\r\n\r\n          var lengthChanged = this._renderer.elem.childNodes.length\r\n            !== this.stops.length;\r\n\r\n          if (lengthChanged) {\r\n            while (this._renderer.elem.lastChild) {\r\n              this._renderer.elem.removeChild(this._renderer.elem.lastChild);\r\n            }\r\n          }\r\n\r\n          for (var i = 0; i < this.stops.length; i++) {\r\n\r\n            var stop = this.stops[i];\r\n            var attrs = {};\r\n\r\n            if (stop._flagOffset) {\r\n              attrs.offset = 100 * stop._offset + '%';\r\n            }\r\n            if (stop._flagColor) {\r\n              attrs['stop-color'] = stop._color;\r\n            }\r\n            if (stop._flagOpacity) {\r\n              attrs['stop-opacity'] = stop._opacity;\r\n            }\r\n\r\n            if (!stop._renderer.elem) {\r\n              stop._renderer.elem = svg.createElement('stop', attrs);\r\n            } else {\r\n              svg.setAttributes(stop._renderer.elem, attrs);\r\n            }\r\n\r\n            if (lengthChanged) {\r\n              this._renderer.elem.appendChild(stop._renderer.elem);\r\n            }\r\n            stop.flagReset();\r\n\r\n          }\r\n\r\n        }\r\n\r\n        return this.flagReset();\r\n\r\n      }\r\n\r\n    },\r\n\r\n    'radial-gradient': {\r\n\r\n      render: function(domElement, silent) {\r\n\r\n        if (!silent) {\r\n          this._update();\r\n        }\r\n\r\n        var changed = {};\r\n\r\n        if (this._flagCenter) {\r\n          changed.cx = this.center._x;\r\n          changed.cy = this.center._y;\r\n        }\r\n        if (this._flagFocal) {\r\n          changed.fx = this.focal._x;\r\n          changed.fy = this.focal._y;\r\n        }\r\n\r\n        if (this._flagRadius) {\r\n          changed.r = this._radius;\r\n        }\r\n\r\n        if (this._flagSpread) {\r\n          changed.spreadMethod = this._spread;\r\n        }\r\n\r\n        // If there is no attached DOM element yet,\r\n        // create it with all necessary attributes.\r\n        if (!this._renderer.elem) {\r\n\r\n          changed.id = this.id;\r\n          changed.gradientUnits = 'userSpaceOnUse';\r\n          this._renderer.elem = svg.createElement('radialGradient', changed);\r\n          domElement.defs.appendChild(this._renderer.elem);\r\n\r\n        // Otherwise apply all pending attributes\r\n        } else {\r\n\r\n          svg.setAttributes(this._renderer.elem, changed);\r\n\r\n        }\r\n\r\n        if (this._flagStops) {\r\n\r\n          var lengthChanged = this._renderer.elem.childNodes.length\r\n            !== this.stops.length;\r\n\r\n          if (lengthChanged) {\r\n            while (this._renderer.elem.lastChild) {\r\n              this._renderer.elem.removeChild(this._renderer.elem.lastChild);\r\n            }\r\n          }\r\n\r\n          for (var i = 0; i < this.stops.length; i++) {\r\n\r\n            var stop = this.stops[i];\r\n            var attrs = {};\r\n\r\n            if (stop._flagOffset) {\r\n              attrs.offset = 100 * stop._offset + '%';\r\n            }\r\n            if (stop._flagColor) {\r\n              attrs['stop-color'] = stop._color;\r\n            }\r\n            if (stop._flagOpacity) {\r\n              attrs['stop-opacity'] = stop._opacity;\r\n            }\r\n\r\n            if (!stop._renderer.elem) {\r\n              stop._renderer.elem = svg.createElement('stop', attrs);\r\n            } else {\r\n              svg.setAttributes(stop._renderer.elem, attrs);\r\n            }\r\n\r\n            if (lengthChanged) {\r\n              this._renderer.elem.appendChild(stop._renderer.elem);\r\n            }\r\n            stop.flagReset();\r\n\r\n          }\r\n\r\n        }\r\n\r\n        return this.flagReset();\r\n\r\n      }\r\n\r\n    },\r\n\r\n    texture: {\r\n\r\n      render: function(domElement, silent) {\r\n\r\n        if (!silent) {\r\n          this._update();\r\n        }\r\n\r\n        var changed = {};\r\n        var styles = { x: 0, y: 0 };\r\n        var image = this.image;\r\n\r\n        if (this._flagLoaded && this.loaded) {\r\n\r\n          switch (image.nodeName.toLowerCase()) {\r\n\r\n            case 'canvas':\r\n              styles.href = styles['xlink:href'] = image.toDataURL('image/png');\r\n              break;\r\n            case 'img':\r\n            case 'image':\r\n              styles.href = styles['xlink:href'] = this.src;\r\n              break;\r\n\r\n          }\r\n\r\n        }\r\n\r\n        if (this._flagOffset || this._flagLoaded || this._flagScale) {\r\n\r\n          changed.x = this._offset.x;\r\n          changed.y = this._offset.y;\r\n\r\n          if (image) {\r\n\r\n            changed.x -= image.width / 2;\r\n            changed.y -= image.height / 2;\r\n\r\n            if (this._scale instanceof Two.Vector) {\r\n              changed.x *= this._scale.x;\r\n              changed.y *= this._scale.y;\r\n            } else {\r\n              changed.x *= this._scale;\r\n              changed.y *= this._scale;\r\n            }\r\n          }\r\n\r\n          if (changed.x > 0) {\r\n            changed.x *= - 1;\r\n          }\r\n          if (changed.y > 0) {\r\n            changed.y *= - 1;\r\n          }\r\n\r\n        }\r\n\r\n        if (this._flagScale || this._flagLoaded || this._flagRepeat) {\r\n\r\n          changed.width = 0;\r\n          changed.height = 0;\r\n\r\n          if (image) {\r\n\r\n            styles.width = changed.width = image.width;\r\n            styles.height = changed.height = image.height;\r\n\r\n            // TODO: Hack / Band-aid\r\n            switch (this._repeat) {\r\n              case 'no-repeat':\r\n                changed.width += 1;\r\n                changed.height += 1;\r\n                break;\r\n            }\r\n\r\n            if (this._scale instanceof Two.Vector) {\r\n              changed.width *= this._scale.x;\r\n              changed.height *= this._scale.y;\r\n            } else {\r\n              changed.width *= this._scale;\r\n              changed.height *= this._scale;\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n        if (this._flagScale || this._flagLoaded) {\r\n          if (!this._renderer.image) {\r\n            this._renderer.image = svg.createElement('image', styles);\r\n          } else if (!_.isEmpty(styles)) {\r\n            svg.setAttributes(this._renderer.image, styles);\r\n          }\r\n        }\r\n\r\n        if (!this._renderer.elem) {\r\n\r\n          changed.id = this.id;\r\n          changed.patternUnits = 'userSpaceOnUse';\r\n          this._renderer.elem = svg.createElement('pattern', changed);\r\n          domElement.defs.appendChild(this._renderer.elem);\r\n\r\n        } else if (!_.isEmpty(changed)) {\r\n\r\n          svg.setAttributes(this._renderer.elem, changed);\r\n\r\n        }\r\n\r\n        if (this._renderer.elem && this._renderer.image && !this._renderer.appended) {\r\n          this._renderer.elem.appendChild(this._renderer.image);\r\n          this._renderer.appended = true;\r\n        }\r\n\r\n        return this.flagReset();\r\n\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * @name Two.SVGRenderer\r\n   * @class\r\n   * @extends Two.Utils.Events\r\n   * @param {Object} [parameters] - This object is inherited when constructing a new instance of {@link Two}.\r\n   * @param {Element} [parameters.domElement] - The `<svg />` to draw to. If none given a new one will be constructed.\r\n   * @description This class is used by {@link Two} when constructing with `type` of `Two.Types.svg` (the default type). It takes Two.js' scenegraph and renders it to a `<svg />`.\r\n   */\r\n  var Renderer = Two[Two.Types.svg] = function(params) {\r\n\r\n    /**\r\n     * @name Two.SVGRenderer#domElement\r\n     * @property {Element} - The `<svg />` associated with the Two.js scene.\r\n     */\r\n    this.domElement = params.domElement || svg.createElement('svg');\r\n\r\n    /**\r\n     * @name Two.SVGRenderer#scene\r\n     * @property {Two.Group} - The root group of the scenegraph.\r\n     */\r\n    this.scene = new Two.Group();\r\n    this.scene.parent = this;\r\n\r\n    /**\r\n     * @name Two.SVGRenderer#defs\r\n     * @property {SvgDefintionsElement} - The `<defs />` to apply gradients, patterns, and bitmap imagery.\r\n     */\r\n    this.defs = svg.createElement('defs');\r\n    this.domElement.appendChild(this.defs);\r\n    this.domElement.defs = this.defs;\r\n    this.domElement.style.overflow = 'hidden';\r\n\r\n  };\r\n\r\n  _.extend(Renderer, {\r\n\r\n    /**\r\n     * @name Two.SVGRenderer.Utils\r\n     * @property {Object} - A massive object filled with utility functions and properties to render Two.js objects to a `<svg />`.\r\n     */\r\n    Utils: svg\r\n\r\n  });\r\n\r\n  _.extend(Renderer.prototype, Two.Utils.Events, {\r\n\r\n    constructor: Renderer,\r\n\r\n    /**\r\n     * @name Two.SVGRenderer#setSize\r\n     * @function\r\n     * @param {Number} width - The new width of the renderer.\r\n     * @param {Number} height - The new height of the renderer.\r\n     * @description Change the size of the renderer.\r\n     * @nota-bene Triggers a `Two.Events.resize`.\r\n     */\r\n    setSize: function(width, height) {\r\n\r\n      this.width = width;\r\n      this.height = height;\r\n\r\n      svg.setAttributes(this.domElement, {\r\n        width: width,\r\n        height: height\r\n      });\r\n\r\n      return this.trigger(Two.Events.resize, width, height);\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.SVGRenderer#render\r\n     * @function\r\n     * @description Render the current scene to the `<svg />`.\r\n     */\r\n    render: function() {\r\n\r\n      svg.group.render.call(this.scene, this.domElement);\r\n\r\n      return this;\r\n\r\n    }\r\n\r\n  });\r\n\r\n})((typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : (undefined || self || window)).Two);\r\n\n(function(Two) {\r\n\r\n  /**\r\n   * Constants\r\n   */\r\n  var mod = Two.Utils.mod;\r\n  var getRatio = Two.Utils.getRatio;\r\n  var _ = Two.Utils;\r\n  var emptyArray = [];\r\n  var TWO_PI = Math.PI * 2,\r\n    max = Math.max,\r\n    min = Math.min,\r\n    abs = Math.abs,\r\n    sin = Math.sin,\r\n    cos = Math.cos,\r\n    acos = Math.acos,\r\n    sqrt = Math.sqrt;\r\n\r\n  // Returns true if this is a non-transforming matrix\r\n  var isDefaultMatrix = function (m) {\r\n    return (m[0] == 1 && m[3] == 0 && m[1] == 0 && m[4] == 1 && m[2] == 0 && m[5] == 0);\r\n  };\r\n\r\n  var canvas = {\r\n\r\n    isHidden: /(undefined|none|transparent)/i,\r\n\r\n    alignments: {\r\n      left: 'start',\r\n      middle: 'center',\r\n      right: 'end'\r\n    },\r\n\r\n    shim: function(elem, name) {\r\n      elem.tagName = elem.nodeName = name || 'canvas';\r\n      elem.nodeType = 1;\r\n      elem.getAttribute = function(prop) {\r\n        return this[prop];\r\n      };\r\n      elem.setAttribute = function(prop, val) {\r\n        this[prop] = val;\r\n        return this;\r\n      };\r\n      return elem;\r\n    },\r\n\r\n    group: {\r\n\r\n      renderChild: function(child) {\r\n        canvas[child._renderer.type].render.call(child, this.ctx, true, this.clip);\r\n      },\r\n\r\n      render: function(ctx) {\r\n\r\n        // TODO: Add a check here to only invoke _update if need be.\r\n        this._update();\r\n\r\n        var matrix = this._matrix.elements;\r\n        var parent = this.parent;\r\n        this._renderer.opacity = this._opacity\r\n          * (parent && parent._renderer ? parent._renderer.opacity : 1);\r\n\r\n        var mask = this._mask;\r\n        // var clip = this._clip;\r\n\r\n        var defaultMatrix = isDefaultMatrix(matrix);\r\n        var shouldIsolate = !defaultMatrix || !!mask;\r\n\r\n        if (!this._renderer.context) {\r\n          this._renderer.context = {};\r\n        }\r\n\r\n        this._renderer.context.ctx = ctx;\r\n        // this._renderer.context.clip = clip;\r\n\r\n        if (shouldIsolate) {\r\n          ctx.save();\r\n          if (!defaultMatrix) {\r\n            ctx.transform(  matrix[0], matrix[3], matrix[1],\r\n              matrix[4], matrix[2], matrix[5]);\r\n          }\r\n        }\r\n\r\n        if (mask) {\r\n          canvas[mask._renderer.type].render.call(mask, ctx, true);\r\n        }\r\n\r\n        if (this.opacity > 0 && this.scale !== 0) {\r\n          for (var i = 0; i < this.children.length; i++) {\r\n            var child = this.children[i];\r\n            canvas[child._renderer.type].render.call(child, ctx);\r\n          }\r\n        }\r\n\r\n        if (shouldIsolate) {\r\n          ctx.restore();\r\n        }\r\n\r\n       /**\r\n         * Commented two-way functionality of clips / masks with groups and\r\n         * polygons. Uncomment when this bug is fixed:\r\n         * https://code.google.com/p/chromium/issues/detail?id=370951\r\n         */\r\n\r\n        // if (clip) {\r\n        //   ctx.clip();\r\n        // }\r\n\r\n        return this.flagReset();\r\n\r\n      }\r\n\r\n    },\r\n\r\n    path: {\r\n\r\n      render: function(ctx, forced, parentClipped) {\r\n\r\n        var matrix, stroke, linewidth, fill, opacity, visible, cap, join, miter,\r\n            closed, commands, length, last, next, prev, a, b, c, d, ux, uy, vx, vy,\r\n            ar, bl, br, cl, x, y, mask, clip, defaultMatrix, isOffset, dashes;\r\n\r\n        // TODO: Add a check here to only invoke _update if need be.\r\n        this._update();\r\n\r\n        matrix = this._matrix.elements;\r\n        stroke = this._stroke;\r\n        linewidth = this._linewidth;\r\n        fill = this._fill;\r\n        opacity = this._opacity * this.parent._renderer.opacity;\r\n        visible = this._visible;\r\n        cap = this._cap;\r\n        join = this._join;\r\n        miter = this._miter;\r\n        closed = this._closed;\r\n        commands = this._renderer.vertices; // Commands\r\n        length = commands.length;\r\n        last = length - 1;\r\n        defaultMatrix = isDefaultMatrix(matrix);\r\n        dashes = this.dashes;\r\n\r\n        // mask = this._mask;\r\n        clip = this._clip;\r\n\r\n        if (!forced && (!visible || clip)) {\r\n          return this;\r\n        }\r\n\r\n        // Transform\r\n        if (!defaultMatrix) {\r\n          ctx.save();\r\n          ctx.transform(matrix[0], matrix[3], matrix[1], matrix[4], matrix[2], matrix[5]);\r\n        }\r\n\r\n       /**\r\n         * Commented two-way functionality of clips / masks with groups and\r\n         * polygons. Uncomment when this bug is fixed:\r\n         * https://code.google.com/p/chromium/issues/detail?id=370951\r\n         */\r\n\r\n        // if (mask) {\r\n        //   canvas[mask._renderer.type].render.call(mask, ctx, true);\r\n        // }\r\n\r\n        // Styles\r\n        if (fill) {\r\n          if (_.isString(fill)) {\r\n            ctx.fillStyle = fill;\r\n          } else {\r\n            canvas[fill._renderer.type].render.call(fill, ctx);\r\n            ctx.fillStyle = fill._renderer.effect;\r\n          }\r\n        }\r\n        if (stroke) {\r\n          if (_.isString(stroke)) {\r\n            ctx.strokeStyle = stroke;\r\n          } else {\r\n            canvas[stroke._renderer.type].render.call(stroke, ctx);\r\n            ctx.strokeStyle = stroke._renderer.effect;\r\n          }\r\n          if (linewidth) {\r\n            ctx.lineWidth = linewidth;\r\n          }\r\n          if (miter) {\r\n            ctx.miterLimit = miter;\r\n          }\r\n          if (join) {\r\n            ctx.lineJoin = join;\r\n          }\r\n          if (!closed && cap) {\r\n            ctx.lineCap = cap;\r\n          }\r\n        }\r\n        if (_.isNumber(opacity)) {\r\n          ctx.globalAlpha = opacity;\r\n        }\r\n\r\n        if (dashes && dashes.length > 0) {\r\n          ctx.lineDashOffset = dashes.offset || 0;\r\n          ctx.setLineDash(dashes);\r\n        }\r\n\r\n        ctx.beginPath();\r\n\r\n        for (var i = 0; i < commands.length; i++) {\r\n\r\n          b = commands[i];\r\n\r\n          x = b.x;\r\n          y = b.y;\r\n\r\n          switch (b.command) {\r\n\r\n            case Two.Commands.close:\r\n              ctx.closePath();\r\n              break;\r\n\r\n            case Two.Commands.arc:\r\n\r\n              var rx = b.rx;\r\n              var ry = b.ry;\r\n              var xAxisRotation = b.xAxisRotation;\r\n              var largeArcFlag = b.largeArcFlag;\r\n              var sweepFlag = b.sweepFlag;\r\n\r\n              prev = closed ? mod(i - 1, length) : max(i - 1, 0);\r\n              a = commands[prev];\r\n\r\n              var ax = a.x;\r\n              var ay = a.y;\r\n\r\n              canvas.renderSvgArcCommand(ctx, ax, ay, rx, ry, largeArcFlag, sweepFlag, xAxisRotation, x, y);\r\n              break;\r\n\r\n            case Two.Commands.curve:\r\n\r\n              prev = closed ? mod(i - 1, length) : Math.max(i - 1, 0);\r\n              next = closed ? mod(i + 1, length) : Math.min(i + 1, last);\r\n\r\n              a = commands[prev];\r\n              c = commands[next];\r\n              ar = (a.controls && a.controls.right) || Two.Vector.zero;\r\n              bl = (b.controls && b.controls.left) || Two.Vector.zero;\r\n\r\n              if (a._relative) {\r\n                vx = (ar.x + a.x);\r\n                vy = (ar.y + a.y);\r\n              } else {\r\n                vx = ar.x;\r\n                vy = ar.y;\r\n              }\r\n\r\n              if (b._relative) {\r\n                ux = (bl.x + b.x);\r\n                uy = (bl.y + b.y);\r\n              } else {\r\n                ux = bl.x;\r\n                uy = bl.y;\r\n              }\r\n\r\n              ctx.bezierCurveTo(vx, vy, ux, uy, x, y);\r\n\r\n              if (i >= last && closed) {\r\n\r\n                c = d;\r\n\r\n                br = (b.controls && b.controls.right) || Two.Vector.zero;\r\n                cl = (c.controls && c.controls.left) || Two.Vector.zero;\r\n\r\n                if (b._relative) {\r\n                  vx = (br.x + b.x);\r\n                  vy = (br.y + b.y);\r\n                } else {\r\n                  vx = br.x;\r\n                  vy = br.y;\r\n                }\r\n\r\n                if (c._relative) {\r\n                  ux = (cl.x + c.x);\r\n                  uy = (cl.y + c.y);\r\n                } else {\r\n                  ux = cl.x;\r\n                  uy = cl.y;\r\n                }\r\n\r\n                x = c.x;\r\n                y = c.y;\r\n\r\n                ctx.bezierCurveTo(vx, vy, ux, uy, x, y);\r\n\r\n              }\r\n\r\n              break;\r\n\r\n            case Two.Commands.line:\r\n              ctx.lineTo(x, y);\r\n              break;\r\n\r\n            case Two.Commands.move:\r\n              d = b;\r\n              ctx.moveTo(x, y);\r\n              break;\r\n\r\n          }\r\n        }\r\n\r\n        // Loose ends\r\n\r\n        if (closed) {\r\n          ctx.closePath();\r\n        }\r\n\r\n        if (!clip && !parentClipped) {\r\n          if (!canvas.isHidden.test(fill)) {\r\n            isOffset = fill._renderer && fill._renderer.offset;\r\n            if (isOffset) {\r\n              ctx.save();\r\n              ctx.translate(\r\n                - fill._renderer.offset.x, - fill._renderer.offset.y);\r\n              ctx.scale(fill._renderer.scale.x, fill._renderer.scale.y);\r\n            }\r\n            ctx.fill();\r\n            if (isOffset) {\r\n              ctx.restore();\r\n            }\r\n          }\r\n          if (!canvas.isHidden.test(stroke)) {\r\n            isOffset = stroke._renderer && stroke._renderer.offset;\r\n            if (isOffset) {\r\n              ctx.save();\r\n              ctx.translate(\r\n                - stroke._renderer.offset.x, - stroke._renderer.offset.y);\r\n              ctx.scale(stroke._renderer.scale.x, stroke._renderer.scale.y);\r\n              ctx.lineWidth = linewidth / stroke._renderer.scale.x;\r\n            }\r\n            ctx.stroke();\r\n            if (isOffset) {\r\n              ctx.restore();\r\n            }\r\n          }\r\n        }\r\n\r\n        if (!defaultMatrix) {\r\n          ctx.restore();\r\n        }\r\n\r\n        if (clip && !parentClipped) {\r\n          ctx.clip();\r\n        }\r\n\r\n        if (dashes && dashes.length > 0) {\r\n          ctx.setLineDash(emptyArray);\r\n        }\r\n\r\n        return this.flagReset();\r\n\r\n      }\r\n\r\n    },\r\n\r\n    text: {\r\n\r\n      render: function(ctx, forced, parentClipped) {\r\n\r\n        // TODO: Add a check here to only invoke _update if need be.\r\n        this._update();\r\n\r\n        var matrix = this._matrix.elements;\r\n        var stroke = this._stroke;\r\n        var linewidth = this._linewidth;\r\n        var fill = this._fill;\r\n        var opacity = this._opacity * this.parent._renderer.opacity;\r\n        var visible = this._visible;\r\n        var defaultMatrix = isDefaultMatrix(matrix);\r\n        var isOffset = fill._renderer && fill._renderer.offset\r\n          && stroke._renderer && stroke._renderer.offset;\r\n        var dashes = this.dashes;\r\n\r\n        var a, b, c, d, e, sx, sy;\r\n\r\n        // mask = this._mask;\r\n        var clip = this._clip;\r\n\r\n        if (!forced && (!visible || clip)) {\r\n          return this;\r\n        }\r\n\r\n        // Transform\r\n        if (!defaultMatrix) {\r\n          ctx.save();\r\n          ctx.transform(matrix[0], matrix[3], matrix[1], matrix[4], matrix[2], matrix[5]);\r\n        }\r\n\r\n       /**\r\n         * Commented two-way functionality of clips / masks with groups and\r\n         * polygons. Uncomment when this bug is fixed:\r\n         * https://code.google.com/p/chromium/issues/detail?id=370951\r\n         */\r\n\r\n        // if (mask) {\r\n        //   canvas[mask._renderer.type].render.call(mask, ctx, true);\r\n        // }\r\n\r\n        if (!isOffset) {\r\n          ctx.font = [this._style, this._weight, this._size + 'px/' +\r\n            this._leading + 'px', this._family].join(' ');\r\n        }\r\n\r\n        ctx.textAlign = canvas.alignments[this._alignment] || this._alignment;\r\n        ctx.textBaseline = this._baseline;\r\n\r\n        // Styles\r\n        if (fill) {\r\n          if (_.isString(fill)) {\r\n            ctx.fillStyle = fill;\r\n          } else {\r\n            canvas[fill._renderer.type].render.call(fill, ctx);\r\n            ctx.fillStyle = fill._renderer.effect;\r\n          }\r\n        }\r\n        if (stroke) {\r\n          if (_.isString(stroke)) {\r\n            ctx.strokeStyle = stroke;\r\n          } else {\r\n            canvas[stroke._renderer.type].render.call(stroke, ctx);\r\n            ctx.strokeStyle = stroke._renderer.effect;\r\n          }\r\n          if (linewidth) {\r\n            ctx.lineWidth = linewidth;\r\n          }\r\n        }\r\n        if (_.isNumber(opacity)) {\r\n          ctx.globalAlpha = opacity;\r\n        }\r\n        if (dashes && dashes.length > 0) {\r\n          ctx.lineDashOffset = dashes.offset || 0;\r\n          ctx.setLineDash(dashes);\r\n        }\r\n\r\n        if (!clip && !parentClipped) {\r\n\r\n          if (!canvas.isHidden.test(fill)) {\r\n\r\n            if (fill._renderer && fill._renderer.offset) {\r\n\r\n              sx = fill._renderer.scale.x;\r\n              sy = fill._renderer.scale.y;\r\n\r\n              ctx.save();\r\n              ctx.translate( - fill._renderer.offset.x,\r\n                - fill._renderer.offset.y);\r\n              ctx.scale(sx, sy);\r\n\r\n              a = this._size / fill._renderer.scale.y;\r\n              b = this._leading / fill._renderer.scale.y;\r\n              ctx.font = [this._style, this._weight, a + 'px/',\r\n                b + 'px', this._family].join(' ');\r\n\r\n              c = fill._renderer.offset.x / fill._renderer.scale.x;\r\n              d = fill._renderer.offset.y / fill._renderer.scale.y;\r\n\r\n              ctx.fillText(this.value, c, d);\r\n              ctx.restore();\r\n\r\n            } else {\r\n              ctx.fillText(this.value, 0, 0);\r\n            }\r\n\r\n          }\r\n\r\n          if (!canvas.isHidden.test(stroke)) {\r\n\r\n            if (stroke._renderer && stroke._renderer.offset) {\r\n\r\n              sx = stroke._renderer.scale.x;\r\n              sy = stroke._renderer.scale.y;\r\n\r\n              ctx.save();\r\n              ctx.translate(- stroke._renderer.offset.x,\r\n                - stroke._renderer.offset.y);\r\n              ctx.scale(sx, sy);\r\n\r\n              a = this._size / stroke._renderer.scale.y;\r\n              b = this._leading / stroke._renderer.scale.y;\r\n              ctx.font = [this._style, this._weight, a + 'px/',\r\n                b + 'px', this._family].join(' ');\r\n\r\n              c = stroke._renderer.offset.x / stroke._renderer.scale.x;\r\n              d = stroke._renderer.offset.y / stroke._renderer.scale.y;\r\n              e = linewidth / stroke._renderer.scale.x;\r\n\r\n              ctx.lineWidth = e;\r\n              ctx.strokeText(this.value, c, d);\r\n              ctx.restore();\r\n\r\n            } else {\r\n              ctx.strokeText(this.value, 0, 0);\r\n            }\r\n          }\r\n        }\r\n\r\n        if (!defaultMatrix) {\r\n          ctx.restore();\r\n        }\r\n\r\n        // TODO: Test for text\r\n        if (clip && !parentClipped) {\r\n          ctx.clip();\r\n        }\r\n\r\n        if (dashes && dashes.length > 0) {\r\n          ctx.setLineDash(emptyArray);\r\n        }\r\n\r\n        return this.flagReset();\r\n\r\n      }\r\n\r\n    },\r\n\r\n    'linear-gradient': {\r\n\r\n      render: function(ctx) {\r\n\r\n        this._update();\r\n\r\n        if (!this._renderer.effect || this._flagEndPoints || this._flagStops) {\r\n\r\n          this._renderer.effect = ctx.createLinearGradient(\r\n            this.left._x, this.left._y,\r\n            this.right._x, this.right._y\r\n          );\r\n\r\n          for (var i = 0; i < this.stops.length; i++) {\r\n            var stop = this.stops[i];\r\n            this._renderer.effect.addColorStop(stop._offset, stop._color);\r\n          }\r\n\r\n        }\r\n\r\n        return this.flagReset();\r\n\r\n      }\r\n\r\n    },\r\n\r\n    'radial-gradient': {\r\n\r\n      render: function(ctx) {\r\n\r\n        this._update();\r\n\r\n        if (!this._renderer.effect || this._flagCenter || this._flagFocal\r\n            || this._flagRadius || this._flagStops) {\r\n\r\n          this._renderer.effect = ctx.createRadialGradient(\r\n            this.center._x, this.center._y, 0,\r\n            this.focal._x, this.focal._y, this._radius\r\n          );\r\n\r\n          for (var i = 0; i < this.stops.length; i++) {\r\n            var stop = this.stops[i];\r\n            this._renderer.effect.addColorStop(stop._offset, stop._color);\r\n          }\r\n\r\n        }\r\n\r\n        return this.flagReset();\r\n\r\n      }\r\n\r\n    },\r\n\r\n    texture: {\r\n\r\n      render: function(ctx) {\r\n\r\n        this._update();\r\n\r\n        var image = this.image;\r\n        var repeat;\r\n\r\n        if (!this._renderer.effect || ((this._flagLoaded || this._flagImage || this._flagVideo || this._flagRepeat) && this.loaded)) {\r\n          this._renderer.effect = ctx.createPattern(this.image, this._repeat);\r\n        }\r\n\r\n        if (this._flagOffset || this._flagLoaded || this._flagScale) {\r\n\r\n          if (!(this._renderer.offset instanceof Two.Vector)) {\r\n            this._renderer.offset = new Two.Vector();\r\n          }\r\n\r\n          this._renderer.offset.x = - this._offset.x;\r\n          this._renderer.offset.y = - this._offset.y;\r\n\r\n          if (image) {\r\n\r\n            this._renderer.offset.x += image.width / 2;\r\n            this._renderer.offset.y += image.height / 2;\r\n\r\n            if (this._scale instanceof Two.Vector) {\r\n              this._renderer.offset.x *= this._scale.x;\r\n              this._renderer.offset.y *= this._scale.y;\r\n            } else {\r\n              this._renderer.offset.x *= this._scale;\r\n              this._renderer.offset.y *= this._scale;\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n        if (this._flagScale || this._flagLoaded) {\r\n\r\n          if (!(this._renderer.scale instanceof Two.Vector)) {\r\n            this._renderer.scale = new Two.Vector();\r\n          }\r\n\r\n          if (this._scale instanceof Two.Vector) {\r\n            this._renderer.scale.copy(this._scale);\r\n          } else {\r\n            this._renderer.scale.set(this._scale, this._scale);\r\n          }\r\n\r\n        }\r\n\r\n        return this.flagReset();\r\n\r\n      }\r\n\r\n    },\r\n\r\n    renderSvgArcCommand: function(ctx, ax, ay, rx, ry, largeArcFlag, sweepFlag, xAxisRotation, x, y) {\r\n\r\n      xAxisRotation = xAxisRotation * Math.PI / 180;\r\n\r\n      // Ensure radii are positive\r\n      rx = abs(rx);\r\n      ry = abs(ry);\r\n\r\n      // Compute (x1′, y1′)\r\n      var dx2 = (ax - x) / 2.0;\r\n      var dy2 = (ay - y) / 2.0;\r\n      var x1p = cos(xAxisRotation) * dx2 + sin(xAxisRotation) * dy2;\r\n      var y1p = - sin(xAxisRotation) * dx2 + cos(xAxisRotation) * dy2;\r\n\r\n      // Compute (cx′, cy′)\r\n      var rxs = rx * rx;\r\n      var rys = ry * ry;\r\n      var x1ps = x1p * x1p;\r\n      var y1ps = y1p * y1p;\r\n\r\n      // Ensure radii are large enough\r\n      var cr = x1ps / rxs + y1ps / rys;\r\n\r\n      if (cr > 1) {\r\n\r\n        // scale up rx,ry equally so cr == 1\r\n        var s = sqrt(cr);\r\n        rx = s * rx;\r\n        ry = s * ry;\r\n        rxs = rx * rx;\r\n        rys = ry * ry;\r\n\r\n      }\r\n\r\n      var dq = (rxs * y1ps + rys * x1ps);\r\n      var pq = (rxs * rys - dq) / dq;\r\n      var q = sqrt(max(0, pq));\r\n      if (largeArcFlag === sweepFlag) q = - q;\r\n      var cxp = q * rx * y1p / ry;\r\n      var cyp = - q * ry * x1p / rx;\r\n\r\n      // Step 3: Compute (cx, cy) from (cx′, cy′)\r\n      var cx = cos(xAxisRotation) * cxp\r\n        - sin(xAxisRotation) * cyp + (ax + x) / 2;\r\n      var cy = sin(xAxisRotation) * cxp\r\n        + cos(xAxisRotation) * cyp + (ay + y) / 2;\r\n\r\n      // Step 4: Compute θ1 and Δθ\r\n      var startAngle = svgAngle(1, 0, (x1p - cxp) / rx, (y1p - cyp) / ry);\r\n      var delta = svgAngle((x1p - cxp) / rx, (y1p - cyp) / ry,\r\n        (- x1p - cxp) / rx, (- y1p - cyp) / ry) % TWO_PI;\r\n\r\n      var endAngle = startAngle + delta;\r\n\r\n      var clockwise = sweepFlag === 0;\r\n\r\n      renderArcEstimate(ctx, cx, cy, rx, ry, startAngle, endAngle,\r\n        clockwise, xAxisRotation);\r\n\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * @name Two.CanvasRenderer\r\n   * @class\r\n   * @extends Two.Utils.Events\r\n   * @param {Object} [parameters] - This object is inherited when constructing a new instance of {@link Two}.\r\n   * @param {Element} [parameters.domElement] - The `<canvas />` to draw to. If none given a new one will be constructed.\r\n   * @param {Boolean} [parameters.overdraw] - Determines whether the canvas should clear the background or not. Defaults to `true`.\r\n   * @param {Boolean} [parameters.smoothing=true] - Determines whether the canvas should antialias drawing. Set it to `false` when working with pixel art. `false` can lead to better performance, since it would use a cheaper interpolation algorithm.\r\n   * @description This class is used by {@link Two} when constructing with `type` of `Two.Types.canvas`. It takes Two.js' scenegraph and renders it to a `<canvas />`.\r\n   */\r\n  var Renderer = Two[Two.Types.canvas] = function(params) {\r\n\r\n    // It might not make a big difference on GPU backed canvases.\r\n    var smoothing = (params.smoothing !== false);\r\n\r\n    /**\r\n     * @name Two.CanvasRenderer#domElement\r\n     * @property {Element} - The `<canvas />` associated with the Two.js scene.\r\n     */\r\n    this.domElement = params.domElement || document.createElement('canvas');\r\n\r\n    /**\r\n     * @name Two.CanvasRenderer#ctx\r\n     * @property {Canvas2DContext} - Associated two dimensional context to render on the `<canvas />`.\r\n     */\r\n    this.ctx = this.domElement.getContext('2d');\r\n\r\n    /**\r\n     * @name Two.CanvasRenderer#overdraw\r\n     * @property {Boolean} - Determines whether the canvas clears the background each draw call.\r\n     * @default true\r\n     */\r\n    this.overdraw = params.overdraw || false;\r\n\r\n    if (!_.isUndefined(this.ctx.imageSmoothingEnabled)) {\r\n      this.ctx.imageSmoothingEnabled = smoothing;\r\n    }\r\n\r\n    /**\r\n     * @name Two.CanvasRenderer#scene\r\n     * @property {Two.Group} - The root group of the scenegraph.\r\n     */\r\n    this.scene = new Two.Group();\r\n    this.scene.parent = this;\r\n  };\r\n\r\n\r\n  _.extend(Renderer, {\r\n\r\n    /**\r\n     * @name Two.CanvasRenderer.Utils\r\n     * @property {Object} - A massive object filled with utility functions and properties to render Two.js objects to a `<canvas />`.\r\n     */\r\n    Utils: canvas\r\n\r\n  });\r\n\r\n  _.extend(Renderer.prototype, Two.Utils.Events, {\r\n\r\n    constructor: Renderer,\r\n\r\n    /**\r\n     * @name Two.CanvasRenderer#setSize\r\n     * @function\r\n     * @param {Number} width - The new width of the renderer.\r\n     * @param {Number} height - The new height of the renderer.\r\n     * @param {Number} [ratio] - The new pixel ratio (pixel density) of the renderer. Defaults to calculate the pixel density of the user's screen.\r\n     * @description Change the size of the renderer.\r\n     * @nota-bene Triggers a `Two.Events.resize`.\r\n     */\r\n    setSize: function(width, height, ratio) {\r\n\r\n      this.width = width;\r\n      this.height = height;\r\n\r\n      this.ratio = _.isUndefined(ratio) ? getRatio(this.ctx) : ratio;\r\n\r\n      this.domElement.width = width * this.ratio;\r\n      this.domElement.height = height * this.ratio;\r\n\r\n      if (this.domElement.style) {\r\n        _.extend(this.domElement.style, {\r\n          width: width + 'px',\r\n          height: height + 'px'\r\n        });\r\n      }\r\n\r\n      return this.trigger(Two.Events.resize, width, height, ratio);\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.CanvasRenderer#render\r\n     * @function\r\n     * @description Render the current scene to the `<canvas />`.\r\n     */\r\n    render: function() {\r\n\r\n      var isOne = this.ratio === 1;\r\n\r\n      if (!isOne) {\r\n        this.ctx.save();\r\n        this.ctx.scale(this.ratio, this.ratio);\r\n      }\r\n\r\n      if (!this.overdraw) {\r\n        this.ctx.clearRect(0, 0, this.width, this.height);\r\n      }\r\n\r\n      canvas.group.render.call(this.scene, this.ctx);\r\n\r\n      if (!isOne) {\r\n        this.ctx.restore();\r\n      }\r\n\r\n      return this;\r\n\r\n    }\r\n\r\n  });\r\n\r\n  function renderArcEstimate(ctx, ox, oy, rx, ry, startAngle, endAngle, clockwise, xAxisRotation) {\r\n\r\n    var epsilon = Two.Utils.Curve.Tolerance.epsilon;\r\n    var deltaAngle = endAngle - startAngle;\r\n    var samePoints = Math.abs(deltaAngle) < epsilon;\r\n\r\n    // ensures that deltaAngle is 0 .. 2 PI\r\n    deltaAngle = mod(deltaAngle, TWO_PI);\r\n\r\n    if (deltaAngle < epsilon) {\r\n\r\n      if (samePoints) {\r\n\r\n        deltaAngle = 0;\r\n\r\n      } else {\r\n\r\n        deltaAngle = TWO_PI;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    if (clockwise === true && ! samePoints) {\r\n\r\n      if (deltaAngle === TWO_PI) {\r\n\r\n        deltaAngle = - TWO_PI;\r\n\r\n      } else {\r\n\r\n        deltaAngle = deltaAngle - TWO_PI;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    for (var i = 0; i < Two.Resolution; i++) {\r\n\r\n      var t = i / (Two.Resolution - 1);\r\n\r\n      var angle = startAngle + t * deltaAngle;\r\n      var x = ox + rx * Math.cos(angle);\r\n      var y = oy + ry * Math.sin(angle);\r\n\r\n      if (xAxisRotation !== 0) {\r\n\r\n        var cos = Math.cos(xAxisRotation);\r\n        var sin = Math.sin(xAxisRotation);\r\n\r\n        var tx = x - ox;\r\n        var ty = y - oy;\r\n\r\n        // Rotate the point about the center of the ellipse.\r\n        x = tx * cos - ty * sin + ox;\r\n        y = tx * sin + ty * cos + oy;\r\n\r\n      }\r\n\r\n      ctx.lineTo(x, y);\r\n\r\n    }\r\n\r\n  }\r\n\r\n  function svgAngle(ux, uy, vx, vy) {\r\n\r\n    var dot = ux * vx + uy * vy;\r\n    var len = sqrt(ux * ux + uy * uy) *  sqrt(vx * vx + vy * vy);\r\n    // floating point precision, slightly over values appear\r\n    var ang = acos(max(-1, min(1, dot / len)));\r\n    if ((ux * vy - uy * vx) < 0) {\r\n      ang = - ang;\r\n    }\r\n\r\n    return ang;\r\n\r\n  }\r\n\r\n  function resetTransform(ctx) {\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n  }\r\n\r\n})((typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : (undefined || self || window)).Two);\r\n\n(function(Two) {\r\n\r\n  /**\r\n   * Constants\r\n   */\r\n\r\n  var root = Two.root,\r\n    multiplyMatrix = Two.Matrix.Multiply,\r\n    mod = Two.Utils.mod,\r\n    identity = [1, 0, 0, 0, 1, 0, 0, 0, 1],\r\n    transformation = new Two.Array(9),\r\n    getRatio = Two.Utils.getRatio,\r\n    getComputedMatrix = Two.Utils.getComputedMatrix,\r\n    CanvasUtils = Two[Two.Types.canvas].Utils,\r\n    _ = Two.Utils;\r\n\r\n  var webgl = {\r\n\r\n    isHidden: /(undefined|none|transparent)/i,\r\n\r\n    canvas: (root.document ? root.document.createElement('canvas') : { getContext: _.identity }),\r\n\r\n    alignments: {\r\n      left: 'start',\r\n      middle: 'center',\r\n      right: 'end'\r\n    },\r\n\r\n    matrix: new Two.Matrix(),\r\n\r\n    group: {\r\n\r\n      removeChild: function(child, gl) {\r\n        if (child.children) {\r\n          for (var i = 0; i < child.children.length; i++) {\r\n            webgl.group.removeChild(child.children[i], gl);\r\n          }\r\n          return;\r\n        }\r\n        // Deallocate texture to free up gl memory.\r\n        gl.deleteTexture(child._renderer.texture);\r\n        delete child._renderer.texture;\r\n      },\r\n\r\n      render: function(gl, program) {\r\n\r\n        this._update();\r\n\r\n        var parent = this.parent;\r\n        var flagParentMatrix = (parent._matrix && parent._matrix.manual) || parent._flagMatrix;\r\n        var flagMatrix = this._matrix.manual || this._flagMatrix;\r\n\r\n        if (flagParentMatrix || flagMatrix) {\r\n\r\n          if (!this._renderer.matrix) {\r\n            this._renderer.matrix = new Two.Array(9);\r\n          }\r\n\r\n          // Reduce amount of object / array creation / deletion\r\n          this._matrix.toTransformArray(true, transformation);\r\n\r\n          multiplyMatrix(transformation, parent._renderer.matrix, this._renderer.matrix);\r\n\r\n          if (!(this._renderer.scale instanceof Two.Vector)) {\r\n            this._renderer.scale = new Two.Vector();\r\n          }\r\n\r\n          if (this._scale instanceof Two.Vector) {\r\n            this._renderer.scale.x = this._scale.x;\r\n            this._renderer.scale.y = this._scale.y;\r\n          } else {\r\n            this._renderer.scale.x = this._scale;\r\n            this._renderer.scale.y = this._scale;\r\n          }\r\n\r\n          if (!(/renderer/i.test(parent._renderer.type))) {\r\n            this._renderer.scale.x *= parent._renderer.scale.x;\r\n            this._renderer.scale.y *= parent._renderer.scale.y;\r\n          }\r\n\r\n          if (flagParentMatrix) {\r\n            this._flagMatrix = true;\r\n          }\r\n\r\n        }\r\n\r\n        if (this._mask) {\r\n\r\n          // Stencil away everything that isn't rendered by the mask\r\n\r\n          gl.clear(gl.STENCIL_BUFFER_BIT);\r\n          gl.enable(gl.STENCIL_TEST);\r\n\r\n          gl.stencilFunc(gl.ALWAYS, 1, 0);\r\n          gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);\r\n\r\n          webgl[this._mask._renderer.type].render.call(this._mask, gl, program, this);\r\n\r\n          gl.stencilFunc(gl.EQUAL, 1, 0xff);\r\n          gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\r\n\r\n        }\r\n\r\n        this._flagOpacity = parent._flagOpacity || this._flagOpacity;\r\n\r\n        this._renderer.opacity = this._opacity\r\n          * (parent && parent._renderer ? parent._renderer.opacity : 1);\r\n\r\n        var i;\r\n        if (this._flagSubtractions) {\r\n          for (i = 0; i < this.subtractions.length; i++) {\r\n            webgl.group.removeChild(this.subtractions[i], gl);\r\n          }\r\n        }\r\n\r\n        for (i = 0; i < this.children.length; i++) {\r\n          var child = this.children[i];\r\n          webgl[child._renderer.type].render.call(child, gl, program);\r\n        }\r\n\r\n        if (this._mask) {\r\n          gl.disable(gl.STENCIL_TEST);\r\n        }\r\n\r\n        return this.flagReset();\r\n\r\n      }\r\n\r\n    },\r\n\r\n    path: {\r\n\r\n      updateCanvas: function(elem) {\r\n\r\n        var next, prev, a, c, ux, uy, vx, vy, ar, bl, br, cl, x, y;\r\n        var isOffset;\r\n\r\n        var commands = elem._renderer.vertices;\r\n        var canvas = this.canvas;\r\n        var ctx = this.ctx;\r\n\r\n        // Styles\r\n        var scale = elem._renderer.scale;\r\n        var stroke = elem._stroke;\r\n        var linewidth = elem._linewidth;\r\n        var fill = elem._fill;\r\n        var opacity = elem._renderer.opacity || elem._opacity;\r\n        var cap = elem._cap;\r\n        var join = elem._join;\r\n        var miter = elem._miter;\r\n        var closed = elem._closed;\r\n        var dashes = elem.dashes;\r\n        var length = commands.length;\r\n        var last = length - 1;\r\n\r\n        canvas.width = Math.max(Math.ceil(elem._renderer.rect.width * scale.x), 1);\r\n        canvas.height = Math.max(Math.ceil(elem._renderer.rect.height * scale.y), 1);\r\n\r\n        var centroid = elem._renderer.rect.centroid;\r\n        var cx = centroid.x;\r\n        var cy = centroid.y;\r\n\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        if (fill) {\r\n          if (_.isString(fill)) {\r\n            ctx.fillStyle = fill;\r\n          } else {\r\n            webgl[fill._renderer.type].render.call(fill, ctx, elem);\r\n            ctx.fillStyle = fill._renderer.effect;\r\n          }\r\n        }\r\n        if (stroke) {\r\n          if (_.isString(stroke)) {\r\n            ctx.strokeStyle = stroke;\r\n          } else {\r\n            webgl[stroke._renderer.type].render.call(stroke, ctx, elem);\r\n            ctx.strokeStyle = stroke._renderer.effect;\r\n          }\r\n          if (linewidth) {\r\n            ctx.lineWidth = linewidth;\r\n          }\r\n          if (miter) {\r\n            ctx.miterLimit = miter;\r\n          }\r\n          if (join) {\r\n            ctx.lineJoin = join;\r\n          }\r\n          if (!closed && cap) {\r\n            ctx.lineCap = cap;\r\n          }\r\n        }\r\n        if (_.isNumber(opacity)) {\r\n          ctx.globalAlpha = opacity;\r\n        }\r\n\r\n        if (dashes && dashes.length > 0) {\r\n          ctx.lineDashOffset = dashes.offset || 0;\r\n          ctx.setLineDash(dashes);\r\n        }\r\n\r\n        var d;\r\n        ctx.save();\r\n        ctx.scale(scale.x, scale.y);\r\n\r\n        ctx.translate(cx, cy);\r\n\r\n        ctx.beginPath();\r\n        for (var i = 0; i < commands.length; i++) {\r\n\r\n          var b = commands[i];\r\n\r\n          x = b.x;\r\n          y = b.y;\r\n\r\n          switch (b.command) {\r\n\r\n            case Two.Commands.close:\r\n              ctx.closePath();\r\n              break;\r\n\r\n            case Two.Commands.arc:\r\n\r\n              var rx = b.rx;\r\n              var ry = b.ry;\r\n              var xAxisRotation = b.xAxisRotation;\r\n              var largeArcFlag = b.largeArcFlag;\r\n              var sweepFlag = b.sweepFlag;\r\n\r\n              prev = closed ? mod(i - 1, length) : Math.max(i - 1, 0);\r\n              a = commands[prev];\r\n\r\n              var ax = a.x;\r\n              var ay = a.y;\r\n\r\n              CanvasUtils.renderSvgArcCommand(ctx, ax, ay, rx, ry, largeArcFlag, sweepFlag, xAxisRotation, x, y);\r\n              break;\r\n\r\n            case Two.Commands.curve:\r\n\r\n              prev = closed ? mod(i - 1, length) : Math.max(i - 1, 0);\r\n              next = closed ? mod(i + 1, length) : Math.min(i + 1, last);\r\n\r\n              a = commands[prev];\r\n              c = commands[next];\r\n              ar = (a.controls && a.controls.right) || Two.Vector.zero;\r\n              bl = (b.controls && b.controls.left) || Two.Vector.zero;\r\n\r\n              if (a._relative) {\r\n                vx = ar.x + a.x;\r\n                vy = ar.y + a.y;\r\n              } else {\r\n                vx = ar.x;\r\n                vy = ar.y;\r\n              }\r\n\r\n              if (b._relative) {\r\n                ux = bl.x + b.x;\r\n                uy = bl.y + b.y;\r\n              } else {\r\n                ux = bl.x;\r\n                uy = bl.y;\r\n              }\r\n\r\n              ctx.bezierCurveTo(vx, vy, ux, uy, x, y);\r\n\r\n              if (i >= last && closed) {\r\n\r\n                c = d;\r\n\r\n                br = (b.controls && b.controls.right) || Two.Vector.zero;\r\n                cl = (c.controls && c.controls.left) || Two.Vector.zero;\r\n\r\n                if (b._relative) {\r\n                  vx = br.x + b.x;\r\n                  vy = br.y + b.y;\r\n                } else {\r\n                  vx = br.x;\r\n                  vy = br.y;\r\n                }\r\n\r\n                if (c._relative) {\r\n                  ux = cl.x + c.x;\r\n                  uy = cl.y + c.y;\r\n                } else {\r\n                  ux = cl.x;\r\n                  uy = cl.y;\r\n                }\r\n\r\n                x = c.x;\r\n                y = c.y;\r\n\r\n                ctx.bezierCurveTo(vx, vy, ux, uy, x, y);\r\n\r\n              }\r\n\r\n              break;\r\n\r\n            case Two.Commands.line:\r\n              ctx.lineTo(x, y);\r\n              break;\r\n\r\n            case Two.Commands.move:\r\n              d = b;\r\n              ctx.moveTo(x, y);\r\n              break;\r\n\r\n          }\r\n\r\n        }\r\n\r\n        // Loose ends\r\n\r\n        if (closed) {\r\n          ctx.closePath();\r\n        }\r\n\r\n        if (!webgl.isHidden.test(fill)) {\r\n          isOffset = fill._renderer && fill._renderer.offset;\r\n          if (isOffset) {\r\n            ctx.save();\r\n            ctx.translate(\r\n              - fill._renderer.offset.x, - fill._renderer.offset.y);\r\n            ctx.scale(fill._renderer.scale.x, fill._renderer.scale.y);\r\n          }\r\n          ctx.fill();\r\n          if (isOffset) {\r\n            ctx.restore();\r\n          }\r\n        }\r\n\r\n        if (!webgl.isHidden.test(stroke)) {\r\n          isOffset = stroke._renderer && stroke._renderer.offset;\r\n          if (isOffset) {\r\n            ctx.save();\r\n            ctx.translate(\r\n              - stroke._renderer.offset.x, - stroke._renderer.offset.y);\r\n            ctx.scale(stroke._renderer.scale.x, stroke._renderer.scale.y);\r\n            ctx.lineWidth = linewidth / stroke._renderer.scale.x;\r\n          }\r\n          ctx.stroke();\r\n          if (isOffset) {\r\n            ctx.restore();\r\n          }\r\n        }\r\n\r\n        ctx.restore();\r\n\r\n      },\r\n\r\n      /**\r\n       * Returns the rect of a set of verts. Typically takes vertices that are\r\n       * \"centered\" around 0 and returns them to be anchored upper-left.\r\n       */\r\n      getBoundingClientRect: function(vertices, border, rect) {\r\n\r\n        var left = Infinity, right = -Infinity,\r\n            top = Infinity, bottom = -Infinity,\r\n            width, height;\r\n\r\n        vertices.forEach(function(v) {\r\n\r\n          var x = v.x, y = v.y, controls = v.controls;\r\n          var a, b, c, d, cl, cr;\r\n\r\n          top = Math.min(y, top);\r\n          left = Math.min(x, left);\r\n          right = Math.max(x, right);\r\n          bottom = Math.max(y, bottom);\r\n\r\n          if (!v.controls) {\r\n            return;\r\n          }\r\n\r\n          cl = controls.left;\r\n          cr = controls.right;\r\n\r\n          if (!cl || !cr) {\r\n            return;\r\n          }\r\n\r\n          a = v._relative ? cl.x + x : cl.x;\r\n          b = v._relative ? cl.y + y : cl.y;\r\n          c = v._relative ? cr.x + x : cr.x;\r\n          d = v._relative ? cr.y + y : cr.y;\r\n\r\n          if (!a || !b || !c || !d) {\r\n            return;\r\n          }\r\n\r\n          top = Math.min(b, d, top);\r\n          left = Math.min(a, c, left);\r\n          right = Math.max(a, c, right);\r\n          bottom = Math.max(b, d, bottom);\r\n\r\n        });\r\n\r\n        // Expand borders\r\n\r\n        if (_.isNumber(border)) {\r\n          top -= border;\r\n          left -= border;\r\n          right += border;\r\n          bottom += border;\r\n        }\r\n\r\n        width = right - left;\r\n        height = bottom - top;\r\n\r\n        rect.top = top;\r\n        rect.left = left;\r\n        rect.right = right;\r\n        rect.bottom = bottom;\r\n        rect.width = width;\r\n        rect.height = height;\r\n\r\n        if (!rect.centroid) {\r\n          rect.centroid = {};\r\n        }\r\n\r\n        rect.centroid.x = - left;\r\n        rect.centroid.y = - top;\r\n\r\n      },\r\n\r\n      render: function(gl, program, forcedParent) {\r\n\r\n        if (!this._visible || !this._opacity) {\r\n          return this;\r\n        }\r\n\r\n        this._update();\r\n\r\n        // Calculate what changed\r\n\r\n        var parent = this.parent;\r\n        var flagParentMatrix = parent._matrix.manual || parent._flagMatrix;\r\n        var flagMatrix = this._matrix.manual || this._flagMatrix;\r\n        var flagTexture = this._flagVertices || this._flagFill\r\n          || (this._fill instanceof Two.LinearGradient && (this._fill._flagSpread || this._fill._flagStops || this._fill._flagEndPoints))\r\n          || (this._fill instanceof Two.RadialGradient && (this._fill._flagSpread || this._fill._flagStops || this._fill._flagRadius || this._fill._flagCenter || this._fill._flagFocal))\r\n          || (this._fill instanceof Two.Texture && (this._fill._flagLoaded && this._fill.loaded || this._fill._flagImage || this._fill._flagVideo || this._fill._flagRepeat || this._fill._flagOffset || this._fill._flagScale))\r\n          || (this._stroke instanceof Two.LinearGradient && (this._stroke._flagSpread || this._stroke._flagStops || this._stroke._flagEndPoints))\r\n          || (this._stroke instanceof Two.RadialGradient && (this._stroke._flagSpread || this._stroke._flagStops || this._stroke._flagRadius || this._stroke._flagCenter || this._stroke._flagFocal))\r\n          || (this._stroke instanceof Two.Texture && (this._stroke._flagLoaded && this._stroke.loaded || this._stroke._flagImage || this._stroke._flagVideo || this._stroke._flagRepeat || this._stroke._flagOffset || this._fill._flagScale))\r\n          || this._flagStroke || this._flagLinewidth || this._flagOpacity\r\n          || parent._flagOpacity || this._flagVisible || this._flagCap\r\n          || this._flagJoin || this._flagMiter || this._flagScale\r\n          || (this.dashes && this.dashes.length > 0)\r\n          || !this._renderer.texture;\r\n\r\n        if (flagParentMatrix || flagMatrix) {\r\n\r\n          if (!this._renderer.matrix) {\r\n            this._renderer.matrix = new Two.Array(9);\r\n          }\r\n\r\n          // Reduce amount of object / array creation / deletion\r\n\r\n          this._matrix.toTransformArray(true, transformation);\r\n\r\n          multiplyMatrix(transformation, parent._renderer.matrix, this._renderer.matrix);\r\n\r\n          if (!(this._renderer.scale instanceof Two.Vector)) {\r\n            this._renderer.scale = new Two.Vector();\r\n          }\r\n          if (this._scale instanceof Two.Vector) {\r\n            this._renderer.scale.x = this._scale.x * parent._renderer.scale.x;\r\n            this._renderer.scale.y = this._scale.y * parent._renderer.scale.y;\r\n          } else {\r\n            this._renderer.scale.x = this._scale * parent._renderer.scale.x;\r\n            this._renderer.scale.y = this._scale * parent._renderer.scale.y;\r\n          }\r\n\r\n        }\r\n\r\n        if (flagTexture) {\r\n\r\n          if (!this._renderer.rect) {\r\n            this._renderer.rect = {};\r\n          }\r\n\r\n          this._renderer.opacity = this._opacity * parent._renderer.opacity;\r\n\r\n          webgl.path.getBoundingClientRect(this._renderer.vertices, this._linewidth, this._renderer.rect);\r\n\r\n          webgl.updateTexture.call(webgl, gl, this);\r\n\r\n        } else {\r\n\r\n          // We still need to update child Two elements on the fill and\r\n          // stroke properties.\r\n          if (this._fill && this._fill._update) {\r\n            this._fill._update();\r\n          }\r\n          if (this._stroke && this._stroke._update) {\r\n            this._stroke._update();\r\n          }\r\n\r\n        }\r\n\r\n        // if (this._mask) {\r\n        //   webgl[this._mask._renderer.type].render.call(mask, gl, program, this);\r\n        // }\r\n\r\n        if (this._clip && !forcedParent) {\r\n          return;\r\n        }\r\n\r\n        // Draw Texture\r\n        gl.bindTexture(gl.TEXTURE_2D, this._renderer.texture);\r\n\r\n        // Draw Rect\r\n        var rect = this._renderer.rect;\r\n        gl.uniformMatrix3fv(program.matrix, false, this._renderer.matrix);\r\n        gl.uniform4f(program.rect, rect.left, rect.top, rect.right, rect.bottom);\r\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n\r\n        return this.flagReset();\r\n\r\n      }\r\n\r\n    },\r\n\r\n    text: {\r\n\r\n      updateCanvas: function(elem) {\r\n\r\n        var canvas = this.canvas;\r\n        var ctx = this.ctx;\r\n\r\n        // Styles\r\n        var scale = elem._renderer.scale;\r\n        var stroke = elem._stroke;\r\n        var linewidth = elem._linewidth * scale;\r\n        var fill = elem._fill;\r\n        var opacity = elem._renderer.opacity || elem._opacity;\r\n        var dashes = elem.dashes;\r\n\r\n        canvas.width = Math.max(Math.ceil(elem._renderer.rect.width * scale.x), 1);\r\n        canvas.height = Math.max(Math.ceil(elem._renderer.rect.height * scale.y), 1);\r\n\r\n        var centroid = elem._renderer.rect.centroid;\r\n        var cx = centroid.x;\r\n        var cy = centroid.y;\r\n\r\n        var a, b, c, d, e, sx, sy;\r\n        var isOffset = fill._renderer && fill._renderer.offset\r\n          && stroke._renderer && stroke._renderer.offset;\r\n\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        if (!isOffset) {\r\n          ctx.font = [elem._style, elem._weight, elem._size + 'px/' +\r\n            elem._leading + 'px', elem._family].join(' ');\r\n        }\r\n\r\n        ctx.textAlign = 'center';\r\n        ctx.textBaseline = 'middle';\r\n\r\n        // Styles\r\n        if (fill) {\r\n          if (_.isString(fill)) {\r\n            ctx.fillStyle = fill;\r\n          } else {\r\n            webgl[fill._renderer.type].render.call(fill, ctx, elem);\r\n            ctx.fillStyle = fill._renderer.effect;\r\n          }\r\n        }\r\n        if (stroke) {\r\n          if (_.isString(stroke)) {\r\n            ctx.strokeStyle = stroke;\r\n          } else {\r\n            webgl[stroke._renderer.type].render.call(stroke, ctx, elem);\r\n            ctx.strokeStyle = stroke._renderer.effect;\r\n          }\r\n          if (linewidth) {\r\n            ctx.lineWidth = linewidth;\r\n          }\r\n        }\r\n        if (_.isNumber(opacity)) {\r\n          ctx.globalAlpha = opacity;\r\n        }\r\n        if (dashes && dashes.length > 0) {\r\n          ctx.lineDashOffset = dashes.offset || 0;\r\n          ctx.setLineDash(dashes);\r\n        }\r\n\r\n        ctx.save();\r\n        ctx.scale(scale.x, scale.y);\r\n        ctx.translate(cx, cy);\r\n\r\n        if (!webgl.isHidden.test(fill)) {\r\n\r\n          if (fill._renderer && fill._renderer.offset) {\r\n\r\n            sx = fill._renderer.scale.x;\r\n            sy = fill._renderer.scale.y;\r\n\r\n            ctx.save();\r\n            ctx.translate( - fill._renderer.offset.x,\r\n              - fill._renderer.offset.y);\r\n            ctx.scale(sx, sy);\r\n\r\n            a = elem._size / fill._renderer.scale.y;\r\n            b = elem._leading / fill._renderer.scale.y;\r\n            ctx.font = [elem._style, elem._weight, a + 'px/',\r\n              b + 'px', elem._family].join(' ');\r\n\r\n            c = fill._renderer.offset.x / fill._renderer.scale.x;\r\n            d = fill._renderer.offset.y / fill._renderer.scale.y;\r\n\r\n            ctx.fillText(elem.value, c, d);\r\n            ctx.restore();\r\n\r\n          } else {\r\n            ctx.fillText(elem.value, 0, 0);\r\n          }\r\n\r\n        }\r\n\r\n        if (!webgl.isHidden.test(stroke)) {\r\n\r\n          if (stroke._renderer && stroke._renderer.offset) {\r\n\r\n            sx = stroke._renderer.scale.x;\r\n            sy = stroke._renderer.scale.y;\r\n\r\n            ctx.save();\r\n            ctx.translate(- stroke._renderer.offset.x,\r\n              - stroke._renderer.offset.y);\r\n            ctx.scale(sx, sy);\r\n\r\n            a = elem._size / stroke._renderer.scale.y;\r\n            b = elem._leading / stroke._renderer.scale.y;\r\n            ctx.font = [elem._style, elem._weight, a + 'px/',\r\n              b + 'px', elem._family].join(' ');\r\n\r\n            c = stroke._renderer.offset.x / stroke._renderer.scale.x;\r\n            d = stroke._renderer.offset.y / stroke._renderer.scale.y;\r\n            e = linewidth / stroke._renderer.scale.x;\r\n\r\n            ctx.lineWidth = e;\r\n            ctx.strokeText(elem.value, c, d);\r\n            ctx.restore();\r\n\r\n          } else {\r\n            ctx.strokeText(elem.value, 0, 0);\r\n          }\r\n\r\n        }\r\n\r\n        ctx.restore();\r\n\r\n      },\r\n\r\n      getBoundingClientRect: function(elem, rect) {\r\n\r\n        var ctx = webgl.ctx;\r\n\r\n        ctx.font = [elem._style, elem._weight, elem._size + 'px/' +\r\n          elem._leading + 'px', elem._family].join(' ');\r\n\r\n        ctx.textAlign = 'center';\r\n        ctx.textBaseline = elem._baseline;\r\n\r\n        // TODO: Estimate this better\r\n        var width = ctx.measureText(elem._value).width * 1.25;\r\n        var height = Math.max(elem._size, elem._leading) * 1.25;\r\n\r\n        if (this._linewidth && !webgl.isHidden.test(this._stroke)) {\r\n          width += this._linewidth * 2;\r\n          height += this._linewidth * 2;\r\n        }\r\n\r\n        var w = width / 2;\r\n        var h = height / 2;\r\n\r\n        switch (webgl.alignments[elem._alignment] || elem._alignment) {\r\n\r\n          case webgl.alignments.left:\r\n            rect.left = 0;\r\n            rect.right = width;\r\n            break;\r\n          case webgl.alignments.right:\r\n            rect.left = - width;\r\n            rect.right = 0;\r\n            break;\r\n          default:\r\n            rect.left = - w;\r\n            rect.right = w;\r\n        }\r\n\r\n        // TODO: Gradients aren't inherited...\r\n        switch (elem._baseline) {\r\n          case 'bottom':\r\n            rect.top = - height;\r\n            rect.bottom = 0;\r\n            break;\r\n          case 'top':\r\n            rect.top = 0;\r\n            rect.bottom = height;\r\n            break;\r\n          default:\r\n            rect.top = - h;\r\n            rect.bottom = h;\r\n        }\r\n\r\n        rect.width = width;\r\n        rect.height = height;\r\n\r\n        if (!rect.centroid) {\r\n          rect.centroid = {};\r\n        }\r\n\r\n        // TODO:\r\n        rect.centroid.x = w;\r\n        rect.centroid.y = h;\r\n\r\n      },\r\n\r\n      render: function(gl, program, forcedParent) {\r\n\r\n        if (!this._visible || !this._opacity) {\r\n          return this;\r\n        }\r\n\r\n        this._update();\r\n\r\n        // Calculate what changed\r\n\r\n        var parent = this.parent;\r\n        var flagParentMatrix = parent._matrix.manual || parent._flagMatrix;\r\n        var flagMatrix = this._matrix.manual || this._flagMatrix;\r\n        var flagTexture = this._flagVertices || this._flagFill\r\n          || (this._fill instanceof Two.LinearGradient && (this._fill._flagSpread || this._fill._flagStops || this._fill._flagEndPoints))\r\n          || (this._fill instanceof Two.RadialGradient && (this._fill._flagSpread || this._fill._flagStops || this._fill._flagRadius || this._fill._flagCenter || this._fill._flagFocal))\r\n          || (this._fill instanceof Two.Texture && (this._fill._flagLoaded && this._fill.loaded || this._fill._flagImage || this._fill._flagVideo || this._fill._flagRepeat || this._fill._flagOffset || this._fill._flagScale))\r\n          || (this._stroke instanceof Two.LinearGradient && (this._stroke._flagSpread || this._stroke._flagStops || this._stroke._flagEndPoints))\r\n          || (this._stroke instanceof Two.RadialGradient && (this._stroke._flagSpread || this._stroke._flagStops || this._stroke._flagRadius || this._stroke._flagCenter || this._stroke._flagFocal))\r\n          || (this._stroke instanceof Two.Texture && (this._stroke._flagLoaded && this._stroke.loaded || this._stroke._flagImage || this._stroke._flagVideo || this._stroke._flagRepeat || this._stroke._flagOffset || this._fill._flagScale))\r\n          || this._flagStroke || this._flagLinewidth || this._flagOpacity\r\n          || parent._flagOpacity || this._flagVisible || this._flagScale\r\n          || this._flagValue || this._flagFamily || this._flagSize\r\n          || this._flagLeading || this._flagAlignment || this._flagBaseline\r\n          || this._flagStyle || this._flagWeight || this._flagDecoration\r\n          || (this.dashes && this.dashes.length > 0)\r\n          || !this._renderer.texture;\r\n\r\n        if (flagParentMatrix || flagMatrix) {\r\n\r\n          if (!this._renderer.matrix) {\r\n            this._renderer.matrix = new Two.Array(9);\r\n          }\r\n\r\n          // Reduce amount of object / array creation / deletion\r\n\r\n          this._matrix.toTransformArray(true, transformation);\r\n\r\n          multiplyMatrix(transformation, parent._renderer.matrix, this._renderer.matrix);\r\n\r\n          if (!(this._renderer.scale instanceof Two.Vector)) {\r\n            this._renderer.scale = new Two.Vector();\r\n          }\r\n          if (this._scale instanceof Two.Vector) {\r\n            this._renderer.scale.x = this._scale.x * parent._renderer.scale.x;\r\n            this._renderer.scale.y = this._scale.y * parent._renderer.scale.y;\r\n          } else {\r\n            this._renderer.scale.x = this._scale * parent._renderer.scale.x;\r\n            this._renderer.scale.y = this._scale * parent._renderer.scale.y;\r\n          }\r\n\r\n        }\r\n\r\n        if (flagTexture) {\r\n\r\n          if (!this._renderer.rect) {\r\n            this._renderer.rect = {};\r\n          }\r\n\r\n          this._renderer.opacity = this._opacity * parent._renderer.opacity;\r\n\r\n          webgl.text.getBoundingClientRect(this, this._renderer.rect);\r\n\r\n          webgl.updateTexture.call(webgl, gl, this);\r\n\r\n        } else {\r\n\r\n          // We still need to update child Two elements on the fill and\r\n          // stroke properties.\r\n          if (this._fill && this._fill._update) {\r\n            this._fill._update();\r\n          }\r\n          if (this._stroke && this._stroke._update) {\r\n            this._stroke._update();\r\n          }\r\n\r\n        }\r\n\r\n        // if (this._mask) {\r\n        //   webgl[this._mask._renderer.type].render.call(mask, gl, program, this);\r\n        // }\r\n\r\n        if (this._clip && !forcedParent) {\r\n          return;\r\n        }\r\n\r\n        // Draw Texture\r\n        gl.bindTexture(gl.TEXTURE_2D, this._renderer.texture);\r\n\r\n        // Draw Rect\r\n        var rect = this._renderer.rect;\r\n        gl.uniformMatrix3fv(program.matrix, false, this._renderer.matrix);\r\n        gl.uniform4f(program.rect, rect.left, rect.top, rect.right, rect.bottom);\r\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n\r\n        return this.flagReset();\r\n\r\n      }\r\n\r\n    },\r\n\r\n    'linear-gradient': {\r\n\r\n      render: function(ctx, elem) {\r\n\r\n        if (!ctx.canvas.getContext('2d')) {\r\n          return;\r\n        }\r\n\r\n        this._update();\r\n\r\n        if (!this._renderer.effect || this._flagEndPoints || this._flagStops) {\r\n\r\n          this._renderer.effect = ctx.createLinearGradient(\r\n            this.left._x, this.left._y,\r\n            this.right._x, this.right._y\r\n          );\r\n\r\n          for (var i = 0; i < this.stops.length; i++) {\r\n            var stop = this.stops[i];\r\n            this._renderer.effect.addColorStop(stop._offset, stop._color);\r\n          }\r\n\r\n        }\r\n\r\n        return this.flagReset();\r\n\r\n      }\r\n\r\n    },\r\n\r\n    'radial-gradient': {\r\n\r\n      render: function(ctx, elem) {\r\n\r\n        if (!ctx.canvas.getContext('2d')) {\r\n          return;\r\n        }\r\n\r\n        this._update();\r\n\r\n        if (!this._renderer.effect || this._flagCenter || this._flagFocal\r\n            || this._flagRadius || this._flagStops) {\r\n\r\n          this._renderer.effect = ctx.createRadialGradient(\r\n            this.center._x, this.center._y, 0,\r\n            this.focal._x, this.focal._y, this._radius\r\n          );\r\n\r\n          for (var i = 0; i < this.stops.length; i++) {\r\n            var stop = this.stops[i];\r\n            this._renderer.effect.addColorStop(stop._offset, stop._color);\r\n          }\r\n\r\n        }\r\n\r\n        return this.flagReset();\r\n\r\n      }\r\n\r\n    },\r\n\r\n    texture: {\r\n\r\n      render: function(ctx, elem) {\r\n\r\n        if (!ctx.canvas.getContext('2d')) {\r\n          return;\r\n        }\r\n\r\n        this._update();\r\n\r\n        var image = this.image;\r\n        var repeat;\r\n\r\n        if (((this._flagLoaded || this._flagImage || this._flagVideo || this._flagRepeat) && this.loaded)) {\r\n          this._renderer.effect = ctx.createPattern(image, this._repeat);\r\n        } else if (!this._renderer.effect) {\r\n          return this.flagReset();\r\n        }\r\n\r\n        if (this._flagOffset || this._flagLoaded || this._flagScale) {\r\n\r\n          if (!(this._renderer.offset instanceof Two.Vector)) {\r\n            this._renderer.offset = new Two.Vector();\r\n          }\r\n\r\n          this._renderer.offset.x = - this._offset.x;\r\n          this._renderer.offset.y = - this._offset.y;\r\n\r\n          if (image) {\r\n\r\n            this._renderer.offset.x += image.width / 2;\r\n            this._renderer.offset.y += image.height / 2;\r\n\r\n            if (this._scale instanceof Two.Vector) {\r\n              this._renderer.offset.x *= this._scale.x;\r\n              this._renderer.offset.y *= this._scale.y;\r\n            } else {\r\n              this._renderer.offset.x *= this._scale;\r\n              this._renderer.offset.y *= this._scale;\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n        if (this._flagScale || this._flagLoaded) {\r\n\r\n          if (!(this._renderer.scale instanceof Two.Vector)) {\r\n            this._renderer.scale = new Two.Vector();\r\n          }\r\n\r\n          if (this._scale instanceof Two.Vector) {\r\n            this._renderer.scale.copy(this._scale);\r\n          } else {\r\n            this._renderer.scale.set(this._scale, this._scale);\r\n          }\r\n\r\n        }\r\n\r\n        return this.flagReset();\r\n\r\n      }\r\n\r\n    },\r\n\r\n    updateTexture: function(gl, elem) {\r\n\r\n      this[elem._renderer.type].updateCanvas.call(webgl, elem);\r\n\r\n      if (!elem._renderer.texture) {\r\n        elem._renderer.texture = gl.createTexture();\r\n      }\r\n\r\n      gl.bindTexture(gl.TEXTURE_2D, elem._renderer.texture);\r\n\r\n      // Set the parameters so we can render any size image.\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n      // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n      // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n      // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\r\n      if (this.canvas.width <= 0 || this.canvas.height <= 0) {\r\n        return;\r\n      }\r\n\r\n      // Upload the image into the texture.\r\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.canvas);\r\n\r\n    },\r\n\r\n    program: {\r\n\r\n      create: function(gl, shaders) {\r\n        var program, linked, error;\r\n        program = gl.createProgram();\r\n        _.each(shaders, function(s) {\r\n          gl.attachShader(program, s);\r\n        });\r\n\r\n        gl.linkProgram(program);\r\n        linked = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n        if (!linked) {\r\n          error = gl.getProgramInfoLog(program);\r\n          gl.deleteProgram(program);\r\n          throw new Two.Utils.Error('unable to link program: ' + error);\r\n        }\r\n\r\n        return program;\r\n\r\n      }\r\n\r\n    },\r\n\r\n    shaders: {\r\n\r\n      create: function(gl, source, type) {\r\n        var shader, compiled, error;\r\n        shader = gl.createShader(gl[type]);\r\n        gl.shaderSource(shader, source);\r\n        gl.compileShader(shader);\r\n\r\n        compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n        if (!compiled) {\r\n          error = gl.getShaderInfoLog(shader);\r\n          gl.deleteShader(shader);\r\n          throw new Two.Utils.Error('unable to compile shader ' + shader + ': ' + error);\r\n        }\r\n\r\n        return shader;\r\n\r\n      },\r\n\r\n      types: {\r\n        vertex: 'VERTEX_SHADER',\r\n        fragment: 'FRAGMENT_SHADER'\r\n      },\r\n\r\n      vertex: [\r\n        'precision mediump float;',\r\n        'attribute vec2 a_position;',\r\n        '',\r\n        'uniform mat3 u_matrix;',\r\n        'uniform vec2 u_resolution;',\r\n        'uniform vec4 u_rect;',\r\n        '',\r\n        'varying vec2 v_textureCoords;',\r\n        '',\r\n        'void main() {',\r\n        '   vec2 rectCoords = (a_position * (u_rect.zw - u_rect.xy)) + u_rect.xy;',\r\n        '   vec2 projected = (u_matrix * vec3(rectCoords, 1.0)).xy;',\r\n        '   vec2 normal = projected / u_resolution;',\r\n        '   vec2 clipspace = (normal * 2.0) - 1.0;',\r\n        '',\r\n        '   gl_Position = vec4(clipspace * vec2(1.0, -1.0), 0.0, 1.0);',\r\n        '   v_textureCoords = a_position;',\r\n        '}'\r\n      ].join('\\n'),\r\n\r\n      fragment: [\r\n        'precision mediump float;',\r\n        '',\r\n        'uniform sampler2D u_image;',\r\n        'varying vec2 v_textureCoords;',\r\n        '',\r\n        'void main() {',\r\n        '  vec4 texel = texture2D(u_image, v_textureCoords);',\r\n        '  if (texel.a == 0.0) {',\r\n        '    discard;',\r\n        '  }',\r\n        '  gl_FragColor = texel;',\r\n        '}'\r\n      ].join('\\n')\r\n\r\n    },\r\n\r\n    TextureRegistry: new Two.Registry()\r\n\r\n  };\r\n\r\n  webgl.ctx = webgl.canvas.getContext('2d');\r\n\r\n  /**\r\n   * @name Two.WebGLRenderer\r\n   * @class\r\n   * @extends Two.Utils.Events\r\n   * @param {Object} [parameters] - This object is inherited when constructing a new instance of {@link Two}.\r\n   * @param {Element} [parameters.domElement] - The `<canvas />` to draw to. If none given a new one will be constructed.\r\n   * @param {CanvasElement} [parameters.offscreenElement] - The offscreen two dimensional `<canvas />` to render each element on WebGL texture updates.\r\n   * @param {Boolean} [parameters.antialias] - Determines whether the canvas should clear render with antialias on.\r\n   * @description This class is used by {@link Two} when constructing with `type` of `Two.Types.webgl`. It takes Two.js' scenegraph and renders it to a `<canvas />` through the WebGL api.\r\n   * @see {@link https://www.khronos.org/registry/webgl/specs/latest/1.0/}\r\n   */\r\n  var Renderer = Two[Two.Types.webgl] = function(params) {\r\n\r\n    var gl, vs, fs;\r\n\r\n    /**\r\n     * @name Two.WebGLRenderer#domElement\r\n     * @property {Element} - The `<canvas />` associated with the Two.js scene.\r\n     */\r\n    this.domElement = params.domElement || document.createElement('canvas');\r\n\r\n    if (!_.isUndefined(params.offscreenElement)) {\r\n      webgl.canvas = params.offscreenElement;\r\n      webgl.ctx = webgl.canvas.getContext('2d');\r\n    }\r\n\r\n    /**\r\n     * @name Two.WebGLRenderer#scene\r\n     * @property {Two.Group} - The root group of the scenegraph.\r\n     */\r\n    this.scene = new Two.Group();\r\n    this.scene.parent = this;\r\n\r\n    this._renderer = {\r\n      type: 'renderer',\r\n      matrix: new Two.Array(identity),\r\n      scale: 1,\r\n      opacity: 1\r\n    };\r\n    this._flagMatrix = true;\r\n\r\n    // http://games.greggman.com/game/webgl-and-alpha/\r\n    // http://www.khronos.org/registry/webgl/specs/latest/#5.2\r\n    params = _.defaults(params || {}, {\r\n      antialias: false,\r\n      alpha: true,\r\n      premultipliedAlpha: true,\r\n      stencil: true,\r\n      preserveDrawingBuffer: true,\r\n      overdraw: false\r\n    });\r\n\r\n    /**\r\n     * @name Two.WebGLRenderer#overdraw\r\n     * @property {Boolean} - Determines whether the canvas clears the background each draw call.\r\n     * @default true\r\n     */\r\n    this.overdraw = params.overdraw;\r\n\r\n    /**\r\n     * @name Two.WebGLRenderer#ctx\r\n     * @property {WebGLContext} - Associated two dimensional context to render on the `<canvas />`.\r\n     */\r\n    gl = this.ctx = this.domElement.getContext('webgl', params) ||\r\n      this.domElement.getContext('experimental-webgl', params);\r\n\r\n    if (!this.ctx) {\r\n      throw new Two.Utils.Error(\r\n        'unable to create a webgl context. Try using another renderer.');\r\n    }\r\n\r\n    // Compile Base Shaders to draw in pixel space.\r\n    vs = webgl.shaders.create(\r\n      gl, webgl.shaders.vertex, webgl.shaders.types.vertex);\r\n    fs = webgl.shaders.create(\r\n      gl, webgl.shaders.fragment, webgl.shaders.types.fragment);\r\n\r\n    /**\r\n     * @name Two.WebGLRenderer#program\r\n     * @property {WebGLProgram} - Associated WebGL program to render all elements from the scenegraph.\r\n     */\r\n    this.program = webgl.program.create(gl, [vs, fs]);\r\n    gl.useProgram(this.program);\r\n\r\n    // Create and bind the drawing buffer\r\n\r\n    // look up where the vertex data needs to go.\r\n    this.program.position = gl.getAttribLocation(this.program, 'a_position');\r\n    this.program.matrix = gl.getUniformLocation(this.program, 'u_matrix');\r\n    this.program.rect = gl.getUniformLocation(this.program, 'u_rect');\r\n\r\n    // Bind the vertex buffer\r\n    var positionBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n    gl.vertexAttribPointer(this.program.position, 2, gl.FLOAT, false, 0, 0);\r\n    gl.enableVertexAttribArray(this.program.position);\r\n    gl.bufferData(\r\n      gl.ARRAY_BUFFER,\r\n      new Two.Array([\r\n        0, 0,\r\n        1, 0,\r\n        0, 1,\r\n        0, 1,\r\n        1, 0,\r\n        1, 1\r\n      ]),\r\n      gl.STATIC_DRAW);\r\n\r\n    // Setup some initial statements of the gl context\r\n    gl.enable(gl.BLEND);\r\n\r\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n\r\n    gl.blendEquation(gl.FUNC_ADD);\r\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n  };\r\n\r\n  _.extend(Renderer, {\r\n\r\n    /**\r\n     * @name Two.WebGLRenderer.Utils\r\n     * @property {Object} - A massive object filled with utility functions and properties to render Two.js objects to a `<canvas />` through the WebGL API.\r\n     */\r\n    Utils: webgl\r\n\r\n  });\r\n\r\n  _.extend(Renderer.prototype, Two.Utils.Events, {\r\n\r\n    constructor: Renderer,\r\n\r\n    /**\r\n     * @name Two.WebGLRenderer#setSize\r\n     * @function\r\n     * @param {Number} width - The new width of the renderer.\r\n     * @param {Number} height - The new height of the renderer.\r\n     * @param {Number} [ratio] - The new pixel ratio (pixel density) of the renderer. Defaults to calculate the pixel density of the user's screen.\r\n     * @description Change the size of the renderer.\r\n     * @nota-bene Triggers a `Two.Events.resize`.\r\n     */\r\n    setSize: function(width, height, ratio) {\r\n\r\n      this.width = width;\r\n      this.height = height;\r\n\r\n      this.ratio = _.isUndefined(ratio) ? getRatio(this.ctx) : ratio;\r\n\r\n      this.domElement.width = width * this.ratio;\r\n      this.domElement.height = height * this.ratio;\r\n\r\n      if (_.isObject(this.domElement.style)) {\r\n        _.extend(this.domElement.style, {\r\n          width: width + 'px',\r\n          height: height + 'px'\r\n        });\r\n      }\r\n\r\n      // Set for this.stage parent scaling to account for HDPI\r\n      this._renderer.matrix[0] = this._renderer.matrix[4] = this._renderer.scale = this.ratio;\r\n\r\n      this._flagMatrix = true;\r\n\r\n      this.ctx.viewport(0, 0, width * this.ratio, height * this.ratio);\r\n\r\n      var resolutionLocation = this.ctx.getUniformLocation(\r\n        this.program, 'u_resolution');\r\n      this.ctx.uniform2f(resolutionLocation, width * this.ratio, height * this.ratio);\r\n\r\n      return this.trigger(Two.Events.resize, width, height, ratio);\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.WebGLRenderer#render\r\n     * @function\r\n     * @description Render the current scene to the `<canvas />`.\r\n     */\r\n    render: function() {\r\n\r\n      var gl = this.ctx;\r\n\r\n      if (!this.overdraw) {\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n      }\r\n\r\n      webgl.group.render.call(this.scene, gl, this.program);\r\n      this._flagMatrix = false;\r\n\r\n      return this;\r\n\r\n    }\r\n\r\n  });\r\n\r\n})((typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : (undefined || self || window)).Two);\r\n\n(function(Two) {\r\n\r\n  var _ = Two.Utils;\r\n\r\n  /**\r\n   * @name Two.Shape\r\n   * @class\r\n   * @extends Two.Utils.Events\r\n   * @description The foundational transformation object for the Two.js scenegraph.\r\n   */\r\n  var Shape = Two.Shape = function() {\r\n\r\n    /**\r\n     * @name Two.Shape#_renderer\r\n     * @property {Object}\r\n     * @private\r\n     * @description A private object to store relevant renderer specific variables.\r\n     * @nota-bene With the {@link Two.SvgRenderer} you can access the underlying SVG element created via `shape._renderer.elem`.\r\n     */\r\n    this._renderer = {};\r\n    this._renderer.flagMatrix = _.bind(Shape.FlagMatrix, this);\r\n    this.isShape = true;\r\n\r\n    /**\r\n     * @name Two.Shape#id\r\n     * @property {String} - Session specific unique identifier.\r\n     * @nota-bene In the {@link Two.SvgRenderer} change this to change the underlying SVG element's id too.\r\n     */\r\n    this.id = Two.Identifier + Two.uniqueId();\r\n\r\n    /**\r\n     * @name Two.Shape#classList\r\n     * @property {String[]}\r\n     * @description A list of class strings stored if imported / interpreted  from an SVG element.\r\n     */\r\n    this.classList = [];\r\n\r\n    /**\r\n     * @name Two.Shape#matrix\r\n     * @property {Two.Matrix}\r\n     * @description The transformation matrix of the shape.\r\n     * @nota-bene {@link Two.Shape#translation}, {@link Two.Shape#rotation}, and {@link Two.Shape#scale} apply their values to the matrix when changed. The matrix is what is sent to the renderer to be drawn.\r\n     */\r\n    this.matrix = new Two.Matrix();\r\n\r\n    /**\r\n     * @name Two.Shape#translation\r\n     * @property {Two.Vector} - The x and y value for where the shape is placed relative to its parent.\r\n     */\r\n    this.translation = new Two.Vector();\r\n\r\n    /**\r\n     * @name Two.Shape#rotation\r\n     * @property {Radians} - The value in radians for how much the shape is rotated relative to its parent.\r\n     */\r\n    this.rotation = 0;\r\n\r\n    /**\r\n     * @name Two.Shape#scale\r\n     * @property {Number} - The value for how much the shape is scaled relative to its parent.\r\n     * @nota-bene This value can be replaced with a {@link Two.Vector} to do non-uniform scaling. e.g: `shape.scale = new Two.Vector(2, 1);`\r\n     */\r\n    this.scale = 1;\r\n\r\n  };\r\n\r\n  _.extend(Shape, {\r\n\r\n    /**\r\n     * @name Two.Shape.FlagMatrix\r\n     * @function\r\n     * @description Utility function used in conjunction with event handlers to update the flagMatrix of a shape.\r\n     */\r\n    FlagMatrix: function() {\r\n      this._flagMatrix = true;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Shape.MakeObservable\r\n     * @function\r\n     * @param {Object} object - The object to make observable.\r\n     * @description Convenience function to apply observable qualities of a {@link Two.Shape} to any object. Handy if you'd like to extend the {@link Two.Shape} class on a custom class.\r\n     */\r\n    MakeObservable: function(object) {\r\n\r\n      var translation = {\r\n        enumerable: false,\r\n        get: function() {\r\n          return this._translation;\r\n        },\r\n        set: function(v) {\r\n          if (this._translation) {\r\n            this._translation.unbind(Two.Events.change, this._renderer.flagMatrix);\r\n          }\r\n          this._translation = v;\r\n          this._translation.bind(Two.Events.change, this._renderer.flagMatrix);\r\n          Shape.FlagMatrix.call(this);\r\n        }\r\n      };\r\n\r\n      Object.defineProperty(object, 'translation', translation);\r\n      Object.defineProperty(object, 'position', translation);\r\n\r\n      Object.defineProperty(object, 'rotation', {\r\n        enumerable: true,\r\n        get: function() {\r\n          return this._rotation;\r\n        },\r\n        set: function(v) {\r\n          this._rotation = v;\r\n          this._flagMatrix = true;\r\n        }\r\n      });\r\n\r\n      Object.defineProperty(object, 'scale', {\r\n        enumerable: true,\r\n        get: function() {\r\n          return this._scale;\r\n        },\r\n        set: function(v) {\r\n\r\n          if (this._scale instanceof Two.Vector) {\r\n            this._scale.unbind(Two.Events.change, this._renderer.flagMatrix);\r\n          }\r\n\r\n          this._scale = v;\r\n\r\n          if (this._scale instanceof Two.Vector) {\r\n            this._scale.bind(Two.Events.change, this._renderer.flagMatrix);\r\n          }\r\n\r\n          this._flagMatrix = true;\r\n          this._flagScale = true;\r\n\r\n        }\r\n      });\r\n\r\n      Object.defineProperty(object, 'matrix', {\r\n        enumerable: true,\r\n        get: function() {\r\n          return this._matrix;\r\n        },\r\n        set: function(v) {\r\n          this._matrix = v;\r\n          this._flagMatrix = true;\r\n        }\r\n      });\r\n\r\n      Object.defineProperty(object, 'className', {\r\n\r\n        enumerable: true,\r\n\r\n        get: function() {\r\n          return this._className;\r\n        },\r\n\r\n        set: function(v) {\r\n\r\n          this._flagClassName  = this._className !== v;\r\n\r\n          if (this._flagClassName) {\r\n\r\n            var prev = this._className.split(/\\s+?/);\r\n            var dest = v.split(/\\s+?/);\r\n\r\n            for (var i = 0; i < prev.length; i++) {\r\n              var className = prev[i];\r\n              var index = _.indexOf(this.classList, className);\r\n              if (index >= 0) {\r\n                this.classList.splice(index, 1);\r\n              }\r\n            }\r\n\r\n            this.classList = this.classList.concat(dest);\r\n\r\n          }\r\n\r\n          this._className = v;\r\n\r\n        }\r\n\r\n      });\r\n\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(Shape.prototype, Two.Utils.Events, {\r\n\r\n    // Flags\r\n\r\n    /**\r\n     * @name Two.Shape#_flagMatrix\r\n     * @private\r\n     * @property {Boolean} - Determines whether the matrix needs updating.\r\n     */\r\n    _flagMatrix: true,\r\n\r\n    /**\r\n     * @name Two.Shape#_flagScale\r\n     * @private\r\n     * @property {Boolean} - Determines whether the scale needs updating.\r\n     */\r\n    _flagScale: false,\r\n\r\n    // _flagMask: false,\r\n    // _flagClip: false,\r\n\r\n    /**\r\n     * @name Two.Shape#_flagClassName\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Group#className} need updating.\r\n     */\r\n    _flagClassName: false,\r\n\r\n    // Underlying Properties\r\n\r\n    /**\r\n     * @name Two.Shape#_translation\r\n     * @private\r\n     * @property {Two.Vector} - The translation values as a {@link Two.Vector}.\r\n     */\r\n    _translation: null,\r\n\r\n    /**\r\n     * @name Two.Shape#_rotation\r\n     * @private\r\n     * @property {Radians} - The rotation value in radians.\r\n     */\r\n    _rotation: 0,\r\n\r\n    /**\r\n     * @name Two.Shape#_translation\r\n     * @private\r\n     * @property {Two.Vector} - The translation values as a {@link Two.Vector}.\r\n     */\r\n    _scale: 1,\r\n\r\n    // _mask: null,\r\n    // _clip: false,\r\n\r\n    /**\r\n     * @name Two.Group#className\r\n     * @property {String} - A class to be applied to the element to be compatible with CSS styling.\r\n     * @nota-bene Only available for the SVG renderer.\r\n     */\r\n    _className: '',\r\n\r\n    constructor: Shape,\r\n\r\n    /**\r\n     * @name Two.Shape#addTo\r\n     * @function\r\n     * @param {Two.Group} group - The parent the shape adds itself to.\r\n     * @description Convenience method to add itself to the scenegraph.\r\n     */\r\n    addTo: function(group) {\r\n      group.add(this);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Shape#clone\r\n     * @function\r\n     * @param {Two.Group} [parent] - Optional argument to automatically add the shape to a scenegraph.\r\n     * @returns {Two.Shape}\r\n     * @description Create a new {@link Two.Shape} with the same values as the current shape.\r\n     */\r\n    clone: function(parent) {\r\n\r\n      var clone = new Shape();\r\n\r\n      clone.translation.copy(this.translation);\r\n      clone.rotation = this.rotation;\r\n      clone.scale = this.scale;\r\n\r\n      if (this.matrix.manual) {\r\n        clone.matrix.copy(this.matrix);\r\n      }\r\n\r\n      if (parent) {\r\n        parent.add(clone);\r\n      }\r\n\r\n      return clone._update();\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Shape#_update\r\n     * @function\r\n     * @private\r\n     * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\r\n     * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\r\n     * @nota-bene Try not to call this method more than once a frame.\r\n     */\r\n    _update: function(bubbles) {\r\n\r\n      if (!this._matrix.manual && this._flagMatrix) {\r\n\r\n        this._matrix\r\n          .identity()\r\n          .translate(this.translation.x, this.translation.y);\r\n\r\n          if (this._scale instanceof Two.Vector) {\r\n            this._matrix.scale(this._scale.x, this._scale.y);\r\n          } else {\r\n            this._matrix.scale(this._scale);\r\n          }\r\n\r\n          this._matrix.rotate(this.rotation);\r\n\r\n      }\r\n\r\n      if (bubbles) {\r\n        if (this.parent && this.parent._update) {\r\n          this.parent._update();\r\n        }\r\n      }\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Shape#flagReset\r\n     * @function\r\n     * @private\r\n     * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\r\n     */\r\n    flagReset: function() {\r\n\r\n      this._flagMatrix = this._flagScale = this._flagClassName = false;\r\n\r\n      return this;\r\n\r\n    }\r\n\r\n  });\r\n\r\n  Shape.MakeObservable(Shape.prototype);\r\n\r\n})((typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : (undefined || self || window)).Two);\r\n\n(function(Two) {\r\n\r\n  // Constants\r\n\r\n  var min = Math.min, max = Math.max, round = Math.round,\r\n    ceil = Math.ceil, floor = Math.floor,\r\n    getComputedMatrix = Two.Utils.getComputedMatrix;\r\n\r\n  var commands = {};\r\n  var _ = Two.Utils;\r\n\r\n  _.each(Two.Commands, function(v, k) {\r\n    commands[k] = new RegExp(v);\r\n  });\r\n\r\n  /**\r\n   * @name Two.Path\r\n   * @class\r\n   * @extends Two.Shape\r\n   * @param {Two.Anchor[]} [vertices] - A list of {@link Two.Anchor}s that represent the order and coordinates to construct the rendered shape.\r\n   * @param {Boolean} [closed=false] - Describes whether the shape is closed or open.\r\n   * @param {Boolean} [curved=false] - Describes whether the shape automatically calculates bezier handles for each vertex.\r\n   * @param {Boolean} [manual=false] - Describes whether the developer controls how vertices are plotted or if Two.js automatically plots coordinates based on closed and curved booleans.\r\n   * @description This is the primary primitive class for creating all drawable shapes in Two.js. Unless specified methods return their instance of `Two.Path` for the purpose of chaining.\r\n   */\r\n  var Path = Two.Path = function(vertices, closed, curved, manual) {\r\n\r\n    Two.Shape.call(this);\r\n\r\n    this._renderer.type = 'path';\r\n    this._renderer.flagVertices = _.bind(Path.FlagVertices, this);\r\n    this._renderer.bindVertices = _.bind(Path.BindVertices, this);\r\n    this._renderer.unbindVertices = _.bind(Path.UnbindVertices, this);\r\n\r\n    this._renderer.flagFill = _.bind(Path.FlagFill, this);\r\n    this._renderer.flagStroke = _.bind(Path.FlagStroke, this);\r\n    this._renderer.vertices = [];\r\n    this._renderer.collection = [];\r\n\r\n    /**\r\n     * @name Two.Path#closed\r\n     * @property {Boolean} - Determines whether a final line is drawn between the final point in the `vertices` array and the first point.\r\n     */\r\n    this._closed = !!closed;\r\n\r\n    /**\r\n     * @name Two.Path#curved\r\n     * @property {Boolean} - When the path is `automatic = true` this boolean determines whether the lines between the points are curved or not.\r\n     */\r\n    this._curved = !!curved;\r\n\r\n    /**\r\n     * @name Two.Path#beginning\r\n     * @property {Number} - Number between zero and one to state the beginning of where the path is rendered.\r\n     * @description {@link Two.Path#beginning} is a percentage value that represents at what percentage into the path should the renderer start drawing.\r\n     * @nota-bene This is great for animating in and out stroked paths in conjunction with {@link Two.Path#ending}.\r\n     */\r\n    this.beginning = 0;\r\n\r\n    /**\r\n     * @name Two.Path#ending\r\n     * @property {Number} - Number between zero and one to state the ending of where the path is rendered.\r\n     * @description {@link Two.Path#ending} is a percentage value that represents at what percentage into the path should the renderer start drawing.\r\n     * @nota-bene This is great for animating in and out stroked paths in conjunction with {@link Two.Path#beginning}.\r\n     */\r\n    this.ending = 1;\r\n\r\n    // Style properties\r\n\r\n    /**\r\n     * @name Two.Path#fill\r\n     * @property {(CssColor|Two.Gradient|Two.Texture)} - The value of what the path should be filled in with.\r\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value} for more information on CSS Colors.\r\n     */\r\n    this.fill = '#fff';\r\n\r\n    /**\r\n     * @name Two.Path#stroke\r\n     * @property {(CssColor|Two.Gradient|Two.Texture)} - The value of what the path should be outlined in with.\r\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value} for more information on CSS Colors.\r\n     */\r\n    this.stroke = '#000';\r\n\r\n    /**\r\n     * @name Two.Path#linewidth\r\n     * @property {Number} - The thickness in pixels of the stroke.\r\n     */\r\n    this.linewidth = 1.0;\r\n\r\n    /**\r\n     * @name Two.Path#opacity\r\n     * @property {Number} - The opaqueness of the path.\r\n     * @nota-bene Can be used in conjunction with CSS Colors that have an alpha value.\r\n     */\r\n    this.opacity = 1.0;\r\n\r\n    /**\r\n     * @name Two.Path#className\r\n     * @property {String} - A class to be applied to the element to be compatible with CSS styling.\r\n     * @nota-bene Only available for the SVG renderer.\r\n     */\r\n    this.className = '';\r\n\r\n    /**\r\n     * @name Two.Path#visible\r\n     * @property {Boolean} - Display the path or not.\r\n     * @nota-bene For {@link Two.CanvasRenderer} and {@link Two.WebGLRenderer} when set to false all updating is disabled improving performance dramatically with many objects in the scene.\r\n     */\r\n    this.visible = true;\r\n\r\n    /**\r\n     * @name Two.Path#cap\r\n     * @property {String}\r\n     * @see {@link https://www.w3.org/TR/SVG11/painting.html#StrokeLinecapProperty}\r\n     */\r\n    this.cap = 'butt';      // Default of Adobe Illustrator\r\n\r\n    /**\r\n     * @name Two.Path#join\r\n     * @property {String}\r\n     * @see {@link https://www.w3.org/TR/SVG11/painting.html#StrokeLinejoinProperty}\r\n     */\r\n    this.join = 'miter';    // Default of Adobe Illustrator\r\n\r\n    /**\r\n     * @name Two.Path#miter\r\n     * @property {String}\r\n     * @see {@link https://www.w3.org/TR/SVG11/painting.html#StrokeMiterlimitProperty}\r\n     */\r\n    this.miter = 4;         // Default of Adobe Illustrator\r\n\r\n    /**\r\n     * @name Two.Path#vertices\r\n     * @property {Two.Anchor[]} - An ordered list of anchor points for rendering the path.\r\n     * @description A list of {@link Two.Anchor} objects that consist of what form the path takes.\r\n     * @nota-bene The array when manipulating is actually a {@link Two.Utils.Collection}.\r\n     */\r\n    this.vertices = vertices;\r\n\r\n    /**\r\n     * @name Two.Path#automatic\r\n     * @property {Boolean} - Determines whether or not Two.js should calculate curves, lines, and commands automatically for you or to let the developer manipulate them for themselves.\r\n     */\r\n    this.automatic = !manual;\r\n\r\n    /**\r\n     * @name Two.Path#dashes\r\n     * @property {Number[]} - Array of numbers. Odd indices represent dash length. Even indices represent dash space.\r\n     * @description A list of numbers that represent the repeated dash length and dash space applied to the stroke of the text.\r\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray} for more information on the SVG stroke-dasharray attribute.\r\n     */\r\n    this.dashes = [];\r\n\r\n    /**\r\n     * @name Two.Path#dashes#offset\r\n     * @property {Number} - A number in pixels to offset {@link Two.Path#dashes} display.\r\n     */\r\n    this.dashes.offset = 0;\r\n\r\n  };\r\n\r\n  _.extend(Path, {\r\n\r\n    /**\r\n     * @name Two.Path.Properties\r\n     * @property {String[]} - A list of properties that are on every {@link Two.Path}.\r\n     */\r\n    Properties: [\r\n      'fill',\r\n      'stroke',\r\n      'linewidth',\r\n      'opacity',\r\n      'visible',\r\n      'cap',\r\n      'join',\r\n      'miter',\r\n\r\n      'closed',\r\n      'curved',\r\n      'automatic',\r\n      'beginning',\r\n      'ending'\r\n    ],\r\n\r\n    Utils: {\r\n      getCurveLength: getCurveLength\r\n    },\r\n\r\n    /**\r\n     * @name Two.Path.FlagVertices\r\n     * @function\r\n     * @description Cached method to let renderers know vertices have been updated on a {@link Two.Path}.\r\n     */\r\n    FlagVertices: function() {\r\n      this._flagVertices = true;\r\n      this._flagLength = true;\r\n      if (this.parent) {\r\n        this.parent._flagLength = true;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @name Two.Path.BindVertices\r\n     * @function\r\n     * @description Cached method to let {@link Two.Path} know vertices have been added to the instance.\r\n     */\r\n    BindVertices: function(items) {\r\n\r\n      // This function is called a lot\r\n      // when importing a large SVG\r\n      var i = items.length;\r\n      while (i--) {\r\n        items[i].bind(Two.Events.change, this._renderer.flagVertices);\r\n      }\r\n\r\n      this._renderer.flagVertices();\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Path.UnbindVertices\r\n     * @function\r\n     * @description Cached method to let {@link Two.Path} know vertices have been removed from the instance.\r\n     */\r\n    UnbindVertices: function(items) {\r\n\r\n      var i = items.length;\r\n      while (i--) {\r\n        items[i].unbind(Two.Events.change, this._renderer.flagVertices);\r\n      }\r\n\r\n      this._renderer.flagVertices();\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Path.FlagFill\r\n     * @function\r\n     * @description Cached method to let {@link Two.Path} know the fill has changed.\r\n     */\r\n    FlagFill: function() {\r\n      this._flagFill = true;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Path.FlagFill\r\n     * @function\r\n     * @description Cached method to let {@link Two.Path} know the stroke has changed.\r\n     */\r\n    FlagStroke: function() {\r\n      this._flagStroke = true;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Path.MakeObservable\r\n     * @function\r\n     * @param {Object} object - The object to make observable.\r\n     * @description Convenience function to apply observable qualities of a {@link Two.Path} to any object. Handy if you'd like to extend the {@link Two.Path} class on a custom class.\r\n     */\r\n    MakeObservable: function(object) {\r\n\r\n      Two.Shape.MakeObservable(object);\r\n\r\n      // Only the 7 defined properties are flagged like this. The subsequent\r\n      // properties behave differently and need to be hand written.\r\n      _.each(Path.Properties.slice(2, 8), Two.Utils.defineProperty, object);\r\n\r\n      Object.defineProperty(object, 'fill', {\r\n        enumerable: true,\r\n        get: function() {\r\n          return this._fill;\r\n        },\r\n        set: function(f) {\r\n\r\n          if (this._fill instanceof Two.Gradient\r\n            || this._fill instanceof Two.LinearGradient\r\n            || this._fill instanceof Two.RadialGradient\r\n            || this._fill instanceof Two.Texture) {\r\n            this._fill.unbind(Two.Events.change, this._renderer.flagFill);\r\n          }\r\n\r\n          this._fill = f;\r\n          this._flagFill = true;\r\n\r\n          if (this._fill instanceof Two.Gradient\r\n            || this._fill instanceof Two.LinearGradient\r\n            || this._fill instanceof Two.RadialGradient\r\n            || this._fill instanceof Two.Texture) {\r\n            this._fill.bind(Two.Events.change, this._renderer.flagFill);\r\n          }\r\n\r\n        }\r\n      });\r\n\r\n      Object.defineProperty(object, 'stroke', {\r\n        enumerable: true,\r\n        get: function() {\r\n          return this._stroke;\r\n        },\r\n        set: function(f) {\r\n\r\n          if (this._stroke instanceof Two.Gradient\r\n            || this._stroke instanceof Two.LinearGradient\r\n            || this._stroke instanceof Two.RadialGradient\r\n            || this._stroke instanceof Two.Texture) {\r\n            this._stroke.unbind(Two.Events.change, this._renderer.flagStroke);\r\n          }\r\n\r\n          this._stroke = f;\r\n          this._flagStroke = true;\r\n\r\n          if (this._stroke instanceof Two.Gradient\r\n            || this._stroke instanceof Two.LinearGradient\r\n            || this._stroke instanceof Two.RadialGradient\r\n            || this._stroke instanceof Two.Texture) {\r\n            this._stroke.bind(Two.Events.change, this._renderer.flagStroke);\r\n          }\r\n\r\n        }\r\n      });\r\n\r\n      /**\r\n       * @name Two.Path#length\r\n       * @property {Number} - The sum of distances between all {@link Two.Path#vertices}.\r\n       */\r\n      Object.defineProperty(object, 'length', {\r\n        get: function() {\r\n          if (this._flagLength) {\r\n            this._updateLength();\r\n          }\r\n          return this._length;\r\n        }\r\n      });\r\n\r\n      Object.defineProperty(object, 'closed', {\r\n        enumerable: true,\r\n        get: function() {\r\n          return this._closed;\r\n        },\r\n        set: function(v) {\r\n          this._closed = !!v;\r\n          this._flagVertices = true;\r\n        }\r\n      });\r\n\r\n      Object.defineProperty(object, 'curved', {\r\n        enumerable: true,\r\n        get: function() {\r\n          return this._curved;\r\n        },\r\n        set: function(v) {\r\n          this._curved = !!v;\r\n          this._flagVertices = true;\r\n        }\r\n      });\r\n\r\n      Object.defineProperty(object, 'automatic', {\r\n        enumerable: true,\r\n        get: function() {\r\n          return this._automatic;\r\n        },\r\n        set: function(v) {\r\n          if (v === this._automatic) {\r\n            return;\r\n          }\r\n          this._automatic = !!v;\r\n          var method = this._automatic ? 'ignore' : 'listen';\r\n          _.each(this.vertices, function(v) {\r\n            v[method]();\r\n          });\r\n        }\r\n      });\r\n\r\n      Object.defineProperty(object, 'beginning', {\r\n        enumerable: true,\r\n        get: function() {\r\n          return this._beginning;\r\n        },\r\n        set: function(v) {\r\n          this._beginning = v;\r\n          this._flagVertices = true;\r\n        }\r\n      });\r\n\r\n      Object.defineProperty(object, 'ending', {\r\n        enumerable: true,\r\n        get: function() {\r\n          return this._ending;\r\n        },\r\n        set: function(v) {\r\n          this._ending = v;\r\n          this._flagVertices = true;\r\n        }\r\n      });\r\n\r\n      Object.defineProperty(object, 'vertices', {\r\n\r\n        enumerable: true,\r\n\r\n        get: function() {\r\n          return this._collection;\r\n        },\r\n\r\n        set: function(vertices) {\r\n\r\n          var updateVertices = this._renderer.flagVertices;\r\n          var bindVertices = this._renderer.bindVertices;\r\n          var unbindVertices = this._renderer.unbindVertices;\r\n\r\n          // Remove previous listeners\r\n          if (this._collection) {\r\n            this._collection\r\n              .unbind(Two.Events.insert, bindVertices)\r\n              .unbind(Two.Events.remove, unbindVertices);\r\n          }\r\n\r\n          // Create new Collection with copy of vertices\r\n          if (vertices instanceof Two.Utils.Collection) {\r\n            this._collection = vertices;\r\n          } else {\r\n            this._collection = new Two.Utils.Collection(vertices || []);\r\n          }\r\n\r\n\r\n          // Listen for Collection changes and bind / unbind\r\n          this._collection\r\n            .bind(Two.Events.insert, bindVertices)\r\n            .bind(Two.Events.remove, unbindVertices);\r\n\r\n          // Bind Initial Vertices\r\n          bindVertices(this._collection);\r\n\r\n        }\r\n\r\n      });\r\n\r\n      /**\r\n       * @name Two.Path#clip\r\n       * @property {Two.Shape} - Object to define clipping area.\r\n       * @nota-bene This property is currently not working becuase of SVG spec issues found here {@link https://code.google.com/p/chromium/issues/detail?id=370951}.\r\n       */\r\n      Object.defineProperty(object, 'clip', {\r\n        enumerable: true,\r\n        get: function() {\r\n          return this._clip;\r\n        },\r\n        set: function(v) {\r\n          this._clip = v;\r\n          this._flagClip = true;\r\n        }\r\n      });\r\n\r\n      Object.defineProperty(object, 'dashes', {\r\n        enumerable: true,\r\n        get: function() {\r\n          return this._dashes;\r\n        },\r\n        set: function(v) {\r\n          if (!_.isNumber(v.offset)) {\r\n            v.offset = this._dashes.offset || 0;\r\n          }\r\n          this._dashes = v;\r\n        }\r\n      });\r\n\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(Path.prototype, Two.Shape.prototype, {\r\n\r\n    // Flags\r\n    // http://en.wikipedia.org/wiki/Flag\r\n\r\n    /**\r\n     * @name Two.Path#_flagVertices\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Path#vertices} need updating.\r\n     */\r\n    _flagVertices: true,\r\n\r\n    /**\r\n     * @name Two.Path#_flagLength\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Path#length} needs updating.\r\n     */\r\n    _flagLength: true,\r\n\r\n    /**\r\n     * @name Two.Path#_flagFill\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Path#fill} needs updating.\r\n     */\r\n    _flagFill: true,\r\n\r\n    /**\r\n     * @name Two.Path#_flagStroke\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Path#stroke} needs updating.\r\n     */\r\n    _flagStroke: true,\r\n\r\n    /**\r\n     * @name Two.Path#_flagLinewidth\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Path#linewidth} needs updating.\r\n     */\r\n    _flagLinewidth: true,\r\n\r\n    /**\r\n     * @name Two.Path#_flagOpacity\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Path#opacity} needs updating.\r\n     */\r\n    _flagOpacity: true,\r\n\r\n    /**\r\n     * @name Two.Path#_flagVisible\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Path#visible} needs updating.\r\n     */\r\n    _flagVisible: true,\r\n\r\n    /**\r\n     * @name Two.Path#_flagCap\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Path#cap} needs updating.\r\n     */\r\n    _flagCap: true,\r\n\r\n    /**\r\n     * @name Two.Path#_flagJoin\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Path#join} needs updating.\r\n     */\r\n    _flagJoin: true,\r\n\r\n    /**\r\n     * @name Two.Path#_flagMiter\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Path#miter} needs updating.\r\n     */\r\n    _flagMiter: true,\r\n\r\n    /**\r\n     * @name Two.Path#_flagClip\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Path#clip} needs updating.\r\n     */\r\n    _flagClip: false,\r\n\r\n    // Underlying Properties\r\n\r\n    /**\r\n     * @name Two.Path#_length\r\n     * @private\r\n     * @see {@link Two.Path#length}\r\n     */\r\n    _length: 0,\r\n\r\n    /**\r\n     * @name Two.Path#_fill\r\n     * @private\r\n     * @see {@link Two.Path#fill}\r\n     */\r\n    _fill: '#fff',\r\n\r\n    /**\r\n     * @name Two.Path#_stroke\r\n     * @private\r\n     * @see {@link Two.Path#stroke}\r\n     */\r\n    _stroke: '#000',\r\n\r\n    /**\r\n     * @name Two.Path#_linewidth\r\n     * @private\r\n     * @see {@link Two.Path#linewidth}\r\n     */\r\n    _linewidth: 1.0,\r\n\r\n    /**\r\n     * @name Two.Path#_opacity\r\n     * @private\r\n     * @see {@link Two.Path#opacity}\r\n     */\r\n    _opacity: 1.0,\r\n\r\n    /**\r\n     * @name Two.Path#_visible\r\n     * @private\r\n     * @see {@link Two.Path#visible}\r\n     */\r\n    _visible: true,\r\n\r\n    /**\r\n     * @name Two.Path#_cap\r\n     * @private\r\n     * @see {@link Two.Path#cap}\r\n     */\r\n    _cap: 'round',\r\n\r\n    /**\r\n     * @name Two.Path#_join\r\n     * @private\r\n     * @see {@link Two.Path#join}\r\n     */\r\n    _join: 'round',\r\n\r\n    /**\r\n     * @name Two.Path#_miter\r\n     * @private\r\n     * @see {@link Two.Path#miter}\r\n     */\r\n    _miter: 4,\r\n\r\n    /**\r\n     * @name Two.Path#_closed\r\n     * @private\r\n     * @see {@link Two.Path#closed}\r\n     */\r\n    _closed: true,\r\n\r\n    /**\r\n     * @name Two.Path#_curved\r\n     * @private\r\n     * @see {@link Two.Path#curved}\r\n     */\r\n    _curved: false,\r\n\r\n    /**\r\n     * @name Two.Path#_automatic\r\n     * @private\r\n     * @see {@link Two.Path#automatic}\r\n     */\r\n    _automatic: true,\r\n\r\n    /**\r\n     * @name Two.Path#_beginning\r\n     * @private\r\n     * @see {@link Two.Path#beginning}\r\n     */\r\n    _beginning: 0,\r\n\r\n    /**\r\n     * @name Two.Path#_ending\r\n     * @private\r\n     * @see {@link Two.Path#ending}\r\n     */\r\n    _ending: 1.0,\r\n\r\n    /**\r\n     * @name Two.Path#_clip\r\n     * @private\r\n     * @see {@link Two.Path#clip}\r\n     */\r\n    _clip: false,\r\n\r\n    /**\r\n     * @name Two.Path#_dashes\r\n     * @private\r\n     * @see {@link Two.Path#dashes}\r\n     */\r\n    _dashes: [],\r\n\r\n    constructor: Path,\r\n\r\n    /**\r\n     * @name Two.Path#clone\r\n     * @function\r\n     * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\r\n     * @returns {Two.Path}\r\n     * @description Create a new instance of {@link Two.Path} with the same properties of the current path.\r\n     */\r\n    clone: function(parent) {\r\n\r\n      var clone = new Path();\r\n\r\n      for (var j = 0; j < this.vertices.length; j++) {\r\n        clone.vertices.push(this.vertices[j].clone());\r\n      }\r\n\r\n      for (var i = 0; i < Path.Properties.length; i++) {\r\n        var k = Path.Properties[i];\r\n        clone[k] = this[k];\r\n      }\r\n\r\n      clone.className = this.className;\r\n\r\n      clone.translation.copy(this.translation);\r\n      clone.rotation = this.rotation;\r\n      clone.scale = this.scale;\r\n\r\n      if (this.matrix.manual) {\r\n        clone.matrix.copy(this.matrix);\r\n      }\r\n\r\n      if (parent) {\r\n        parent.add(clone);\r\n      }\r\n\r\n      return clone._update();\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Path#toObject\r\n     * @function\r\n     * @returns {Object}\r\n     * @description Return a JSON compatible plain object that represents the path.\r\n     */\r\n    toObject: function() {\r\n\r\n      var result = {\r\n        vertices: _.map(this.vertices, function(v) {\r\n          return v.toObject();\r\n        })\r\n      };\r\n\r\n      _.each(Two.Shape.Properties, function(k) {\r\n        result[k] = this[k];\r\n      }, this);\r\n\r\n      result.className = this.className;\r\n\r\n      result.translation = this.translation.toObject();\r\n      result.rotation = this.rotation;\r\n      result.scale = this.scale instanceof Two.Vector ? this.scale.toObject() : this.scale;\r\n\r\n      if (this.matrix.manual) {\r\n        result.matrix = this.matrix.toObject();\r\n      }\r\n\r\n      return result;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Path#noFill\r\n     * @function\r\n     * @description Short hand method to set fill to `transparent`.\r\n     */\r\n    noFill: function() {\r\n      this.fill = 'transparent';\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Path#noStroke\r\n     * @function\r\n     * @description Short hand method to set stroke to `transparent`.\r\n     */\r\n    noStroke: function() {\r\n      this.stroke = undefined;\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Path#corner\r\n     * @function\r\n     * @description Orient the vertices of the shape to the upper left-hand corner of the path.\r\n     */\r\n    corner: function() {\r\n\r\n      var rect = this.getBoundingClientRect(true);\r\n\r\n      rect.centroid = {\r\n        x: rect.left + rect.width / 2,\r\n        y: rect.top + rect.height / 2\r\n      };\r\n\r\n      _.each(this.vertices, function(v) {\r\n        v.subSelf(rect.centroid);\r\n        v.x += rect.width / 2;\r\n        v.y += rect.height / 2;\r\n      });\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Path#center\r\n     * @function\r\n     * @description Orient the vertices of the shape to the center of the path.\r\n     */\r\n    center: function() {\r\n\r\n      var rect = this.getBoundingClientRect(true);\r\n\r\n      rect.centroid = {\r\n        x: rect.left + rect.width / 2 - this.translation.x,\r\n        y: rect.top + rect.height / 2 - this.translation.y\r\n      };\r\n\r\n      _.each(this.vertices, function(v) {\r\n        v.subSelf(rect.centroid);\r\n      });\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Path#remove\r\n     * @function\r\n     * @description Remove self from the scene / parent.\r\n     */\r\n    remove: function() {\r\n\r\n      if (!this.parent) {\r\n        return this;\r\n      }\r\n\r\n      this.parent.remove(this);\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Path#getBoundingClientRect\r\n     * @function\r\n     * @param {Boolean} [shallow=false] - Describes whether to calculate off local matrix or world matrix.\r\n     * @returns {Object} - Returns object with top, left, right, bottom, width, height attributes.\r\n     * @description Return an object with top, left, right, bottom, width, and height parameters of the path.\r\n     */\r\n    getBoundingClientRect: function(shallow) {\r\n      var matrix, border, l, x, y, i, v0, c0, c1, v1;\r\n\r\n      var left = Infinity, right = -Infinity,\r\n          top = Infinity, bottom = -Infinity;\r\n\r\n      // TODO: Update this to not __always__ update. Just when it needs to.\r\n      this._update(true);\r\n\r\n      matrix = shallow ? this._matrix : getComputedMatrix(this);\r\n\r\n      border = this.linewidth / 2;\r\n      l = this._renderer.vertices.length;\r\n\r\n      if (l <= 0) {\r\n        return {\r\n          width: 0,\r\n          height: 0\r\n        };\r\n      }\r\n\r\n      for (i = 0; i < l; i++) {\r\n\r\n        v1 = this._renderer.vertices[i];\r\n        // If i = 0, then this \"wraps around\" to the last vertex. Otherwise, it's the previous vertex.\r\n        // This is important for handling cyclic paths.\r\n        v0 = this._renderer.vertices[(i + l - 1) % l];\r\n\r\n        if (v0.controls && v1.controls) {\r\n\r\n          if (v0.relative) {\r\n            c0 = matrix.multiply(\r\n              v0.controls.right.x + v0.x, v0.controls.right.y + v0.y, 1);\r\n          } else {\r\n            c0 = matrix.multiply(\r\n              v0.controls.right.x, v0.controls.right.y, 1);\r\n          }\r\n          v0 = matrix.multiply(v0.x, v0.y, 1);\r\n\r\n          if (v1.relative) {\r\n            c1 = matrix.multiply(\r\n              v1.controls.left.x + v1.x, v1.controls.left.y + v1.y, 1);\r\n          } else {\r\n            c1 = matrix.multiply(\r\n              v1.controls.left.x, v1.controls.left.y, 1);\r\n          }\r\n          v1 = matrix.multiply(v1.x, v1.y, 1);\r\n\r\n          var bb = Two.Utils.getCurveBoundingBox(\r\n            v0.x, v0.y, c0.x, c0.y, c1.x, c1.y, v1.x, v1.y);\r\n\r\n          top = min(bb.min.y - border, top);\r\n          left = min(bb.min.x - border, left);\r\n          right = max(bb.max.x + border, right);\r\n          bottom = max(bb.max.y + border, bottom);\r\n\r\n        } else {\r\n\r\n          if (i <= 1) {\r\n\r\n            v0 = matrix.multiply(v0.x, v0.y, 1);\r\n\r\n            top = min(v0.y - border, top);\r\n            left = min(v0.x - border, left);\r\n            right = max(v0.x + border, right);\r\n            bottom = max(v0.y + border, bottom);\r\n\r\n          }\r\n\r\n          v1 = matrix.multiply(v1.x, v1.y, 1);\r\n\r\n          top = min(v1.y - border, top);\r\n          left = min(v1.x - border, left);\r\n          right = max(v1.x + border, right);\r\n          bottom = max(v1.y + border, bottom);\r\n\r\n        }\r\n\r\n      }\r\n\r\n      return {\r\n        top: top,\r\n        left: left,\r\n        right: right,\r\n        bottom: bottom,\r\n        width: right - left,\r\n        height: bottom - top\r\n      };\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Path#getPointAt\r\n     * @function\r\n     * @param {Boolean} t - Percentage value describing where on the Two.Path to estimate and assign coordinate values.\r\n     * @param {Two.Vector} [obj=undefined] - Object to apply calculated x, y to. If none available returns new Object.\r\n     * @returns {Object}\r\n     * @description Given a float `t` from 0 to 1, return a point or assign a passed `obj`'s coordinates to that percentage on this Two.Path's curve.\r\n     */\r\n    getPointAt: function(t, obj) {\r\n\r\n      var ia, ib, result;\r\n      var x, x1, x2, x3, x4, y, y1, y2, y3, y4, left, right;\r\n      var target = this.length * Math.min(Math.max(t, 0), 1);\r\n      var length = this.vertices.length;\r\n      var last = length - 1;\r\n\r\n      var a = null;\r\n      var b = null;\r\n\r\n      for (var i = 0, l = this._lengths.length, sum = 0; i < l; i++) {\r\n\r\n        if (sum + this._lengths[i] >= target) {\r\n\r\n          if (this._closed) {\r\n            ia = Two.Utils.mod(i, length);\r\n            ib = Two.Utils.mod(i - 1, length);\r\n            if (i === 0) {\r\n              ia = ib;\r\n              ib = i;\r\n            }\r\n          } else {\r\n            ia = i;\r\n            ib = Math.min(Math.max(i - 1, 0), last);\r\n          }\r\n\r\n          a = this.vertices[ia];\r\n          b = this.vertices[ib];\r\n          target -= sum;\r\n          if (this._lengths[i] !== 0) {\r\n            t = target / this._lengths[i];\r\n          } else {\r\n            t = 0;\r\n          }\r\n\r\n          break;\r\n\r\n        }\r\n\r\n        sum += this._lengths[i];\r\n\r\n      }\r\n\r\n      if (_.isNull(a) || _.isNull(b)) {\r\n        return null;\r\n      }\r\n\r\n      if (!a) {\r\n        return b;\r\n      } else if (!b) {\r\n        return a;\r\n      }\r\n\r\n      right = b.controls && b.controls.right;\r\n      left = a.controls && a.controls.left;\r\n\r\n      x1 = b.x;\r\n      y1 = b.y;\r\n      x2 = (right || b).x;\r\n      y2 = (right || b).y;\r\n      x3 = (left || a).x;\r\n      y3 = (left || a).y;\r\n      x4 = a.x;\r\n      y4 = a.y;\r\n\r\n      if (right && b.relative) {\r\n        x2 += b.x;\r\n        y2 += b.y;\r\n      }\r\n\r\n      if (left && a.relative) {\r\n        x3 += a.x;\r\n        y3 += a.y;\r\n      }\r\n\r\n      x = Two.Utils.getComponentOnCubicBezier(t, x1, x2, x3, x4);\r\n      y = Two.Utils.getComponentOnCubicBezier(t, y1, y2, y3, y4);\r\n\r\n      // Higher order points for control calculation.\r\n      var t1x = Two.Utils.lerp(x1, x2, t);\r\n      var t1y = Two.Utils.lerp(y1, y2, t);\r\n      var t2x = Two.Utils.lerp(x2, x3, t);\r\n      var t2y = Two.Utils.lerp(y2, y3, t);\r\n      var t3x = Two.Utils.lerp(x3, x4, t);\r\n      var t3y = Two.Utils.lerp(y3, y4, t);\r\n\r\n      // Calculate the returned points control points.\r\n      var brx = Two.Utils.lerp(t1x, t2x, t);\r\n      var bry = Two.Utils.lerp(t1y, t2y, t);\r\n      var alx = Two.Utils.lerp(t2x, t3x, t);\r\n      var aly = Two.Utils.lerp(t2y, t3y, t);\r\n\r\n      if (_.isObject(obj)) {\r\n\r\n        obj.x = x;\r\n        obj.y = y;\r\n\r\n        if (!_.isObject(obj.controls)) {\r\n          Two.Anchor.AppendCurveProperties(obj);\r\n        }\r\n\r\n        obj.controls.left.x = brx;\r\n        obj.controls.left.y = bry;\r\n        obj.controls.right.x = alx;\r\n        obj.controls.right.y = aly;\r\n\r\n        if (!_.isBoolean(obj.relative) || obj.relative) {\r\n          obj.controls.left.x -= x;\r\n          obj.controls.left.y -= y;\r\n          obj.controls.right.x -= x;\r\n          obj.controls.right.y -= y;\r\n        }\r\n\r\n        obj.t = t;\r\n\r\n        return obj;\r\n\r\n      }\r\n\r\n      result = new Two.Anchor(\r\n        x, y, brx - x, bry - y, alx - x, aly - y,\r\n        this._curved ? Two.Commands.curve : Two.Commands.line\r\n      );\r\n\r\n      result.t = t;\r\n\r\n      return result;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Path#plot\r\n     * @function\r\n     * @description Based on closed / curved and sorting of vertices plot where all points should be and where the respective handles should be too.\r\n     * @nota-bene While this method is public it is internally called by {@link Two.Path#_update} when `automatic = true`.\r\n     */\r\n    plot: function() {\r\n\r\n      if (this.curved) {\r\n        Two.Utils.getCurveFromPoints(this._collection, this.closed);\r\n        return this;\r\n      }\r\n\r\n      for (var i = 0; i < this._collection.length; i++) {\r\n        this._collection[i].command = i === 0 ? Two.Commands.move : Two.Commands.line;\r\n      }\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Path#subdivide\r\n     * @function\r\n     * @param {Integer} limit - How many times to recurse subdivisions.\r\n     * @description Insert a {@link Two.Anchor} at the midpoint between every item in {@link Two.Path#vertices}.\r\n     */\r\n    subdivide: function(limit) {\r\n      //TODO: DRYness (function below)\r\n      this._update();\r\n\r\n      var last = this.vertices.length - 1;\r\n      var b = this.vertices[last];\r\n      var closed = this._closed || this.vertices[last]._command === Two.Commands.close;\r\n      var points = [];\r\n      _.each(this.vertices, function(a, i) {\r\n\r\n        if (i <= 0 && !closed) {\r\n          b = a;\r\n          return;\r\n        }\r\n\r\n        if (a.command === Two.Commands.move) {\r\n          points.push(new Two.Anchor(b.x, b.y));\r\n          if (i > 0) {\r\n            points[points.length - 1].command = Two.Commands.line;\r\n          }\r\n          b = a;\r\n          return;\r\n        }\r\n\r\n        var verts = getSubdivisions(a, b, limit);\r\n        points = points.concat(verts);\r\n\r\n        // Assign commands to all the verts\r\n        _.each(verts, function(v, i) {\r\n          if (i <= 0 && b.command === Two.Commands.move) {\r\n            v.command = Two.Commands.move;\r\n          } else {\r\n            v.command = Two.Commands.line;\r\n          }\r\n        });\r\n\r\n        if (i >= last) {\r\n\r\n          // TODO: Add check if the two vectors in question are the same values.\r\n          if (this._closed && this._automatic) {\r\n\r\n            b = a;\r\n\r\n            verts = getSubdivisions(a, b, limit);\r\n            points = points.concat(verts);\r\n\r\n            // Assign commands to all the verts\r\n            _.each(verts, function(v, i) {\r\n              if (i <= 0 && b.command === Two.Commands.move) {\r\n                v.command = Two.Commands.move;\r\n              } else {\r\n                v.command = Two.Commands.line;\r\n              }\r\n            });\r\n\r\n          } else if (closed) {\r\n            points.push(new Two.Anchor(a.x, a.y));\r\n          }\r\n\r\n          points[points.length - 1].command = closed\r\n            ? Two.Commands.close : Two.Commands.line;\r\n\r\n        }\r\n\r\n        b = a;\r\n\r\n      }, this);\r\n\r\n      this._automatic = false;\r\n      this._curved = false;\r\n      this.vertices = points;\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Path#_updateLength\r\n     * @function\r\n     * @private\r\n     * @param {Integer} [limit=] -\r\n     * @param {Boolean} [silent=false] - If set to `true` then the path isn't updated before calculation. Useful for internal use.\r\n     * @description Recalculate the {@link Two.Path#length} value.\r\n     */\r\n    _updateLength: function(limit, silent) {\r\n      //TODO: DRYness (function above)\r\n      if (!silent) {\r\n        this._update();\r\n      }\r\n\r\n      var length = this.vertices.length;\r\n      var last = length - 1;\r\n      var b = this.vertices[last];\r\n      var closed = false;//this._closed || this.vertices[last]._command === Two.Commands.close;\r\n      var sum = 0;\r\n\r\n      if (_.isUndefined(this._lengths)) {\r\n        this._lengths = [];\r\n      }\r\n\r\n      _.each(this.vertices, function(a, i) {\r\n\r\n        if ((i <= 0 && !closed) || a.command === Two.Commands.move) {\r\n          b = a;\r\n          this._lengths[i] = 0;\r\n          return;\r\n        }\r\n\r\n        this._lengths[i] = getCurveLength(a, b, limit);\r\n        sum += this._lengths[i];\r\n\r\n        if (i >= last && closed) {\r\n\r\n          b = this.vertices[(i + 1) % length];\r\n\r\n          this._lengths[i + 1] = getCurveLength(a, b, limit);\r\n          sum += this._lengths[i + 1];\r\n\r\n        }\r\n\r\n        b = a;\r\n\r\n      }, this);\r\n\r\n      this._length = sum;\r\n      this._flagLength = false;\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Path#_update\r\n     * @function\r\n     * @private\r\n     * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\r\n     * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\r\n     * @nota-bene Try not to call this method more than once a frame.\r\n     */\r\n    _update: function() {\r\n\r\n      if (this._flagVertices) {\r\n\r\n        if (this._automatic) {\r\n          this.plot();\r\n        }\r\n\r\n        if (this._flagLength) {\r\n          this._updateLength(undefined, true);\r\n        }\r\n\r\n        var l = this._collection.length;\r\n        var last = l - 1;\r\n        var closed = this._closed;\r\n\r\n        var beginning = Math.min(this._beginning, this._ending);\r\n        var ending = Math.max(this._beginning, this._ending);\r\n\r\n        var bid = getIdByLength(this, beginning * this._length);\r\n        var eid = getIdByLength(this, ending * this._length);\r\n\r\n        var low = ceil(bid);\r\n        var high = floor(eid);\r\n\r\n        var left, right, prev, next, v;\r\n\r\n        this._renderer.vertices.length = 0;\r\n\r\n        for (var i = 0; i < l; i++) {\r\n\r\n          if (this._renderer.collection.length <= i) {\r\n            // Expected to be `relative` anchor points.\r\n            this._renderer.collection.push(new Two.Anchor());\r\n          }\r\n\r\n          if (i > high && !right) {\r\n\r\n            v = this._renderer.collection[i];\r\n            v.copy(this._collection[i]);\r\n            this.getPointAt(ending, v);\r\n            v.command = this._renderer.collection[i].command;\r\n            this._renderer.vertices.push(v);\r\n\r\n            right = v;\r\n            prev = this._collection[i - 1];\r\n\r\n            // Project control over the percentage `t`\r\n            // of the in-between point\r\n            if (prev && prev.controls) {\r\n\r\n              v.controls.right.clear();\r\n\r\n              this._renderer.collection[i - 1].controls.right\r\n                .clear()\r\n                .lerp(prev.controls.right, v.t);\r\n\r\n            }\r\n\r\n          } else if (i >= low && i <= high) {\r\n\r\n            v = this._renderer.collection[i]\r\n              .copy(this._collection[i]);\r\n            this._renderer.vertices.push(v);\r\n\r\n            if (i === high && contains(this, ending)) {\r\n              right = v;\r\n              if (!closed && right.controls) {\r\n                right.controls.right.clear();\r\n              }\r\n            } else if (i === low && contains(this, beginning)) {\r\n              left = v;\r\n              left.command = Two.Commands.move;\r\n              if (!closed && left.controls) {\r\n                left.controls.left.clear();\r\n              }\r\n            }\r\n\r\n          }\r\n\r\n        }\r\n\r\n        // Prepend the trimmed point if necessary.\r\n        if (low > 0 && !left) {\r\n\r\n          i = low - 1;\r\n\r\n          v = this._renderer.collection[i];\r\n          v.copy(this._collection[i]);\r\n          this.getPointAt(beginning, v);\r\n          v.command = Two.Commands.move;\r\n          this._renderer.vertices.unshift(v);\r\n\r\n          left = v;\r\n          next = this._collection[i + 1];\r\n\r\n          // Project control over the percentage `t`\r\n          // of the in-between point\r\n          if (next && next.controls) {\r\n\r\n            v.controls.left.clear();\r\n\r\n            this._renderer.collection[i + 1].controls.left\r\n              .copy(next.controls.left)\r\n              .lerp(Two.Vector.zero, v.t);\r\n\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n      Two.Shape.prototype._update.apply(this, arguments);\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Path#flagReset\r\n     * @function\r\n     * @private\r\n     * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\r\n     */\r\n    flagReset: function() {\r\n\r\n      this._flagVertices =  this._flagFill =  this._flagStroke =\r\n         this._flagLinewidth = this._flagOpacity = this._flagVisible =\r\n         this._flagCap = this._flagJoin = this._flagMiter =\r\n         this._flagClip = false;\r\n\r\n      Two.Shape.prototype.flagReset.call(this);\r\n\r\n      return this;\r\n\r\n    }\r\n\r\n  });\r\n\r\n  Path.MakeObservable(Path.prototype);\r\n\r\n   // Utility functions\r\n\r\n  function contains(path, t) {\r\n\r\n    if (t === 0 || t === 1) {\r\n      return true;\r\n    }\r\n\r\n    var length = path._length;\r\n    var target = length * t;\r\n    var elapsed = 0;\r\n\r\n    for (var i = 0; i < path._lengths.length; i++) {\r\n      var dist = path._lengths[i];\r\n      if (elapsed >= target) {\r\n        return target - elapsed >= 0;\r\n      }\r\n      elapsed += dist;\r\n    }\r\n\r\n    return false;\r\n\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param {Two.Path} path - The path to analyze against.\r\n   * @param {Number} target - The target length at which to find an anchor.\r\n   * @returns {Integer}\r\n   * @description Return the id of an anchor based on a target length.\r\n   */\r\n  function getIdByLength(path, target) {\r\n\r\n    var total = path._length;\r\n\r\n    if (target <= 0) {\r\n      return 0;\r\n    } else if (target >= total) {\r\n      return path._lengths.length - 1;\r\n    }\r\n\r\n    for (var i = 0, sum = 0; i < path._lengths.length; i++) {\r\n\r\n      if (sum + path._lengths[i] >= target) {\r\n        target -= sum;\r\n        return Math.max(i - 1, 0) + target / path._lengths[i];\r\n      }\r\n\r\n      sum += path._lengths[i];\r\n\r\n    }\r\n\r\n    return - 1;\r\n\r\n  }\r\n\r\n  function getCurveLength(a, b, limit) {\r\n    // TODO: DRYness\r\n    var x1, x2, x3, x4, y1, y2, y3, y4;\r\n\r\n    var right = b.controls && b.controls.right;\r\n    var left = a.controls && a.controls.left;\r\n\r\n    x1 = b.x;\r\n    y1 = b.y;\r\n    x2 = (right || b).x;\r\n    y2 = (right || b).y;\r\n    x3 = (left || a).x;\r\n    y3 = (left || a).y;\r\n    x4 = a.x;\r\n    y4 = a.y;\r\n\r\n    if (right && b._relative) {\r\n      x2 += b.x;\r\n      y2 += b.y;\r\n    }\r\n\r\n    if (left && a._relative) {\r\n      x3 += a.x;\r\n      y3 += a.y;\r\n    }\r\n\r\n    return Two.Utils.getCurveLength(x1, y1, x2, y2, x3, y3, x4, y4, limit);\r\n\r\n  }\r\n\r\n  function getSubdivisions(a, b, limit) {\r\n    // TODO: DRYness\r\n    var x1, x2, x3, x4, y1, y2, y3, y4;\r\n\r\n    var right = b.controls && b.controls.right;\r\n    var left = a.controls && a.controls.left;\r\n\r\n    x1 = b.x;\r\n    y1 = b.y;\r\n    x2 = (right || b).x;\r\n    y2 = (right || b).y;\r\n    x3 = (left || a).x;\r\n    y3 = (left || a).y;\r\n    x4 = a.x;\r\n    y4 = a.y;\r\n\r\n    if (right && b._relative) {\r\n      x2 += b.x;\r\n      y2 += b.y;\r\n    }\r\n\r\n    if (left && a._relative) {\r\n      x3 += a.x;\r\n      y3 += a.y;\r\n    }\r\n\r\n    return Two.Utils.subdivide(x1, y1, x2, y2, x3, y3, x4, y4, limit);\r\n\r\n  }\r\n\r\n})((typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : (undefined || self || window)).Two);\r\n\n(function(Two) {\r\n\r\n  var Path = Two.Path;\r\n  var _ = Two.Utils;\r\n\r\n  /**\r\n   * @name Two.Line\r\n   * @class\r\n   * @extends Two.Path\r\n   * @param {Number} [x1=0] - The x position of the first vertex on the line.\r\n   * @param {Number} [y1=0] - The y position of the first vertex on the line.\r\n   * @param {Number} [x2=0] - The x position of the second vertex on the line.\r\n   * @param {Number} [y2=0] - The y position of the second vertex on the line.\r\n   */\r\n  var Line = Two.Line = function(x1, y1, x2, y2) {\r\n\r\n    var width = x2 - x1;\r\n    var height = y2 - y1;\r\n\r\n    var w2 = width / 2;\r\n    var h2 = height / 2;\r\n\r\n    Path.call(this, [\r\n        new Two.Anchor(x1, y1),\r\n        new Two.Anchor(x2, y2)\r\n    ]);\r\n\r\n    this.vertices[0].command = Two.Commands.move;\r\n    this.vertices[1].command = Two.Commands.line;\r\n\r\n    this.automatic = false;\r\n\r\n  };\r\n\r\n  _.extend(Line.prototype, Path.prototype);\r\n  Line.prototype.constructor = Line;\r\n\r\n  Path.MakeObservable(Line.prototype);\r\n\r\n})((typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : (undefined || self || window)).Two);\r\n\n(function(Two) {\r\n\r\n  var Path = Two.Path;\r\n  var _ = Two.Utils;\r\n\r\n  /**\r\n   * @name Two.Rectangle\r\n   * @class\r\n   * @extends Two.Path\r\n   * @param {Number} [x=0] - The x position of the rectangle.\r\n   * @param {Number} [y=0] - The y position of the rectangle.\r\n   * @param {Number} width - The width value of the rectangle.\r\n   * @param {Number} height - The width value of the rectangle.\r\n   */\r\n  var Rectangle = Two.Rectangle = function(x, y, width, height) {\r\n\r\n    Path.call(this, [\r\n      new Two.Anchor(),\r\n      new Two.Anchor(),\r\n      new Two.Anchor(),\r\n      new Two.Anchor()\r\n      // new Two.Anchor() // TODO: Figure out how to handle this for `beginning` / `ending` animations\r\n    ], true, false, true);\r\n\r\n    /**\r\n     * @name Two.Rectangle#width\r\n     * @property {Number} - The size of the width of the rectangle.\r\n     */\r\n    this.width = width;\r\n    /**\r\n     * @name Two.Rectangle#height\r\n     * @property {Number} - The size of the height of the rectangle.\r\n     */\r\n    this.height = height;\r\n\r\n    /**\r\n     * @name Two.Rectangle#origin\r\n     * @property {Number} - A two-component vector describing the origin offset to draw the rectangle. Default is `0, 0`.\r\n     */\r\n    this.origin = new Two.Vector();\r\n    this.translation.set(x, y);\r\n\r\n    this._update();\r\n\r\n  };\r\n\r\n  _.extend(Rectangle, {\r\n\r\n    /**\r\n     * @name Two.Rectangle.Properties\r\n     * @property {String[]} - A list of properties that are on every {@link Two.Rectangle}.\r\n     */\r\n    Properties: ['width', 'height'],\r\n\r\n    /**\r\n     * @name Two.Rectangle.MakeObservable\r\n     * @function\r\n     * @param {Object} object - The object to make observable.\r\n     * @description Convenience function to apply observable qualities of a {@link Two.Rectangle} to any object. Handy if you'd like to extend the {@link Two.Rectangle} class on a custom class.\r\n     */\r\n    MakeObservable: function(object) {\r\n\r\n      Path.MakeObservable(object);\r\n      _.each(Rectangle.Properties, Two.Utils.defineProperty, object);\r\n\r\n      Object.defineProperty(object, 'origin', {\r\n        enumerable: true,\r\n        get: function() {\r\n          return this._origin;\r\n        },\r\n        set: function(v) {\r\n          if (this._origin) {\r\n            this._origin.unbind(Two.Events.change, this._renderer.flagVertices);\r\n          }\r\n          this._origin = v;\r\n          this._origin.bind(Two.Events.change, this._renderer.flagVertices);\r\n          this._renderer.flagVertices();\r\n        }\r\n      });\r\n\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(Rectangle.prototype, Path.prototype, {\r\n\r\n    /**\r\n     * @name Two.Rectangle#_flagWidth\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Rectangle#width} needs updating.\r\n     */\r\n    _flagWidth: 0,\r\n    /**\r\n     * @name Two.Rectangle#_flagHeight\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Rectangle#height} needs updating.\r\n     */\r\n    _flagHeight: 0,\r\n\r\n    /**\r\n     * @name Two.Rectangle#_width\r\n     * @private\r\n     * @see {@link Two.Rectangle#width}\r\n     */\r\n    _width: 0,\r\n    /**\r\n     * @name Two.Rectangle#_height\r\n     * @private\r\n     * @see {@link Two.Rectangle#height}\r\n     */\r\n    _height: 0,\r\n\r\n    _origin: null,\r\n\r\n    constructor: Rectangle,\r\n\r\n    /**\r\n     * @name Two.Rectangle#_update\r\n     * @function\r\n     * @private\r\n     * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\r\n     * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\r\n     * @nota-bene Try not to call this method more than once a frame.\r\n     */\r\n    _update: function() {\r\n\r\n      if (this._flagWidth || this._flagHeight) {\r\n\r\n        var xr = this._width / 2;\r\n        var yr = this._height / 2;\r\n\r\n        this.vertices[0].set(-xr, -yr).add(this._origin).command = Two.Commands.move;\r\n        this.vertices[1].set(xr, -yr).add(this._origin).command = Two.Commands.line;\r\n        this.vertices[2].set(xr, yr).add(this._origin).command = Two.Commands.line;\r\n        this.vertices[3].set(-xr, yr).add(this._origin).command = Two.Commands.line;\r\n        // FYI: Two.Sprite and Two.ImageSequence have 4 verts\r\n        if (this.vertices[4]) {\r\n          this.vertices[4].set(-xr, -yr).add(this._origin).command = Two.Commands.line;\r\n        }\r\n\r\n      }\r\n\r\n      Path.prototype._update.call(this);\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Rectangle#flagReset\r\n     * @function\r\n     * @private\r\n     * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\r\n     */\r\n    flagReset: function() {\r\n\r\n      this._flagWidth = this._flagHeight = false;\r\n      Path.prototype.flagReset.call(this);\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Rectangle#clone\r\n     * @function\r\n     * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\r\n     * @returns {Two.Rectangle}\r\n     * @description Create a new instance of {@link Two.Rectangle} with the same properties of the current path.\r\n     */\r\n    clone: function(parent) {\r\n\r\n      var clone = new Rectangle(0, 0, this.width, this.height);\r\n\r\n      clone.translation.copy(this.translation);\r\n      clone.rotation = this.rotation;\r\n      clone.scale = this.scale;\r\n\r\n      if (this.matrix.manual) {\r\n        clone.matrix.copy(this.matrix);\r\n      }\r\n\r\n      _.each(Two.Path.Properties, function(k) {\r\n        clone[k] = this[k];\r\n      }, this);\r\n\r\n      if (parent) {\r\n        parent.add(clone);\r\n      }\r\n\r\n      return clone;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Rectangle#toObject\r\n     * @function\r\n     * @returns {Object}\r\n     * @description Return a JSON compatible plain object that represents the path.\r\n     */\r\n    toObject: function() {\r\n\r\n      var object = Path.prototype.toObject.call(this);\r\n      object.width = this.width;\r\n      object.height = this.height;\r\n      object.origin = this.origin.toObject();\r\n      return object;\r\n\r\n    }\r\n\r\n  });\r\n\r\n  Rectangle.MakeObservable(Rectangle.prototype);\r\n\r\n})((typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : (undefined || self || window)).Two);\r\n\n(function(Two) {\r\n\r\n  var Path = Two.Path, TWO_PI = Math.PI * 2, HALF_PI = Math.PI / 2;\r\n  var cos = Math.cos, sin = Math.sin;\r\n  var _ = Two.Utils;\r\n\r\n  /**\r\n   * @name Two.Ellipse\r\n   * @class\r\n   * @extends Two.Path\r\n   * @param {Number} [x=0] - The x position of the ellipse.\r\n   * @param {Number} [y=0] - The y position of the ellipse.\r\n   * @param {Number} rx - The radius value of the ellipse in the x direction.\r\n   * @param {Number} ry - The radius value of the ellipse in the y direction.\r\n   * @param {Number} [resolution=4] - The number of vertices used to construct the ellipse.\r\n   */\r\n  var Ellipse = Two.Ellipse = function(ox, oy, rx, ry, resolution) {\r\n\r\n    if (!_.isNumber(ry)) {\r\n      ry = rx;\r\n    }\r\n\r\n    // At least 2 vertices are required for proper circlage\r\n    var amount = resolution ? Math.max(resolution, 2) : 4;\r\n\r\n    var points = _.map(_.range(amount), function(i) {\r\n      return new Two.Anchor();\r\n    }, this);\r\n\r\n    Path.call(this, points, true, true, true);\r\n\r\n    /**\r\n     * @name Two.Ellipse#width\r\n     * @property {Number} - The width of the ellipse.\r\n     */\r\n    this.width = rx * 2;\r\n    /**\r\n     * @name Two.Ellipse#height\r\n     * @property {Number} - The height of the ellipse.\r\n     */\r\n    this.height = ry * 2;\r\n\r\n    this._update();\r\n    this.translation.set(ox, oy);\r\n\r\n  };\r\n\r\n  _.extend(Ellipse, {\r\n\r\n    /**\r\n     * @name Two.Ellipse.Properties\r\n     * @property {String[]} - A list of properties that are on every {@link Two.Ellipse}.\r\n     */\r\n    Properties: ['width', 'height'],\r\n\r\n    /**\r\n     * @name Two.Ellipse.MakeObservable\r\n     * @function\r\n     * @param {Object} object - The object to make observable.\r\n     * @description Convenience function to apply observable qualities of a {@link Two.Ellipse} to any object. Handy if you'd like to extend the {@link Two.Ellipse} class on a custom class.\r\n     */\r\n    MakeObservable: function(obj) {\r\n\r\n      Path.MakeObservable(obj);\r\n      _.each(Ellipse.Properties, Two.Utils.defineProperty, obj);\r\n\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(Ellipse.prototype, Path.prototype, {\r\n\r\n    /**\r\n     * @name Two.Ellipse#_flagWidth\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Ellipse#width} needs updating.\r\n     */\r\n    _flagWidth: false,\r\n    /**\r\n     * @name Two.Ellipse#_flagHeight\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Ellipse#height} needs updating.\r\n     */\r\n    _flagHeight: false,\r\n\r\n    /**\r\n     * @name Two.Polygon#_width\r\n     * @private\r\n     * @see {@link Two.Ellipse#width}\r\n     */\r\n    _width: 0,\r\n    /**\r\n     * @name Two.Polygon#_height\r\n     * @private\r\n     * @see {@link Two.Ellipse#height}\r\n     */\r\n    _height: 0,\r\n\r\n    constructor: Ellipse,\r\n\r\n    /**\r\n     * @name Two.Ellipse#_update\r\n     * @function\r\n     * @private\r\n     * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\r\n     * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\r\n     * @nota-bene Try not to call this method more than once a frame.\r\n     */\r\n    _update: function() {\r\n\r\n      if (this._flagWidth || this._flagHeight) {\r\n        // Coefficient for approximating circular arcs with Bezier curves\r\n        var c = (4 / 3) * Math.tan(Math.PI / (this.vertices.length * 2));\r\n        var radiusX = this._width / 2;\r\n        var radiusY = this._height / 2;\r\n\r\n        for (var i = 0, numVertices = this.vertices.length; i < numVertices; i++) {\r\n          var pct = i / numVertices;\r\n          var theta = pct * TWO_PI;\r\n\r\n          var x = radiusX * cos(theta);\r\n          var y = radiusY * sin(theta);\r\n\r\n          var lx = radiusX * c * cos(theta - HALF_PI);\r\n          var ly = radiusY * c * sin(theta - HALF_PI);\r\n\r\n          var rx = radiusX * c * cos(theta + HALF_PI);\r\n          var ry = radiusY * c * sin(theta + HALF_PI);\r\n\r\n          var v = this.vertices[i];\r\n\r\n          v.command = Two.Commands.curve;\r\n          v.set(x, y);\r\n          v.controls.left.set(lx, ly);\r\n          v.controls.right.set(rx, ry);\r\n        }\r\n      }\r\n\r\n      Path.prototype._update.call(this);\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Ellipse#flagReset\r\n     * @function\r\n     * @private\r\n     * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\r\n     */\r\n    flagReset: function() {\r\n\r\n      this._flagWidth = this._flagHeight = false;\r\n\r\n      Path.prototype.flagReset.call(this);\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Ellipse#clone\r\n     * @function\r\n     * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\r\n     * @returns {Two.Polygon}\r\n     * @description Create a new instance of {@link Two.Polygon} with the same properties of the current path.\r\n     */\r\n    clone: function(parent) {\r\n\r\n      var rx = this.width / 2;\r\n      var ry = this.height / 2;\r\n      var resolution = this.vertices.length;\r\n      var clone = new Ellipse(0, 0, rx, ry, resolution);\r\n\r\n      clone.translation.copy(this.translation);\r\n      clone.rotation = this.rotation;\r\n      clone.scale = this.scale;\r\n\r\n      if (this.matrix.manual) {\r\n        clone.matrix.copy(this.matrix);\r\n      }\r\n\r\n      _.each(Two.Path.Properties, function(k) {\r\n        clone[k] = this[k];\r\n      }, this);\r\n\r\n      if (parent) {\r\n        parent.add(clone);\r\n      }\r\n\r\n      return clone;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Ellipse#toObject\r\n     * @function\r\n     * @returns {Object}\r\n     * @description Return a JSON compatible plain object that represents the path.\r\n     */\r\n    toObject: function() {\r\n\r\n      var object = Path.prototype.toObject.call(this);\r\n\r\n      _.each(Ellipse.Properties, function(property) {\r\n        object[property] = this[property];\r\n      }, this);\r\n\r\n      return object;\r\n\r\n    }\r\n\r\n  });\r\n\r\n  Ellipse.MakeObservable(Ellipse.prototype);\r\n\r\n})((typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : (undefined || self || window)).Two);\r\n\n(function(Two) {\r\n\r\n  var Path = Two.Path, TWO_PI = Math.PI * 2, HALF_PI = Math.PI / 2;\r\n  var cos = Math.cos, sin = Math.sin;\r\n  var _ = Two.Utils;\r\n\r\n  /**\r\n   * @name Two.Circle\r\n   * @class\r\n   * @extends Two.Path\r\n   * @param {Number} [x=0] - The x position of the circle.\r\n   * @param {Number} [y=0] - The y position of the circle.\r\n   * @param {Number} radius - The radius value of the circle.\r\n   * @param {Number} [resolution=4] - The number of vertices used to construct the circle.\r\n   */\r\n  var Circle = Two.Circle = function(ox, oy, r, resolution) {\r\n\r\n    // At least 2 vertices are required for proper circlage\r\n    var amount = resolution ? Math.max(resolution, 2) : 4;\r\n\r\n    var points = _.map(_.range(amount), function(i) {\r\n      return new Two.Anchor();\r\n    }, this);\r\n\r\n    Path.call(this, points, true, true, true);\r\n\r\n    /**\r\n     * @name Two.Circle#radius\r\n     * @property {Number} - The size of the radius of the circle.\r\n     */\r\n    this.radius = r;\r\n\r\n    this._update();\r\n\r\n    if (_.isNumber(ox)) {\r\n      this.translation.x = ox;\r\n    }\r\n    if (_.isNumber(oy)) {\r\n      this.translation.y = oy;\r\n    }\r\n\r\n  };\r\n\r\n  _.extend(Circle, {\r\n\r\n    /**\r\n     * @name Two.Circle.Properties\r\n     * @property {String[]} - A list of properties that are on every {@link Two.Circle}.\r\n     */\r\n    Properties: ['radius'],\r\n\r\n    /**\r\n     * @name Two.Circle.MakeObservable\r\n     * @function\r\n     * @param {Object} object - The object to make observable.\r\n     * @description Convenience function to apply observable qualities of a {@link Two.Circle} to any object. Handy if you'd like to extend the {@link Two.Circle} class on a custom class.\r\n     */\r\n    MakeObservable: function(obj) {\r\n\r\n      Path.MakeObservable(obj);\r\n      _.each(Circle.Properties, Two.Utils.defineProperty, obj);\r\n\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(Circle.prototype, Path.prototype, {\r\n\r\n    /**\r\n     * @name Two.Circle#_flagRadius\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Circle#radius} needs updating.\r\n     */\r\n    _flagRadius: false,\r\n\r\n    /**\r\n     * @name Two.Circle#_radius\r\n     * @private\r\n     * @see {@link Two.Circle#radius}\r\n     */\r\n    _radius: 0,\r\n\r\n    constructor: Circle,\r\n\r\n    /**\r\n     * @name Two.Circle#_update\r\n     * @function\r\n     * @private\r\n     * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\r\n     * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\r\n     * @nota-bene Try not to call this method more than once a frame.\r\n     */\r\n    _update: function() {\r\n\r\n      if (this._flagRadius) {\r\n        // Coefficient for approximating circular arcs with Bezier curves\r\n        var c = (4 / 3) * Math.tan(Math.PI / (this.vertices.length * 2));\r\n\r\n        var radius = this._radius;\r\n        var rc = radius * c;\r\n\r\n        for (var i = 0, numVertices = this.vertices.length; i < numVertices; i++) {\r\n          var pct = i / numVertices;\r\n          var theta = pct * TWO_PI;\r\n\r\n          var x = radius * cos(theta);\r\n          var y = radius * sin(theta);\r\n\r\n          var lx = rc * cos(theta - HALF_PI);\r\n          var ly = rc * sin(theta - HALF_PI);\r\n\r\n          var rx = rc * cos(theta + HALF_PI);\r\n          var ry = rc * sin(theta + HALF_PI);\r\n\r\n          var v = this.vertices[i];\r\n\r\n          v.command = Two.Commands.curve;\r\n          v.set(x, y);\r\n          v.controls.left.set(lx, ly);\r\n          v.controls.right.set(rx, ry);\r\n        }\r\n      }\r\n\r\n      Path.prototype._update.call(this);\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Circle#flagReset\r\n     * @function\r\n     * @private\r\n     * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\r\n     */\r\n    flagReset: function() {\r\n\r\n      this._flagRadius = false;\r\n\r\n      Path.prototype.flagReset.call(this);\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Circle#clone\r\n     * @function\r\n     * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\r\n     * @returns {Two.Circle}\r\n     * @description Create a new instance of {@link Two.Circle} with the same properties of the current path.\r\n     */\r\n    clone: function(parent) {\r\n\r\n      var clone = new Circle(0, 0, this.radius, this.vertices.length);\r\n\r\n      clone.translation.copy(this.translation);\r\n      clone.rotation = this.rotation;\r\n      clone.scale = this.scale;\r\n\r\n      if (this.matrix.manual) {\r\n        clone.matrix.copy(this.matrix);\r\n      }\r\n\r\n      _.each(Two.Path.Properties, function(k) {\r\n        clone[k] = this[k];\r\n      }, this);\r\n\r\n      if (parent) {\r\n        parent.add(clone);\r\n      }\r\n\r\n      return clone;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Circle#toObject\r\n     * @function\r\n     * @returns {Object}\r\n     * @description Return a JSON compatible plain object that represents the path.\r\n     */\r\n    toObject: function() {\r\n\r\n      var object = Path.prototype.toObject.call(this);\r\n\r\n      _.each(Circle.Properties, function(property) {\r\n        object[property] = this[property];\r\n      }, this);\r\n\r\n      return object;\r\n\r\n    }\r\n\r\n  });\r\n\r\n  Circle.MakeObservable(Circle.prototype);\r\n\r\n})((typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : (undefined || self || window)).Two);\r\n\n(function(Two) {\r\n\r\n  var Path = Two.Path, TWO_PI = Math.PI * 2, cos = Math.cos, sin = Math.sin;\r\n  var _ = Two.Utils;\r\n\r\n  /**\r\n   * @name Two.Polygon\r\n   * @class\r\n   * @extends Two.Path\r\n   * @param {Number} [x=0] - The x position of the polygon.\r\n   * @param {Number} [y=0] - The y position of the polygon.\r\n   * @param {Number} radius - The radius value of the polygon.\r\n   * @param {Number} [sides=12] - The number of vertices used to construct the polygon.\r\n   */\r\n  var Polygon = Two.Polygon = function(ox, oy, r, sides) {\r\n\r\n    sides = Math.max(sides || 0, 3);\r\n\r\n    Path.call(this);\r\n\r\n    this.closed = true;\r\n    this.automatic = false;\r\n\r\n    /**\r\n     * @name Two.Polygon#width\r\n     * @property {Number} - The size of the width of the polygon.\r\n     */\r\n    this.width = r * 2;\r\n    /**\r\n     * @name Two.Polygon#height\r\n     * @property {Number} - The size of the height of the polygon.\r\n     */\r\n    this.height = r * 2;\r\n    /**\r\n     * @name Two.Polygon#sides\r\n     * @property {Number} - The amount of sides the polyogn has.\r\n     */\r\n    this.sides = sides;\r\n\r\n    this._update();\r\n    this.translation.set(ox, oy);\r\n\r\n  };\r\n\r\n  _.extend(Polygon, {\r\n\r\n    /**\r\n     * @name Two.Polygon.Properties\r\n     * @property {String[]} - A list of properties that are on every {@link Two.Polygon}.\r\n     */\r\n    Properties: ['width', 'height', 'sides'],\r\n\r\n    /**\r\n     * @name Two.Polygon.MakeObservable\r\n     * @function\r\n     * @param {Object} object - The object to make observable.\r\n     * @description Convenience function to apply observable qualities of a {@link Two.Polygon} to any object. Handy if you'd like to extend the {@link Two.Polygon} class on a custom class.\r\n     */\r\n    MakeObservable: function(obj) {\r\n\r\n      Path.MakeObservable(obj);\r\n      _.each(Polygon.Properties, Two.Utils.defineProperty, obj);\r\n\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(Polygon.prototype, Path.prototype, {\r\n\r\n    /**\r\n     * @name Two.Polygon#_flagWidth\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Polygon#width} needs updating.\r\n     */\r\n    _flagWidth: false,\r\n    /**\r\n     * @name Two.Polygon#_flagHeight\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Polygon#height} needs updating.\r\n     */\r\n    _flagHeight: false,\r\n    /**\r\n     * @name Two.Polygon#_flagSides\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Polygon#sides} needs updating.\r\n     */\r\n    _flagSides: false,\r\n\r\n    /**\r\n     * @name Two.Polygon#_width\r\n     * @private\r\n     * @see {@link Two.Polygon#width}\r\n     */\r\n    _width: 0,\r\n    /**\r\n     * @name Two.Polygon#_height\r\n     * @private\r\n     * @see {@link Two.Polygon#height}\r\n     */\r\n    _height: 0,\r\n    /**\r\n     * @name Two.Polygon#_sides\r\n     * @private\r\n     * @see {@link Two.Polygon#sides}\r\n     */\r\n    _sides: 0,\r\n\r\n    constructor: Polygon,\r\n\r\n    /**\r\n     * @name Two.Polygon#_update\r\n     * @function\r\n     * @private\r\n     * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\r\n     * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\r\n     * @nota-bene Try not to call this method more than once a frame.\r\n     */\r\n    _update: function() {\r\n\r\n      if (this._flagWidth || this._flagHeight || this._flagSides) {\r\n\r\n        var sides = this._sides;\r\n        var amount = sides + 1;\r\n        var length = this.vertices.length;\r\n\r\n        if (length > sides) {\r\n          this.vertices.splice(sides - 1, length - sides);\r\n          length = sides;\r\n        }\r\n\r\n        for (var i = 0; i < amount; i++) {\r\n\r\n          var pct = (i + 0.5) / sides;\r\n          var theta = TWO_PI * pct + Math.PI / 2;\r\n          var x = this._width * cos(theta) / 2;\r\n          var y = this._height * sin(theta) / 2;\r\n\r\n          if (i >= length) {\r\n            this.vertices.push(new Two.Anchor(x, y));\r\n          } else {\r\n            this.vertices[i].set(x, y);\r\n          }\r\n\r\n          this.vertices[i].command = i === 0\r\n            ? Two.Commands.move : Two.Commands.line;\r\n\r\n        }\r\n\r\n      }\r\n\r\n      Path.prototype._update.call(this);\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Polygon#flagReset\r\n     * @function\r\n     * @private\r\n     * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\r\n     */\r\n    flagReset: function() {\r\n\r\n      this._flagWidth = this._flagHeight = this._flagSides = false;\r\n      Path.prototype.flagReset.call(this);\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Polygon#clone\r\n     * @function\r\n     * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\r\n     * @returns {Two.Polygon}\r\n     * @description Create a new instance of {@link Two.Polygon} with the same properties of the current path.\r\n     */\r\n    clone: function(parent) {\r\n\r\n      var clone = new Polygon(0, 0, this.radius, this.sides);\r\n\r\n      clone.translation.copy(this.translation);\r\n      clone.rotation = this.rotation;\r\n      clone.scale = this.scale;\r\n\r\n      if (this.matrix.manual) {\r\n        clone.matrix.copy(this.matrix);\r\n      }\r\n\r\n      _.each(Two.Path.Properties, function(k) {\r\n        clone[k] = this[k];\r\n      }, this);\r\n\r\n      if (parent) {\r\n        parent.add(clone);\r\n      }\r\n\r\n      return clone;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Polygon#toObject\r\n     * @function\r\n     * @returns {Object}\r\n     * @description Return a JSON compatible plain object that represents the path.\r\n     */\r\n    toObject: function() {\r\n\r\n      var object = Path.prototype.toObject.call(this);\r\n\r\n      _.each(Polygon.Properties, function(property) {\r\n        object[property] = this[property];\r\n      }, this);\r\n\r\n      return object;\r\n\r\n    }\r\n\r\n  });\r\n\r\n  Polygon.MakeObservable(Polygon.prototype);\r\n\r\n})((typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : (undefined || self || window)).Two);\r\n\n(function(Two) {\r\n\r\n  var Path = Two.Path, PI = Math.PI, TWO_PI = Math.PI * 2, HALF_PI = Math.PI / 2,\r\n    cos = Math.cos, sin = Math.sin, abs = Math.abs, _ = Two.Utils,\r\n    mod = Two.Utils.mod;\r\n\r\n  /**\r\n   * @name Two.ArcSegment\r\n   * @class\r\n   * @extends Two.Path\r\n   * @param {Number} [x=0] - The x position of the arc segment.\r\n   * @param {Number} [y=0] - The y position of the arc segment.\r\n   * @param {Number} innerRadius - The inner radius value of the arc segment.\r\n   * @param {Number} outerRadius - The outer radius value of the arc segment.\r\n   * @param {Radians} startAngle - The start angle of the arc segment in radians.\r\n   * @param {Radians} endAngle - The end angle of the arc segment in radians.\r\n   * @param {Number} [resolution=24] - The number of vertices used to construct the arc segment.\r\n   */\r\n  var ArcSegment = Two.ArcSegment = function(ox, oy, ir, or, sa, ea, res) {\r\n\r\n    var amount = res || (Two.Resolution * 3);\r\n    var points = _.map(_.range(amount), function() {\r\n      return new Two.Anchor();\r\n    });\r\n\r\n    Path.call(this, points, true, false, true);\r\n\r\n    /**\r\n     * @name Two.ArcSegment#innerRadius\r\n     * @property {Number} - The size of the inner radius of the arc segment.\r\n     */\r\n    this.innerRadius = ir;\r\n    /**\r\n     * @name Two.ArcSegment#outerRadius\r\n     * @property {Number} - The size of the outer radius of the arc segment.\r\n     */\r\n    this.outerRadius = or;\r\n\r\n    /**\r\n     * @name Two.ArcSegment#startRadius\r\n     * @property {Radians} - The angle of one side for the arc segment.\r\n     */\r\n    this.startAngle = sa;\r\n    /**\r\n     * @name Two.ArcSegment#endAngle\r\n     * @property {Radians} - The angle of the other side for the arc segment.\r\n     */\r\n    this.endAngle = ea;\r\n\r\n    this._update();\r\n\r\n    if (_.isNumber(ox)) {\r\n      this.translation.x = ox;\r\n    }\r\n    if (_.isNumber(oy)) {\r\n      this.translation.y = oy;\r\n    }\r\n\r\n  };\r\n\r\n  _.extend(ArcSegment, {\r\n\r\n    /**\r\n     * @name Two.ArcSegment.Properties\r\n     * @property {String[]} - A list of properties that are on every {@link Two.ArcSegment}.\r\n     */\r\n    Properties: ['startAngle', 'endAngle', 'innerRadius', 'outerRadius'],\r\n\r\n    /**\r\n     * @name Two.ArcSegment.MakeObservable\r\n     * @function\r\n     * @param {Object} object - The object to make observable.\r\n     * @description Convenience function to apply observable qualities of a {@link Two.ArcSegment} to any object. Handy if you'd like to extend the {@link Two.ArcSegment} class on a custom class.\r\n     */\r\n    MakeObservable: function(obj) {\r\n\r\n      Path.MakeObservable(obj);\r\n      _.each(ArcSegment.Properties, Two.Utils.defineProperty, obj);\r\n\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(ArcSegment.prototype, Path.prototype, {\r\n\r\n    /**\r\n     * @name Two.ArcSegment#_flagStartAngle\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.ArcSegment#startAngle} needs updating.\r\n     */\r\n    _flagStartAngle: false,\r\n    /**\r\n     * @name Two.ArcSegment#_flagEndAngle\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.ArcSegment#endAngle} needs updating.\r\n     */\r\n    _flagEndAngle: false,\r\n    /**\r\n     * @name Two.ArcSegment#_flagInnerRadius\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.ArcSegment#innerRadius} needs updating.\r\n     */\r\n    _flagInnerRadius: false,\r\n    /**\r\n     * @name Two.ArcSegment#_flagOuterRadius\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.ArcSegment#outerRadius} needs updating.\r\n     */\r\n    _flagOuterRadius: false,\r\n\r\n    /**\r\n     * @name Two.ArcSegment#_startAngle\r\n     * @private\r\n     * @see {@link Two.ArcSegment#startAngle}\r\n     */\r\n    _startAngle: 0,\r\n    /**\r\n     * @name Two.ArcSegment#_endAngle\r\n     * @private\r\n     * @see {@link Two.ArcSegment#endAngle}\r\n     */\r\n    _endAngle: TWO_PI,\r\n    /**\r\n     * @name Two.ArcSegment#_innerRadius\r\n     * @private\r\n     * @see {@link Two.ArcSegment#innerRadius}\r\n     */\r\n    _innerRadius: 0,\r\n    /**\r\n     * @name Two.ArcSegment#_outerRadius\r\n     * @private\r\n     * @see {@link Two.ArcSegment#outerRadius}\r\n     */\r\n    _outerRadius: 0,\r\n\r\n    constructor: ArcSegment,\r\n\r\n    /**\r\n     * @name Two.ArcSegment#_update\r\n     * @function\r\n     * @private\r\n     * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\r\n     * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\r\n     * @nota-bene Try not to call this method more than once a frame.\r\n     */\r\n    _update: function() {\r\n\r\n      if (this._flagStartAngle || this._flagEndAngle || this._flagInnerRadius\r\n        || this._flagOuterRadius) {\r\n\r\n        var sa = this._startAngle;\r\n        var ea = this._endAngle;\r\n\r\n        var ir = this._innerRadius;\r\n        var or = this._outerRadius;\r\n\r\n        var connected = mod(sa, TWO_PI) === mod(ea, TWO_PI);\r\n        var punctured = ir > 0;\r\n\r\n        var vertices = this.vertices;\r\n        var length = (punctured ? vertices.length / 2 : vertices.length);\r\n        var command, id = 0;\r\n\r\n        if (connected) {\r\n          length--;\r\n        } else if (!punctured) {\r\n          length -= 2;\r\n        }\r\n\r\n        /**\r\n         * Outer Circle\r\n         */\r\n        for (var i = 0, last = length - 1; i < length; i++) {\r\n\r\n          var pct = i / last;\r\n          var v = vertices[id];\r\n          var theta = pct * (ea - sa) + sa;\r\n          var step = (ea - sa) / length;\r\n\r\n          var x = or * Math.cos(theta);\r\n          var y = or * Math.sin(theta);\r\n\r\n          switch (i) {\r\n            case 0:\r\n              command = Two.Commands.move;\r\n              break;\r\n            default:\r\n              command = Two.Commands.curve;\r\n          }\r\n\r\n          v.command = command;\r\n          v.x = x;\r\n          v.y = y;\r\n          v.controls.left.clear();\r\n          v.controls.right.clear();\r\n\r\n          if (v.command === Two.Commands.curve) {\r\n            var amp = or * step / Math.PI;\r\n            v.controls.left.x = amp * Math.cos(theta - HALF_PI);\r\n            v.controls.left.y = amp * Math.sin(theta - HALF_PI);\r\n            v.controls.right.x = amp * Math.cos(theta + HALF_PI);\r\n            v.controls.right.y = amp * Math.sin(theta + HALF_PI);\r\n            if (i === 1) {\r\n              v.controls.left.multiplyScalar(2);\r\n            }\r\n            if (i === last) {\r\n              v.controls.right.multiplyScalar(2);\r\n            }\r\n          }\r\n\r\n          id++;\r\n\r\n        }\r\n\r\n        if (punctured) {\r\n\r\n          if (connected) {\r\n            vertices[id].command = Two.Commands.close;\r\n            id++;\r\n          } else {\r\n            length--;\r\n            last = length - 1;\r\n          }\r\n\r\n          /**\r\n           * Inner Circle\r\n           */\r\n          for (i = 0; i < length; i++) {\r\n\r\n            pct = i / last;\r\n            v = vertices[id];\r\n            theta = (1 - pct) * (ea - sa) + sa;\r\n            step = (ea - sa) / length;\r\n\r\n            x = ir * Math.cos(theta);\r\n            y = ir * Math.sin(theta);\r\n            command = Two.Commands.curve;\r\n            if (i <= 0) {\r\n              command = connected ? Two.Commands.move : Two.Commands.line;\r\n            }\r\n\r\n            v.command = command;\r\n            v.x = x;\r\n            v.y = y;\r\n            v.controls.left.clear();\r\n            v.controls.right.clear();\r\n\r\n            if (v.command === Two.Commands.curve) {\r\n              amp = ir * step / Math.PI;\r\n              v.controls.left.x = amp * Math.cos(theta + HALF_PI);\r\n              v.controls.left.y = amp * Math.sin(theta + HALF_PI);\r\n              v.controls.right.x = amp * Math.cos(theta - HALF_PI);\r\n              v.controls.right.y = amp * Math.sin(theta - HALF_PI);\r\n              if (i === 1) {\r\n                v.controls.left.multiplyScalar(2);\r\n              }\r\n              if (i === last) {\r\n                v.controls.right.multiplyScalar(2);\r\n              }\r\n            }\r\n\r\n            id++;\r\n\r\n          }\r\n\r\n          // Final Point\r\n          vertices[id].copy(vertices[0]);\r\n          vertices[id].command = Two.Commands.line;\r\n\r\n        } else if (!connected) {\r\n\r\n          vertices[id].command = Two.Commands.line;\r\n          vertices[id].x = 0;\r\n          vertices[id].y = 0;\r\n          id++;\r\n\r\n          // Final Point\r\n          vertices[id].copy(vertices[0]);\r\n          vertices[id].command = Two.Commands.line;\r\n\r\n        }\r\n\r\n      }\r\n\r\n      Path.prototype._update.call(this);\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.ArcSegment#flagReset\r\n     * @function\r\n     * @private\r\n     * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\r\n     */\r\n    flagReset: function() {\r\n\r\n      Path.prototype.flagReset.call(this);\r\n\r\n      this._flagStartAngle = this._flagEndAngle\r\n        = this._flagInnerRadius = this._flagOuterRadius = false;\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.ArcSegment#clone\r\n     * @function\r\n     * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\r\n     * @returns {Two.ArcSegment}\r\n     * @description Create a new instance of {@link Two.ArcSegment} with the same properties of the current path.\r\n     */\r\n    clone: function(parent) {\r\n\r\n      var ir = this.innerRadius;\r\n      var or = this.outerradius;\r\n      var sa = this.startAngle;\r\n      var ea = this.endAngle;\r\n      var resolution = this.vertices.length;\r\n\r\n      var clone = new ArcSegment(0, 0, ir, or, sa, ea, resolution);\r\n\r\n      clone.translation.copy(this.translation);\r\n      clone.rotation = this.rotation;\r\n      clone.scale = this.scale;\r\n\r\n      if (this.matrix.manual) {\r\n        clone.matrix.copy(this.matrix);\r\n      }\r\n\r\n      _.each(Two.Path.Properties, function(k) {\r\n        clone[k] = this[k];\r\n      }, this);\r\n\r\n      if (parent) {\r\n        parent.add(clone);\r\n      }\r\n\r\n      return clone;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.ArcSegment#toObject\r\n     * @function\r\n     * @returns {Object}\r\n     * @description Return a JSON compatible plain object that represents the path.\r\n     */\r\n    toObject: function() {\r\n\r\n      var object = Path.prototype.toObject.call(this);\r\n\r\n      _.each(ArcSegment.Properties, function(property) {\r\n        object[property] = this[property];\r\n      }, this);\r\n\r\n      return object;\r\n\r\n    }\r\n\r\n  });\r\n\r\n  ArcSegment.MakeObservable(ArcSegment.prototype);\r\n\r\n})((typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : (undefined || self || window)).Two);\r\n\n(function(Two) {\r\n\r\n  var Path = Two.Path, TWO_PI = Math.PI * 2, cos = Math.cos, sin = Math.sin;\r\n  var _ = Two.Utils;\r\n\r\n  /**\r\n   * @name Two.Star\r\n   * @class\r\n   * @extends Two.Path\r\n   * @param {Number} [x=0] - The x position of the star.\r\n   * @param {Number} [y=0] - The y position of the star.\r\n   * @param {Number} innerRadius - The inner radius value of the star.\r\n   * @param {Number} outerRadius - The outer radius value of the star.\r\n   * @param {Number} [sides=5] - The number of sides used to construct the star.\r\n   */\r\n  var Star = Two.Star = function(ox, oy, ir, or, sides) {\r\n\r\n    if (arguments.length <= 3) {\r\n      or = ir;\r\n      ir = or / 2;\r\n    }\r\n\r\n    if (!_.isNumber(sides) || sides <= 0) {\r\n      sides = 5;\r\n    }\r\n\r\n    var length = sides * 2;\r\n\r\n    Path.call(this);\r\n    this.closed = true;\r\n    this.automatic = false;\r\n\r\n    /**\r\n     * @name Two.Star#innerRadius\r\n     * @property {Number} - The size of the inner radius of the star.\r\n     */\r\n    this.innerRadius = ir;\r\n    /**\r\n     * @name Two.Star#outerRadius\r\n     * @property {Number} - The size of the outer radius of the star.\r\n     */\r\n    this.outerRadius = or;\r\n    /**\r\n     * @name Two.Star#sides\r\n     * @property {Number} - The amount of sides the star has.\r\n     */\r\n    this.sides = sides;\r\n\r\n    this._update();\r\n    this.translation.set(ox, oy);\r\n\r\n  };\r\n\r\n  _.extend(Star, {\r\n\r\n    /**\r\n     * @name Two.Star.Properties\r\n     * @property {String[]} - A list of properties that are on every {@link Two.Star}.\r\n     */\r\n    Properties: ['innerRadius', 'outerRadius', 'sides'],\r\n\r\n    /**\r\n     * @name Two.Star.MakeObservable\r\n     * @function\r\n     * @param {Object} object - The object to make observable.\r\n     * @description Convenience function to apply observable qualities of a {@link Two.Star} to any object. Handy if you'd like to extend the {@link Two.Star} class on a custom class.\r\n     */\r\n    MakeObservable: function(obj) {\r\n\r\n      Path.MakeObservable(obj);\r\n      _.each(Star.Properties, Two.Utils.defineProperty, obj);\r\n\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(Star.prototype, Path.prototype, {\r\n\r\n    /**\r\n     * @name Two.Star#_flagInnerRadius\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Star#innerRadius} needs updating.\r\n     */\r\n    _flagInnerRadius: false,\r\n    /**\r\n     * @name Two.Star#_flagOuterRadius\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Star#outerRadius} needs updating.\r\n     */\r\n    _flagOuterRadius: false,\r\n    /**\r\n     * @name Two.Star#_flagSides\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Star#sides} needs updating.\r\n     */\r\n    _flagSides: false,\r\n\r\n    /**\r\n     * @name Two.Star#_innerRadius\r\n     * @private\r\n     * @see {@link Two.Star#innerRadius}\r\n     */\r\n    _innerRadius: 0,\r\n    /**\r\n     * @name Two.Star#_outerRadius\r\n     * @private\r\n     * @see {@link Two.Star#outerRadius}\r\n     */\r\n    _outerRadius: 0,\r\n    /**\r\n     * @name Two.Star#_sides\r\n     * @private\r\n     * @see {@link Two.Star#sides}\r\n     */\r\n    _sides: 0,\r\n\r\n    constructor: Star,\r\n\r\n    /**\r\n     * @name Two.Star#_update\r\n     * @function\r\n     * @private\r\n     * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\r\n     * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\r\n     * @nota-bene Try not to call this method more than once a frame.\r\n     */\r\n    _update: function() {\r\n\r\n      if (this._flagInnerRadius || this._flagOuterRadius || this._flagSides) {\r\n\r\n        var sides = this._sides * 2;\r\n        var amount = sides + 1;\r\n        var length = this.vertices.length;\r\n\r\n        if (length > sides) {\r\n          this.vertices.splice(sides - 1, length - sides);\r\n          length = sides;\r\n        }\r\n\r\n        for (var i = 0; i < amount; i++) {\r\n\r\n          var pct = (i + 0.5) / sides;\r\n          var theta = TWO_PI * pct;\r\n          var r = (!(i % 2) ? this._innerRadius : this._outerRadius) / 2;\r\n          var x = r * cos(theta);\r\n          var y = r * sin(theta);\r\n\r\n          if (i >= length) {\r\n            this.vertices.push(new Two.Anchor(x, y));\r\n          } else {\r\n            this.vertices[i].set(x, y);\r\n          }\r\n\r\n          this.vertices[i].command = i === 0\r\n            ? Two.Commands.move : Two.Commands.line;\r\n\r\n        }\r\n\r\n      }\r\n\r\n      Path.prototype._update.call(this);\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Star#flagReset\r\n     * @function\r\n     * @private\r\n     * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\r\n     */\r\n    flagReset: function() {\r\n\r\n      this._flagInnerRadius = this._flagOuterRadius = this._flagSides = false;\r\n      Path.prototype.flagReset.call(this);\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Star#clone\r\n     * @function\r\n     * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\r\n     * @returns {Two.Star}\r\n     * @description Create a new instance of {@link Two.Star} with the same properties of the current path.\r\n     */\r\n    clone: function(parent) {\r\n\r\n      var ir = this.innerRadius;\r\n      var or = this.outerRadius;\r\n      var sides = this.sides;\r\n\r\n      var clone = new Star(0, 0, ir, or, sides);\r\n\r\n      clone.translation.copy(this.translation);\r\n      clone.rotation = this.rotation;\r\n      clone.scale = this.scale;\r\n\r\n      if (this.matrix.manual) {\r\n        clone.matrix.copy(this.matrix);\r\n      }\r\n\r\n      _.each(Two.Path.Properties, function(k) {\r\n        clone[k] = this[k];\r\n      }, this);\r\n\r\n      if (parent) {\r\n        parent.add(clone);\r\n      }\r\n\r\n      return clone;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Star#toObject\r\n     * @function\r\n     * @returns {Object}\r\n     * @description Return a JSON compatible plain object that represents the path.\r\n     */\r\n    toObject: function() {\r\n\r\n      var object = Path.prototype.toObject.call(this);\r\n\r\n      _.each(Star.Properties, function(property) {\r\n        object[property] = this[property];\r\n      }, this);\r\n\r\n      return object;\r\n\r\n    }\r\n\r\n  });\r\n\r\n  Star.MakeObservable(Star.prototype);\r\n\r\n})((typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : (undefined || self || window)).Two);\r\n\n(function(Two) {\r\n\r\n  var Path = Two.Path;\r\n  var _ = Two.Utils;\r\n\r\n  /**\r\n   * @name Two.RoundedRectangle\r\n   * @class\r\n   * @extends Two.Path\r\n   * @param {Number} [x=0] - The x position of the rounded rectangle.\r\n   * @param {Number} [y=0] - The y position of the rounded rectangle.\r\n   * @param {Number} width - The width value of the rounded rectangle.\r\n   * @param {Number} height - The width value of the rounded rectangle.\r\n   * @param {Number} radius - The radius value of the rounded rectangle.\r\n   * @param {Number} [resolution=12] - The number of vertices used to construct the rounded rectangle.\r\n   */\r\n  var RoundedRectangle = Two.RoundedRectangle = function(ox, oy, width, height, radius) {\r\n\r\n    if (_.isUndefined(radius)) {\r\n      radius = Math.floor(Math.min(width, height) / 12);\r\n    }\r\n\r\n    var amount = 10;\r\n\r\n    var points = _.map(_.range(amount), function(i) {\r\n      return new Two.Anchor(0, 0, 0, 0, 0, 0,\r\n        i === 0 ? Two.Commands.move : Two.Commands.curve);\r\n    });\r\n\r\n    // points[points.length - 1].command = Two.Commands.close;\r\n\r\n    Path.call(this, points);\r\n\r\n    this.closed = true;\r\n    this.automatic = false;\r\n\r\n    this._renderer.flagRadius = _.bind(RoundedRectangle.FlagRadius, this);\r\n\r\n    /**\r\n     * @name Two.RoundedRectangle#width\r\n     * @property {Number} - The width of the rounded rectangle.\r\n     */\r\n    this.width = width;\r\n    /**\r\n     * @name Two.RoundedRectangle#height\r\n     * @property {Number} - The height of the rounded rectangle.\r\n     */\r\n    this.height = height;\r\n    /**\r\n     * @name Two.RoundedRectangle#radius\r\n     * @property {Number} - The size of the radius of the rounded rectangle.\r\n     */\r\n    this.radius = radius;\r\n\r\n    this._update();\r\n    this.translation.set(ox, oy);\r\n\r\n  };\r\n\r\n  _.extend(RoundedRectangle, {\r\n\r\n    /**\r\n     * @name Two.RoundedRectangle.Properties\r\n     * @property {String[]} - A list of properties that are on every {@link Two.RoundedRectangle}.\r\n     */\r\n    Properties: ['width', 'height'],\r\n\r\n    /**\r\n     * @name Two.RoundedRectangle.FlagRadius\r\n     * @property {Function} - A convenience function to trigger the flag for radius changing.\r\n     */\r\n    FlagRadius: function() {\r\n      this._flagRadius = true;\r\n    },\r\n\r\n    /**\r\n     * @name Two.RoundedRectangle.MakeObservable\r\n     * @function\r\n     * @param {Object} object - The object to make observable.\r\n     * @description Convenience function to apply observable qualities of a {@link Two.RoundedRectangle} to any object. Handy if you'd like to extend the {@link Two.RoundedRectangle} class on a custom class.\r\n     */\r\n    MakeObservable: function(object) {\r\n\r\n      Path.MakeObservable(object);\r\n      _.each(RoundedRectangle.Properties, Two.Utils.defineProperty, object);\r\n\r\n      Object.defineProperty(object, 'radius', {\r\n        enumerable: true,\r\n        get: function() {\r\n          return this._radius;\r\n        },\r\n        set: function(v) {\r\n\r\n          if (this._radius instanceof Two.Vector) {\r\n            this._radius.unbind(Two.Events.change, this._renderer.flagRadius);\r\n          }\r\n\r\n          this._radius = v;\r\n\r\n          if (this._radius instanceof Two.Vector) {\r\n            this._radius.bind(Two.Events.change, this._renderer.flagRadius);\r\n          }\r\n\r\n          this._flagRadius = true;\r\n\r\n        }\r\n      });\r\n\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(RoundedRectangle.prototype, Path.prototype, {\r\n\r\n    /**\r\n     * @name Two.RoundedRectangle#_flagWidth\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.RoundedRectangle#width} needs updating.\r\n     */\r\n    _flagWidth: false,\r\n    /**\r\n     * @name Two.RoundedRectangle#_flagHeight\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.RoundedRectangle#height} needs updating.\r\n     */\r\n    _flagHeight: false,\r\n    /**\r\n     * @name Two.RoundedRectangle#_flagRadius\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.RoundedRectangle#radius} needs updating.\r\n     */\r\n    _flagRadius: false,\r\n\r\n    /**\r\n     * @name Two.RoundedRectangle#_width\r\n     * @private\r\n     * @see {@link Two.RoundedRectangle#width}\r\n     */\r\n    _width: 0,\r\n    /**\r\n     * @name Two.RoundedRectangle#_height\r\n     * @private\r\n     * @see {@link Two.RoundedRectangle#height}\r\n     */\r\n    _height: 0,\r\n    /**\r\n     * @name Two.RoundedRectangle#_radius\r\n     * @private\r\n     * @see {@link Two.RoundedRectangle#radius}\r\n     */\r\n    _radius: 0,\r\n\r\n    constructor: RoundedRectangle,\r\n\r\n    /**\r\n     * @name Two.RoundedRectangle#_update\r\n     * @function\r\n     * @private\r\n     * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\r\n     * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\r\n     * @nota-bene Try not to call this method more than once a frame.\r\n     */\r\n    _update: function() {\r\n\r\n      if (this._flagWidth || this._flagHeight || this._flagRadius) {\r\n\r\n        var width = this._width;\r\n        var height = this._height;\r\n\r\n        var rx, ry;\r\n\r\n        if (this._radius instanceof Two.Vector) {\r\n          rx = this._radius.x;\r\n          ry = this._radius.y;\r\n        } else {\r\n          rx = this._radius;\r\n          ry = this._radius;\r\n        }\r\n\r\n        var v;\r\n        var w = width / 2;\r\n        var h = height / 2;\r\n\r\n        v = this.vertices[0];\r\n        v.x = - (w - rx);\r\n        v.y = - h;\r\n\r\n        // Upper Right Corner\r\n\r\n        v = this.vertices[1];\r\n        v.x = (w - rx);\r\n        v.y = - h;\r\n        v.controls.left.clear();\r\n        v.controls.right.x = rx;\r\n        v.controls.right.y = 0;\r\n\r\n        v = this.vertices[2];\r\n        v.x = w;\r\n        v.y = - (h - ry);\r\n        v.controls.right.clear();\r\n        v.controls.left.clear();\r\n\r\n        // Bottom Right Corner\r\n\r\n        v = this.vertices[3];\r\n        v.x = w;\r\n        v.y = (h - ry);\r\n        v.controls.left.clear();\r\n        v.controls.right.x = 0;\r\n        v.controls.right.y = ry;\r\n\r\n        v = this.vertices[4];\r\n        v.x = (w - rx);\r\n        v.y = h;\r\n        v.controls.right.clear();\r\n        v.controls.left.clear();\r\n\r\n        // Bottom Left Corner\r\n\r\n        v = this.vertices[5];\r\n        v.x = - (w - rx);\r\n        v.y = h;\r\n        v.controls.left.clear();\r\n        v.controls.right.x = - rx;\r\n        v.controls.right.y = 0;\r\n\r\n        v = this.vertices[6];\r\n        v.x = - w;\r\n        v.y = (h - ry);\r\n        v.controls.left.clear();\r\n        v.controls.right.clear();\r\n\r\n        // Upper Left Corner\r\n\r\n        v = this.vertices[7];\r\n        v.x = - w;\r\n        v.y = - (h - ry);\r\n        v.controls.left.clear();\r\n        v.controls.right.x = 0;\r\n        v.controls.right.y = - ry;\r\n\r\n        v = this.vertices[8];\r\n        v.x = - (w - rx);\r\n        v.y = - h;\r\n        v.controls.left.clear();\r\n        v.controls.right.clear();\r\n\r\n        v = this.vertices[9];\r\n        v.copy(this.vertices[8]);\r\n\r\n      }\r\n\r\n      Path.prototype._update.call(this);\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.RoundedRectangle#flagReset\r\n     * @function\r\n     * @private\r\n     * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\r\n     */\r\n    flagReset: function() {\r\n\r\n      this._flagWidth = this._flagHeight = this._flagRadius = false;\r\n      Path.prototype.flagReset.call(this);\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.RoundedRectangle#clone\r\n     * @function\r\n     * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\r\n     * @returns {Two.RoundedRectangle}\r\n     * @description Create a new instance of {@link Two.RoundedRectangle} with the same properties of the current path.\r\n     */\r\n    clone: function(parent) {\r\n\r\n      var width = this.width;\r\n      var height = this.height;\r\n      var radius = this.radius;\r\n\r\n      var clone = new RoundedRectangle(0, 0, width, height, radius);\r\n\r\n      clone.translation.copy(this.translation);\r\n      clone.rotation = this.rotation;\r\n      clone.scale = this.scale;\r\n\r\n      if (this.matrix.manual) {\r\n        clone.matrix.copy(this.matrix);\r\n      }\r\n\r\n      _.each(Two.Path.Properties, function(k) {\r\n        clone[k] = this[k];\r\n      }, this);\r\n\r\n      if (parent) {\r\n        parent.add(clone);\r\n      }\r\n\r\n      return clone;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.RoundedRectangle#toObject\r\n     * @function\r\n     * @returns {Object}\r\n     * @description Return a JSON compatible plain object that represents the path.\r\n     */\r\n    toObject: function() {\r\n\r\n      var object = Path.prototype.toObject.call(this);\r\n\r\n      _.each(RoundedRectangle.Properties, function(property) {\r\n        object[property] = this[property];\r\n      }, this);\r\n\r\n      object.radius = _.isNumber(this.radius)\r\n        ? this.radius : this.radius.toObject();\r\n\r\n      return object;\r\n\r\n    }\r\n\r\n  });\r\n\r\n  RoundedRectangle.MakeObservable(RoundedRectangle.prototype);\r\n\r\n})((typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : (undefined || self || window)).Two);\r\n\n(function(Two) {\r\n\r\n  var root = Two.root;\r\n  var getComputedMatrix = Two.Utils.getComputedMatrix;\r\n  var _ = Two.Utils;\r\n\r\n  // Used with getBoundingClientRect was calculated through the ctx.getTextWidth\r\n  // var canvas = getCanvas();\r\n  // var ctx = canvas.getContext('2d');\r\n\r\n  /**\r\n   * @name Two.Text\r\n   * @class\r\n   * @extends Two.Shape\r\n   * @param {String} message - The String to be rendered to the scene.\r\n   * @param {Number} [x=0] - The position in the x direction for the object.\r\n   * @param {Number} [y=0] - The position in the y direction for the object.\r\n   * @param {Object} [styles] - An object where styles are applied. Attribute must exist in Two.Text.Properties.\r\n   * @description This is a primitive class for creating drawable text that can be added to the scenegraph.\r\n   */\r\n  var Text = Two.Text = function(message, x, y, styles) {\r\n\r\n    Two.Shape.call(this);\r\n\r\n    this._renderer.type = 'text';\r\n    this._renderer.flagFill = _.bind(Two.Text.FlagFill, this);\r\n    this._renderer.flagStroke = _.bind(Two.Text.FlagStroke, this);\r\n\r\n    this.value = message;\r\n\r\n    if (_.isNumber(x)) {\r\n        this.translation.x = x;\r\n    }\r\n    if (_.isNumber(y)) {\r\n        this.translation.y = y;\r\n    }\r\n\r\n    /**\r\n     * @name Two.Text#dashes\r\n     * @property {Number[]} - Array of numbers. Odd indices represent dash length. Even indices represent dash space.\r\n     * @description A list of numbers that represent the repeated dash length and dash space applied to the stroke of the text.\r\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray} for more information on the SVG stroke-dasharray attribute.\r\n     */\r\n    this.dashes = [];\r\n\r\n    /**\r\n     * @name Two.Text#dashes#offset\r\n     * @property {Number} - A number in pixels to offset {@link Two.Text#dashes} display.\r\n     */\r\n    this.dashes.offset = 0;\r\n\r\n    if (!_.isObject(styles)) {\r\n      return this;\r\n    }\r\n\r\n    _.each(Two.Text.Properties, function(property) {\r\n\r\n      if (property in styles) {\r\n        this[property] = styles[property];\r\n      }\r\n\r\n    }, this);\r\n\r\n  };\r\n\r\n  _.extend(Two.Text, {\r\n\r\n    /**\r\n     * @name Two.Text.Ratio\r\n     * @property {Number} - Approximate aspect ratio of a typeface's character width to height.\r\n     */\r\n    Ratio: 0.6,\r\n\r\n    /**\r\n     * @name Two.Text.Properties\r\n     * @property {String[]} - A list of properties that are on every {@link Two.Text}.\r\n     */\r\n    Properties: [\r\n      'value', 'family', 'size', 'leading', 'alignment', 'linewidth', 'style',\r\n      'className', 'weight', 'decoration', 'baseline', 'opacity', 'visible',\r\n      'fill', 'stroke',\r\n    ],\r\n\r\n    /**\r\n     * @name Two.Text.FlagFill\r\n     * @function\r\n     * @description Cached method to let renderers know the fill property have been updated on a {@link Two.Text}.\r\n     */\r\n    FlagFill: function() {\r\n      this._flagFill = true;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Text.FlagStroke\r\n     * @function\r\n     * @description Cached method to let renderers know the stroke property have been updated on a {@link Two.Text}.\r\n     */\r\n    FlagStroke: function() {\r\n      this._flagStroke = true;\r\n    },\r\n\r\n    MakeObservable: function(object) {\r\n\r\n      Two.Shape.MakeObservable(object);\r\n\r\n      _.each(Two.Text.Properties.slice(0, 13), Two.Utils.defineProperty, object);\r\n\r\n      Object.defineProperty(object, 'fill', {\r\n        enumerable: true,\r\n        get: function() {\r\n          return this._fill;\r\n        },\r\n        set: function(f) {\r\n\r\n          if (this._fill instanceof Two.Gradient\r\n            || this._fill instanceof Two.LinearGradient\r\n            || this._fill instanceof Two.RadialGradient\r\n            || this._fill instanceof Two.Texture) {\r\n            this._fill.unbind(Two.Events.change, this._renderer.flagFill);\r\n          }\r\n\r\n          this._fill = f;\r\n          this._flagFill = true;\r\n\r\n          if (this._fill instanceof Two.Gradient\r\n            || this._fill instanceof Two.LinearGradient\r\n            || this._fill instanceof Two.RadialGradient\r\n            || this._fill instanceof Two.Texture) {\r\n            this._fill.bind(Two.Events.change, this._renderer.flagFill);\r\n          }\r\n\r\n        }\r\n      });\r\n\r\n      Object.defineProperty(object, 'stroke', {\r\n        enumerable: true,\r\n        get: function() {\r\n          return this._stroke;\r\n        },\r\n        set: function(f) {\r\n\r\n          if (this._stroke instanceof Two.Gradient\r\n            || this._stroke instanceof Two.LinearGradient\r\n            || this._stroke instanceof Two.RadialGradient\r\n            || this._stroke instanceof Two.Texture) {\r\n            this._stroke.unbind(Two.Events.change, this._renderer.flagStroke);\r\n          }\r\n\r\n          this._stroke = f;\r\n          this._flagStroke = true;\r\n\r\n          if (this._stroke instanceof Two.Gradient\r\n            || this._stroke instanceof Two.LinearGradient\r\n            || this._stroke instanceof Two.RadialGradient\r\n            || this._stroke instanceof Two.Texture) {\r\n            this._stroke.bind(Two.Events.change, this._renderer.flagStroke);\r\n          }\r\n\r\n        }\r\n      });\r\n\r\n      Object.defineProperty(object, 'clip', {\r\n        enumerable: true,\r\n        get: function() {\r\n          return this._clip;\r\n        },\r\n        set: function(v) {\r\n          this._clip = v;\r\n          this._flagClip = true;\r\n        }\r\n      });\r\n\r\n      Object.defineProperty(object, 'dashes', {\r\n        enumerable: true,\r\n        get: function() {\r\n          return this._dashes;\r\n        },\r\n        set: function(v) {\r\n          if (!_.isNumber(v.offset)) {\r\n            v.offset = this._dashes.offset || 0;\r\n          }\r\n          this._dashes = v;\r\n        }\r\n      });\r\n\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(Two.Text.prototype, Two.Shape.prototype, {\r\n\r\n    // Flags\r\n    // http://en.wikipedia.org/wiki/Flag\r\n\r\n    /**\r\n     * @name Two.Text#_flagValue\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Text#value} need updating.\r\n     */\r\n    _flagValue: true,\r\n\r\n    /**\r\n     * @name Two.Text#_flagFamily\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Text#family} need updating.\r\n     */\r\n    _flagFamily: true,\r\n\r\n    /**\r\n     * @name Two.Text#_flagSize\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Text#size} need updating.\r\n     */\r\n    _flagSize: true,\r\n\r\n    /**\r\n     * @name Two.Text#_flagLeading\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Text#leading} need updating.\r\n     */\r\n    _flagLeading: true,\r\n\r\n    /**\r\n     * @name Two.Text#_flagAlignment\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Text#alignment} need updating.\r\n     */\r\n    _flagAlignment: true,\r\n\r\n    /**\r\n     * @name Two.Text#_flagBaseline\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Text#baseline} need updating.\r\n     */\r\n    _flagBaseline: true,\r\n\r\n    /**\r\n     * @name Two.Text#_flagStyle\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Text#style} need updating.\r\n     */\r\n    _flagStyle: true,\r\n\r\n    /**\r\n     * @name Two.Text#_flagWeight\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Text#weight} need updating.\r\n     */\r\n    _flagWeight: true,\r\n\r\n    /**\r\n     * @name Two.Text#_flagDecoration\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Text#decoration} need updating.\r\n     */\r\n    _flagDecoration: true,\r\n\r\n    /**\r\n     * @name Two.Text#_flagFill\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Text#fill} need updating.\r\n     */\r\n    _flagFill: true,\r\n\r\n    /**\r\n     * @name Two.Text#_flagStroke\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Text#stroke} need updating.\r\n     */\r\n    _flagStroke: true,\r\n\r\n    /**\r\n     * @name Two.Text#_flagLinewidth\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Text#linewidth} need updating.\r\n     */\r\n    _flagLinewidth: true,\r\n\r\n    /**\r\n     * @name Two.Text#_flagOpacity\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Text#opacity} need updating.\r\n     */\r\n    _flagOpacity: true,\r\n\r\n    /**\r\n     * @name Two.Text#_flagClassName\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Text#className} need updating.\r\n     */\r\n    _flagClassName: true,\r\n\r\n    /**\r\n     * @name Two.Text#_flagVisible\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Text#visible} need updating.\r\n     */\r\n    _flagVisible: true,\r\n\r\n    /**\r\n     * @name Two.Text#_flagClip\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Text#clip} need updating.\r\n     */\r\n    _flagClip: false,\r\n\r\n    // Underlying Properties\r\n\r\n    /**\r\n     * @name Two.Text#value\r\n     * @property {String} - The characters to be rendered to the the screen. Referred to in the documentation sometimes as the `message`.\r\n     */\r\n    _value: '',\r\n\r\n    /**\r\n     * @name Two.Text#family\r\n     * @property {String} - The font family Two.js should attempt to regsiter for rendering. The default value is `'sans-serif'`. Comma separated font names can be supplied as a \"stack\", similar to the CSS implementation of `font-family`.\r\n     */\r\n    _family: 'sans-serif',\r\n\r\n    /**\r\n     * @name Two.Text#size\r\n     * @property {Number} - The font size in Two.js point space. Defaults to `13`.\r\n     */\r\n    _size: 13,\r\n\r\n    /**\r\n     * @name Two.Text#leading\r\n     * @property {Number} - The height between lines measured from base to base in Two.js point space. Defaults to `17`.\r\n     */\r\n    _leading: 17,\r\n\r\n    /**\r\n     * @name Two.Text#alignment\r\n     * @property {String} - Alignment of text in relation to {@link Two.Text#translation}'s coordinates. Possible values include `'left'`, `'center'`, `'right'`. Defaults to `'center'`.\r\n     */\r\n    _alignment: 'center',\r\n\r\n    /**\r\n     * @name Two.Text#baseline\r\n     * @property {String} - The vertical aligment of the text in relation to {@link Two.Text#translation}'s coordinates. Possible values include `'top'`, `'middle'`, `'bottom'`, and `'baseline'`. Defaults to `'baseline'`.\r\n     */\r\n    _baseline: 'middle',\r\n\r\n    /**\r\n     * @name Two.Text#style\r\n     * @property {String} - The font's style. Possible values include '`normal`', `'italic'`. Defaults to `'normal'`.\r\n     */\r\n    _style: 'normal',\r\n\r\n    /**\r\n     * @name Two.Text#weight\r\n     * @property {Number} - A number at intervals of 100 to describe the font's weight. This compatibility varies with the typeface's variant weights. Larger values are bolder. Smaller values are thinner. Defaults to `'500'`.\r\n     */\r\n    _weight: 500,\r\n\r\n    /**\r\n     * @name Two.Text#decoration\r\n     * @property {String} - String to delineate whether text should be decorated with for instance an `'underline'`. Defaults to `'none'`.\r\n     */\r\n    _decoration: 'none',\r\n\r\n    /**\r\n     * @name Two.Text#fill\r\n     * @property {(CssColor|Two.Gradient|Two.Texture)} - The value of what the text object should be filled in with.\r\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value} for more information on CSS Colors.\r\n     */\r\n    _fill: '#000',\r\n\r\n    /**\r\n     * @name Two.Text#stroke\r\n     * @property {(CssColor|Two.Gradient|Two.Texture)} - The value of what the text object should be filled in with.\r\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value} for more information on CSS Colors.\r\n     */\r\n    _stroke: 'transparent',\r\n\r\n    /**\r\n     * @name Two.Text#linewidth\r\n     * @property {Number} - The thickness in pixels of the stroke.\r\n     */\r\n    _linewidth: 1,\r\n\r\n    /**\r\n     * @name Two.Text#opacity\r\n     * @property {Number} - The opaqueness of the text object.\r\n     * @nota-bene Can be used in conjunction with CSS Colors that have an alpha value.\r\n     */\r\n    _opacity: 1,\r\n\r\n    /**\r\n     * @name Two.Text#className\r\n     * @property {String} - A class to be applied to the element to be compatible with CSS styling. Only available for the {@link Two.SvgRenderer}.\r\n     */\r\n    _className: '',\r\n\r\n    /**\r\n     * @name Two.Text#visible\r\n     * @property {Boolean} - Display the text object or not.\r\n     * @nota-bene For {@link Two.CanvasRenderer} and {@link Two.WebGLRenderer} when set to false all updating is disabled improving performance dramatically with many objects in the scene.\r\n     */\r\n    _visible: true,\r\n\r\n    /**\r\n     * @name Two.Text#clip\r\n     * @property {Two.Shape} - Object to define clipping area.\r\n     * @nota-bene This property is currently not working becuase of SVG spec issues found here {@link https://code.google.com/p/chromium/issues/detail?id=370951}.\r\n     */\r\n    _clip: false,\r\n\r\n    /**\r\n     * @name Two.Text#_dashes\r\n     * @private\r\n     * @see {@link Two.Text#dashes}\r\n     */\r\n    _dashes: [],\r\n\r\n    constructor: Two.Text,\r\n\r\n    /**\r\n     * @name Two.Text#remove\r\n     * @function\r\n     * @description Remove self from the scene / parent.\r\n     */\r\n    remove: function() {\r\n\r\n      if (!this.parent) {\r\n        return this;\r\n      }\r\n\r\n      this.parent.remove(this);\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Text#clone\r\n     * @function\r\n     * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\r\n     * @returns {Two.Text}\r\n     * @description Create a new instance of {@link Two.Text} with the same properties of the current text object.\r\n     */\r\n    clone: function(parent) {\r\n\r\n      var clone = new Two.Text(this.value);\r\n      clone.translation.copy(this.translation);\r\n      clone.rotation = this.rotation;\r\n      clone.scale = this.scale;\r\n\r\n      _.each(Two.Text.Properties, function(property) {\r\n        clone[property] = this[property];\r\n      }, this);\r\n\r\n      if (this.matrix.manual) {\r\n        clone.matrix.copy(this.matrix);\r\n      }\r\n\r\n      if (parent) {\r\n        parent.add(clone);\r\n      }\r\n\r\n      return clone._update();\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Text#toObject\r\n     * @function\r\n     * @returns {Object}\r\n     * @description Return a JSON compatible plain object that represents the text object.\r\n     */\r\n    toObject: function() {\r\n\r\n      var result = {\r\n        translation: this.translation.toObject(),\r\n        rotation: this.rotation,\r\n        scale: this.scale\r\n      };\r\n\r\n      if (this.matrix.manual) {\r\n        result.matrix = this.matrix.toObject();\r\n      }\r\n\r\n      _.each(Two.Text.Properties, function(property) {\r\n        result[property] = this[property];\r\n      }, this);\r\n\r\n      return result;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Text#noFill\r\n     * @function\r\n     * @description Short hand method to set fill to `transparent`.\r\n     */\r\n    noFill: function() {\r\n      this.fill = 'transparent';\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Text#noStroke\r\n     * @function\r\n     * @description Short hand method to set stroke to `transparent`.\r\n     */\r\n    noStroke: function() {\r\n      this.stroke = undefined;\r\n      this.linewidth = undefined;\r\n      return this;\r\n    },\r\n\r\n    // A shim to not break `getBoundingClientRect` calls.\r\n    // TODO: Implement a way to calculate proper bounding\r\n    // boxes of `Two.Text`.\r\n\r\n    /**\r\n     * @name Two.Text#getBoundingClientRect\r\n     * @function\r\n     * @param {Boolean} [shallow=false] - Describes whether to calculate off local matrix or world matrix.\r\n     * @returns {Object} - Returns object with top, left, right, bottom, width, height attributes.\r\n     * @description Return an object with top, left, right, bottom, width, and height parameters of the text object.\r\n     */\r\n    getBoundingClientRect: function(shallow) {\r\n\r\n      var matrix, border, l, x, y, i, v;\r\n      var left, right, top, bottom;\r\n\r\n      // TODO: Update this to not __always__ update. Just when it needs to.\r\n      this._update(true);\r\n\r\n      matrix = shallow ? this._matrix : getComputedMatrix(this);\r\n\r\n      var height = this.leading;\r\n      var width = this.value.length * this.size * Text.Ratio;\r\n\r\n      switch (this.alignment) {\r\n        case 'left':\r\n          left = 0;\r\n          right = width;\r\n          break;\r\n        case 'right':\r\n          left = - width;\r\n          right = 0;\r\n          break;\r\n        default:\r\n          left = - width / 2;\r\n          right = width / 2;\r\n      }\r\n\r\n      switch (this.baseline) {\r\n        case 'top':\r\n          top = 0;\r\n          bottom = height;\r\n          break;\r\n        case 'bottom':\r\n          top = - height;\r\n          bottom = 0;\r\n          break;\r\n        default:\r\n          top = - height / 2;\r\n          bottom = height / 2;\r\n      }\r\n\r\n      v = matrix.multiply(left, top, 1);\r\n\r\n      top = v.y;\r\n      left = v.x;\r\n\r\n      v = matrix.multiply(right, bottom, 1);\r\n\r\n      right = v.x;\r\n      bottom = v.y;\r\n\r\n      return {\r\n        top: top,\r\n        left: left,\r\n        right: right,\r\n        bottom: bottom,\r\n        width: right - left,\r\n        height: bottom - top\r\n      };\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Text#flagReset\r\n     * @function\r\n     * @private\r\n     * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\r\n     */\r\n    flagReset: function() {\r\n\r\n      this._flagValue = this._flagFamily = this._flagSize =\r\n        this._flagLeading = this._flagAlignment = this._flagFill =\r\n        this._flagStroke = this._flagLinewidth = this._flagOpacity =\r\n        this._flagVisible = this._flagClip = this._flagDecoration =\r\n        this._flagClassName = this._flagBaseline = false;\r\n\r\n      Two.Shape.prototype.flagReset.call(this);\r\n\r\n      return this;\r\n\r\n    }\r\n\r\n  });\r\n\r\n  Two.Text.MakeObservable(Two.Text.prototype);\r\n\r\n  function getCanvas() {\r\n    if (root.document) {\r\n      return root.document.createElement('canvas');\r\n    } else {\r\n      console.warn('Two.js: Unable to create canvas for Two.Text measurements.');\r\n      return {\r\n        getContext: _.identity\r\n      };\r\n    }\r\n  }\r\n\r\n})((typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : (undefined || self || window)).Two);\r\n\n(function(Two) {\r\n\r\n  var _ = Two.Utils;\r\n\r\n  /**\r\n   * @name Two.Stop\r\n   * @class\r\n   * @param {Number} [offset] - The offset percentage of the stop represented as a zero-to-one value. Default value flip flops from zero-to-one as new stops are created.\r\n   * @param {CssColor} [color] - The color of the stop. Default value flip flops from white to black as new stops are created.\r\n   * @param {Number} [opacity] - The opacity value. Default value is 1, cannot be lower than 0.\r\n   * @nota-bene Used specifically in conjunction with {@link Two.Gradient}s to control color graduation.\r\n   */\r\n  var Stop = Two.Stop = function(offset, color, opacity) {\r\n\r\n    /**\r\n     * @name Two.Stop#_renderer\r\n     * @property {Object}\r\n     * @private\r\n     * @description A private object to store relevant renderer specific variables.\r\n     * @nota-bene With the {@link Two.SvgRenderer} you can access the underlying SVG element created via `stop._renderer.elem`.\r\n     */\r\n    this._renderer = {};\r\n    this._renderer.type = 'stop';\r\n\r\n    /**\r\n     * @name Two.Stop#offset\r\n     * @property {Number} - The offset percentage of the stop represented as a zero-to-one value.\r\n     */\r\n    this.offset = _.isNumber(offset) ? offset\r\n      : Stop.Index <= 0 ? 0 : 1;\r\n\r\n    /**\r\n     * @name Two.Stop#opacity\r\n     * @property {Number} - The alpha percentage of the stop represented as a zero-to-one value.\r\n     */\r\n    this.opacity = _.isNumber(opacity) ? opacity : 1;\r\n\r\n    /**\r\n     * @name Two.Stop#color\r\n     * @property {CssColor} - The color of the stop.\r\n     */\r\n    this.color = _.isString(color) ? color\r\n      : Stop.Index <= 0 ? '#fff' : '#000';\r\n\r\n    Stop.Index = (Stop.Index + 1) % 2;\r\n\r\n  };\r\n\r\n  _.extend(Stop, {\r\n\r\n    /**\r\n     * @name Two.Stop.Index\r\n     * @property {Number} - The current index being referenced for calculating a stop's default offset value.\r\n     */\r\n    Index: 0,\r\n\r\n    /**\r\n     * @name Two.Stop.Properties\r\n     * @property {String[]} - A list of properties that are on every {@link Two.Stop}.\r\n     */\r\n    Properties: [\r\n      'offset',\r\n      'opacity',\r\n      'color'\r\n    ],\r\n\r\n    /**\r\n     * @name Two.Stop.MakeObservable\r\n     * @function\r\n     * @param {Object} object - The object to make observable.\r\n     * @description Convenience function to apply observable qualities of a {@link Two.Stop} to any object. Handy if you'd like to extend the {@link Two.Stop} class on a custom class.\r\n     */\r\n    MakeObservable: function(object) {\r\n\r\n      _.each(Stop.Properties, function(property) {\r\n\r\n        var object = this;\r\n        var secret = '_' + property;\r\n        var flag = '_flag' + property.charAt(0).toUpperCase() + property.slice(1);\r\n\r\n        Object.defineProperty(object, property, {\r\n          enumerable: true,\r\n          get: function() {\r\n            return this[secret];\r\n          },\r\n          set: function(v) {\r\n            this[secret] = v;\r\n            this[flag] = true;\r\n            if (this.parent) {\r\n              this.parent._flagStops = true;\r\n            }\r\n          }\r\n        });\r\n\r\n      }, object);\r\n\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(Stop.prototype, Two.Utils.Events, {\r\n\r\n    constructor: Stop,\r\n\r\n    /**\r\n     * @name Two.Stop#clone\r\n     * @function\r\n     * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\r\n     * @returns {Two.Stop}\r\n     * @description Create a new instance of {@link Two.Stop} with the same properties of the current path.\r\n     */\r\n    clone: function() {\r\n\r\n      var clone = new Stop();\r\n\r\n      _.each(Stop.Properties, function(property) {\r\n        clone[property] = this[property];\r\n      }, this);\r\n\r\n      return clone;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Stop#toObject\r\n     * @function\r\n     * @returns {Object}\r\n     * @description Return a JSON compatible plain object that represents the path.\r\n     */\r\n    toObject: function() {\r\n\r\n      var result = {};\r\n\r\n      _.each(Stop.Properties, function(k) {\r\n        result[k] = this[k];\r\n      }, this);\r\n\r\n      return result;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Stop#flagReset\r\n     * @function\r\n     * @private\r\n     * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\r\n     */\r\n    flagReset: function() {\r\n\r\n      this._flagOffset = this._flagColor = this._flagOpacity = false;\r\n\r\n      return this;\r\n\r\n    }\r\n\r\n  });\r\n\r\n  Stop.MakeObservable(Stop.prototype);\r\n  Stop.prototype.constructor = Stop;\r\n\r\n  /**\r\n   * @name Two.Gradient\r\n   * @class\r\n   * @param {Two.Stop[]} [stops] - A list of {@link Two.Stop}s that contain the gradient fill pattern for the gradient.\r\n   * @description This is the base class for constructing different types of gradients with Two.js. The two common gradients are {@link Two.LinearGradient} and {@link Two.RadialGradient}.\r\n   */\r\n  var Gradient = Two.Gradient = function(stops) {\r\n\r\n    /**\r\n     * @name Two.Gradient#_renderer\r\n     * @property {Object}\r\n     * @private\r\n     * @description A private object to store relevant renderer specific variables.\r\n     * @nota-bene With the {@link Two.SvgRenderer} you can access the underlying SVG element created via `gradient._renderer.elem`.\r\n     */\r\n    this._renderer = {};\r\n    this._renderer.type = 'gradient';\r\n\r\n    /**\r\n     * @name Two.Gradient#id\r\n     * @property {String} - Session specific unique identifier.\r\n     * @nota-bene In the {@link Two.SvgRenderer} change this to change the underlying SVG element's id too.\r\n     */\r\n    this.id = Two.Identifier + Two.uniqueId();\r\n    this.classList = [];\r\n\r\n    this._renderer.flagStops = _.bind(Gradient.FlagStops, this);\r\n    this._renderer.bindStops = _.bind(Gradient.BindStops, this);\r\n    this._renderer.unbindStops = _.bind(Gradient.UnbindStops, this);\r\n\r\n    /**\r\n     * @name Two.Gradient#spread\r\n     * @property {String} - Indicates what happens if the gradient starts or ends inside the bounds of the target rectangle. Possible values are `'pad'`, `'reflect'`, and `'repeat'`.\r\n     * @see {@link https://www.w3.org/TR/SVG11/pservers.html#LinearGradientElementSpreadMethodAttribute} for more information\r\n     */\r\n    this.spread = 'pad';\r\n\r\n    /**\r\n     * @name Two.Gradient#stops\r\n     * @property {Two.Stop[]} - An ordered list of {@link Two.Stop}s for rendering the gradient.\r\n     */\r\n    this.stops = stops;\r\n\r\n  };\r\n\r\n  _.extend(Gradient, {\r\n\r\n    /**\r\n     * @name Two.Gradient#Stop\r\n     * @see {@link Two.Stop}\r\n     */\r\n    Stop: Stop,\r\n\r\n    /**\r\n     * @name Two.Gradient.Properties\r\n     * @property {String[]} - A list of properties that are on every {@link Two.Gradient}.\r\n     */\r\n    Properties: [\r\n      'spread'\r\n    ],\r\n\r\n    /**\r\n     * @name Two.Gradient.MakeObservable\r\n     * @function\r\n     * @param {Object} object - The object to make observable.\r\n     * @description Convenience function to apply observable qualities of a {@link Two.Gradient} to any object. Handy if you'd like to extend the {@link Two.Gradient} class on a custom class.\r\n     */\r\n    MakeObservable: function(object) {\r\n\r\n      _.each(Gradient.Properties, Two.Utils.defineProperty, object);\r\n\r\n      Object.defineProperty(object, 'stops', {\r\n\r\n        enumerable: true,\r\n\r\n        get: function() {\r\n          return this._stops;\r\n        },\r\n\r\n        set: function(stops) {\r\n\r\n          var updateStops = this._renderer.flagStops;\r\n          var bindStops = this._renderer.bindStops;\r\n          var unbindStops = this._renderer.unbindStops;\r\n\r\n          // Remove previous listeners\r\n          if (this._stops) {\r\n            this._stops\r\n              .unbind(Two.Events.insert, bindStops)\r\n              .unbind(Two.Events.remove, unbindStops);\r\n          }\r\n\r\n          // Create new Collection with copy of Stops\r\n          this._stops = new Two.Utils.Collection((stops || []).slice(0));\r\n\r\n          // Listen for Collection changes and bind / unbind\r\n          this._stops\r\n            .bind(Two.Events.insert, bindStops)\r\n            .bind(Two.Events.remove, unbindStops);\r\n\r\n          // Bind Initial Stops\r\n          bindStops(this._stops);\r\n\r\n        }\r\n\r\n      });\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Gradient.FlagStops\r\n     * @function\r\n     * @description Cached method to let renderers know stops have been updated on a {@link Two.Gradient}.\r\n     */\r\n    FlagStops: function() {\r\n      this._flagStops = true;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Gradient.BindVertices\r\n     * @function\r\n     * @description Cached method to let {@link Two.Gradient} know vertices have been added to the instance.\r\n     */\r\n    BindStops: function(items) {\r\n\r\n      // This function is called a lot\r\n      // when importing a large SVG\r\n      var i = items.length;\r\n      while(i--) {\r\n        items[i].bind(Two.Events.change, this._renderer.flagStops);\r\n        items[i].parent = this;\r\n      }\r\n\r\n      this._renderer.flagStops();\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Gradient.UnbindStops\r\n     * @function\r\n     * @description Cached method to let {@link Two.Gradient} know vertices have been removed from the instance.\r\n     */\r\n    UnbindStops: function(items) {\r\n\r\n      var i = items.length;\r\n      while(i--) {\r\n        items[i].unbind(Two.Events.change, this._renderer.flagStops);\r\n        delete items[i].parent;\r\n      }\r\n\r\n      this._renderer.flagStops();\r\n\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(Gradient.prototype, Two.Utils.Events, {\r\n\r\n    /**\r\n     * @name Two.Gradient#_flagStops\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Gradient#stops} need updating.\r\n     */\r\n    _flagStops: false,\r\n    /**\r\n     * @name Two.Gradient#_flagSpread\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Gradient#spread} need updating.\r\n     */\r\n    _flagSpread: false,\r\n\r\n    /**\r\n     * @name Two.Gradient#clone\r\n     * @function\r\n     * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\r\n     * @returns {Two.Gradient}\r\n     * @description Create a new instance of {@link Two.Gradient} with the same properties of the current path.\r\n     */\r\n    clone: function(parent) {\r\n\r\n      var stops = _.map(this.stops, function(s) {\r\n        return s.clone();\r\n      });\r\n\r\n      var clone = new Gradient(stops);\r\n\r\n      _.each(Two.Gradient.Properties, function(k) {\r\n        clone[k] = this[k];\r\n      }, this);\r\n\r\n      if (parent) {\r\n        parent.add(clone);\r\n      }\r\n\r\n      return clone;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Gradient#toObject\r\n     * @function\r\n     * @returns {Object}\r\n     * @description Return a JSON compatible plain object that represents the path.\r\n     */\r\n    toObject: function() {\r\n\r\n      var result = {\r\n        stops: _.map(this.stops, function(s) {\r\n          return s.toObject();\r\n        })\r\n      };\r\n\r\n      _.each(Gradient.Properties, function(k) {\r\n        result[k] = this[k];\r\n      }, this);\r\n\r\n      return result;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Gradient#_update\r\n     * @function\r\n     * @private\r\n     * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\r\n     * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\r\n     * @nota-bene Try not to call this method more than once a frame.\r\n     */\r\n    _update: function() {\r\n\r\n      if (this._flagSpread || this._flagStops) {\r\n        this.trigger(Two.Events.change);\r\n      }\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Gradient#flagReset\r\n     * @function\r\n     * @private\r\n     * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\r\n     */\r\n    flagReset: function() {\r\n\r\n      this._flagSpread = this._flagStops = false;\r\n\r\n      return this;\r\n\r\n    }\r\n\r\n  });\r\n\r\n  Gradient.MakeObservable(Gradient.prototype);\r\n\r\n})((typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : (undefined || self || window)).Two);\r\n\n(function(Two) {\r\n\r\n  var _ = Two.Utils;\r\n\r\n  /**\r\n   * @name Two.LinearGradient\r\n   * @class\r\n   * @extends Two.Gradient\r\n   * @param {Number} [x1=0] - The x position of the first end point of the linear gradient.\r\n   * @param {Number} [y1=0] - The y position of the first end point of the linear gradient.\r\n   * @param {Number} [x2=0] - The x position of the second end point of the linear gradient.\r\n   * @param {Number} [y2=0] - The y position of the second end point of the linear gradient.\r\n   * @param {Two.Stop[]} [stops] - A list of {@link Two.Stop}s that contain the gradient fill pattern for the gradient.\r\n   * @nota-bene The linear gradient lives within the space of the parent object's matrix space.\r\n   */\r\n  var LinearGradient = Two.LinearGradient = function(x1, y1, x2, y2, stops) {\r\n\r\n    Two.Gradient.call(this, stops);\r\n\r\n    this._renderer.type = 'linear-gradient';\r\n\r\n    var flagEndPoints = _.bind(LinearGradient.FlagEndPoints, this);\r\n\r\n    /**\r\n     * @name Two.LinearGradient#left\r\n     * @property {Two.Vector} - The x and y value for where the first end point is placed on the canvas.\r\n     */\r\n    this.left = new Two.Vector().bind(Two.Events.change, flagEndPoints);\r\n    /**\r\n     * @name Two.LinearGradient#right\r\n     * @property {Two.Vector} - The x and y value for where the second end point is placed on the canvas.\r\n     */\r\n    this.right = new Two.Vector().bind(Two.Events.change, flagEndPoints);\r\n\r\n    if (_.isNumber(x1)) {\r\n      this.left.x = x1;\r\n    }\r\n    if (_.isNumber(y1)) {\r\n      this.left.y = y1;\r\n    }\r\n    if (_.isNumber(x2)) {\r\n      this.right.x = x2;\r\n    }\r\n    if (_.isNumber(y2)) {\r\n      this.right.y = y2;\r\n    }\r\n\r\n  };\r\n\r\n  _.extend(LinearGradient, {\r\n\r\n    /**\r\n     * @name Two.LinearGradient#Stop\r\n     * @see {@link Two.Stop}\r\n     */\r\n    Stop: Two.Gradient.Stop,\r\n\r\n    /**\r\n     * @name Two.LinearGradient.MakeObservable\r\n     * @function\r\n     * @param {Object} object - The object to make observable.\r\n     * @description Convenience function to apply observable qualities of a {@link Two.LinearGradient} to any object. Handy if you'd like to extend the {@link Two.LinearGradient} class on a custom class.\r\n     */\r\n    MakeObservable: function(object) {\r\n      Two.Gradient.MakeObservable(object);\r\n    },\r\n\r\n    /**\r\n     * @name Two.LinearGradient.FlagEndPoints\r\n     * @function\r\n     * @description Cached method to let renderers know end points have been updated on a {@link Two.LinearGradient}.\r\n     */\r\n    FlagEndPoints: function() {\r\n      this._flagEndPoints = true;\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(LinearGradient.prototype, Two.Gradient.prototype, {\r\n\r\n    /**\r\n     * @name Two.LinearGradient#_flagEndPoints\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.LinearGradient#left} or {@link Two.LinearGradient#right} changed and needs to update.\r\n     */\r\n    _flagEndPoints: false,\r\n\r\n    constructor: LinearGradient,\r\n\r\n    /**\r\n     * @name Two.LinearGradient#clone\r\n     * @function\r\n     * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\r\n     * @returns {Two.Gradient}\r\n     * @description Create a new instance of {@link Two.LinearGradient} with the same properties of the current path.\r\n     */\r\n    clone: function(parent) {\r\n\r\n      var stops = _.map(this.stops, function(stop) {\r\n        return stop.clone();\r\n      });\r\n\r\n      var clone = new LinearGradient(this.left._x, this.left._y,\r\n        this.right._x, this.right._y, stops);\r\n\r\n      _.each(Two.Gradient.Properties, function(k) {\r\n        clone[k] = this[k];\r\n      }, this);\r\n\r\n      if (parent) {\r\n        parent.add(clone);\r\n      }\r\n\r\n      return clone;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.LinearGradient#toObject\r\n     * @function\r\n     * @returns {Object}\r\n     * @description Return a JSON compatible plain object that represents the path.\r\n     */\r\n    toObject: function() {\r\n\r\n      var result = Two.Gradient.prototype.toObject.call(this);\r\n\r\n      result.left = this.left.toObject();\r\n      result.right = this.right.toObject();\r\n\r\n      return result;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.LinearGradient#_update\r\n     * @function\r\n     * @private\r\n     * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\r\n     * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\r\n     * @nota-bene Try not to call this method more than once a frame.\r\n     */\r\n    _update: function() {\r\n\r\n      if (this._flagEndPoints || this._flagSpread || this._flagStops) {\r\n        this.trigger(Two.Events.change);\r\n      }\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.LinearGradient#flagReset\r\n     * @function\r\n     * @private\r\n     * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\r\n     */\r\n    flagReset: function() {\r\n\r\n      this._flagEndPoints = false;\r\n\r\n      Two.Gradient.prototype.flagReset.call(this);\r\n\r\n      return this;\r\n\r\n    }\r\n\r\n  });\r\n\r\n  LinearGradient.MakeObservable(LinearGradient.prototype);\r\n\r\n})((typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : (undefined || self || window)).Two);\r\n\n(function(Two) {\r\n\r\n  var _ = Two.Utils;\r\n\r\n  /**\r\n   * @name Two.RadialGradient\r\n   * @class\r\n   * @extends Two.Gradient\r\n   * @param {Number} [x=0] - The x position of the origin of the radial gradient.\r\n   * @param {Number} [y=0] - The y position of the origin of the radial gradient.\r\n   * @param {Number} [radius=0] - The radius of the radial gradient.\r\n   * @param {Two.Stop[]} [stops] - A list of {@link Two.Stop}s that contain the gradient fill pattern for the gradient.\r\n   * @param {Number} [focalX=0] - The x position of the focal point on the radial gradient.\r\n   * @param {Number} [focalY=0] - The y position of the focal point on the radial gradient.\r\n   * @nota-bene The radial gradient lives within the space of the parent object's matrix space.\r\n   */\r\n  var RadialGradient = Two.RadialGradient = function(cx, cy, r, stops, fx, fy) {\r\n\r\n    Two.Gradient.call(this, stops);\r\n\r\n    this._renderer.type = 'radial-gradient';\r\n\r\n    /**\r\n     * @name Two.RadialGradient#center\r\n     * @property {Two.Vector} - The x and y value for where the origin of the radial gradient is.\r\n     */\r\n    this.center = new Two.Vector()\r\n      .bind(Two.Events.change, _.bind(function() {\r\n        this._flagCenter = true;\r\n      }, this));\r\n\r\n    this.radius = _.isNumber(r) ? r : 20;\r\n\r\n    /**\r\n     * @name Two.RadialGradient#focal\r\n     * @property {Two.Vector} - The x and y value for where the focal point of the radial gradient is.\r\n     * @nota-bene This effects the spray or spread of the radial gradient.\r\n     */\r\n    this.focal = new Two.Vector()\r\n      .bind(Two.Events.change, _.bind(function() {\r\n        this._flagFocal = true;\r\n      }, this));\r\n\r\n    if (_.isNumber(cx)) {\r\n      this.center.x = cx;\r\n    }\r\n    if (_.isNumber(cy)) {\r\n      this.center.y = cy;\r\n    }\r\n\r\n    this.focal.copy(this.center);\r\n\r\n    if (_.isNumber(fx)) {\r\n      this.focal.x = fx;\r\n    }\r\n    if (_.isNumber(fy)) {\r\n      this.focal.y = fy;\r\n    }\r\n\r\n  };\r\n\r\n  _.extend(RadialGradient, {\r\n\r\n    /**\r\n     * @name Two.RadialGradient#Stop\r\n     * @see {@link Two.Stop}\r\n     */\r\n    Stop: Two.Gradient.Stop,\r\n\r\n    /**\r\n     * @name Two.RadialGradient.Properties\r\n     * @property {String[]} - A list of properties that are on every {@link Two.RadialGradient}.\r\n     */\r\n    Properties: [\r\n      'radius'\r\n    ],\r\n\r\n    /**\r\n     * @name Two.RadialGradient.MakeObservable\r\n     * @function\r\n     * @param {Object} object - The object to make observable.\r\n     * @description Convenience function to apply observable qualities of a {@link Two.RadialGradient} to any object. Handy if you'd like to extend the {@link Two.RadialGradient} class on a custom class.\r\n     */\r\n    MakeObservable: function(object) {\r\n\r\n      Two.Gradient.MakeObservable(object);\r\n\r\n      _.each(RadialGradient.Properties, Two.Utils.defineProperty, object);\r\n\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(RadialGradient.prototype, Two.Gradient.prototype, {\r\n\r\n    /**\r\n     * @name Two.RadialGradient#_flagRadius\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.RadialGradient#radius} changed and needs to update.\r\n     */\r\n    _flagRadius: false,\r\n    /**\r\n     * @name Two.RadialGradient#_flagCenter\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.RadialGradient#center} changed and needs to update.\r\n     */\r\n    _flagCenter: false,\r\n    /**\r\n     * @name Two.RadialGradient#_flagFocal\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.RadialGradient#focal} changed and needs to update.\r\n     */\r\n    _flagFocal: false,\r\n\r\n    constructor: RadialGradient,\r\n\r\n    /**\r\n     * @name Two.RadialGradient#clone\r\n     * @function\r\n     * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\r\n     * @returns {Two.Gradient}\r\n     * @description Create a new instance of {@link Two.RadialGradient} with the same properties of the current path.\r\n     */\r\n    clone: function(parent) {\r\n\r\n      var stops = _.map(this.stops, function(stop) {\r\n        return stop.clone();\r\n      });\r\n\r\n      var clone = new RadialGradient(this.center._x, this.center._y,\r\n          this._radius, stops, this.focal._x, this.focal._y);\r\n\r\n      _.each(Two.Gradient.Properties.concat(RadialGradient.Properties), function(k) {\r\n        clone[k] = this[k];\r\n      }, this);\r\n\r\n      if (parent) {\r\n        parent.add(clone);\r\n      }\r\n\r\n      return clone;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.RadialGradient#toObject\r\n     * @function\r\n     * @returns {Object}\r\n     * @description Return a JSON compatible plain object that represents the path.\r\n     */\r\n    toObject: function() {\r\n\r\n      var result = Two.Gradient.prototype.toObject.call(this);\r\n\r\n      _.each(RadialGradient.Properties, function(k) {\r\n        result[k] = this[k];\r\n      }, this);\r\n\r\n      result.center = this.center.toObject();\r\n      result.focal = this.focal.toObject();\r\n\r\n      return result;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.RadialGradient#_update\r\n     * @function\r\n     * @private\r\n     * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\r\n     * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\r\n     * @nota-bene Try not to call this method more than once a frame.\r\n     */\r\n    _update: function() {\r\n\r\n      if (this._flagRadius || this._flatCenter || this._flagFocal\r\n        || this._flagSpread || this._flagStops) {\r\n        this.trigger(Two.Events.change);\r\n      }\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.RadialGradient#flagReset\r\n     * @function\r\n     * @private\r\n     * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\r\n     */\r\n    flagReset: function() {\r\n\r\n      this._flagRadius = this._flagCenter = this._flagFocal = false;\r\n\r\n      Two.Gradient.prototype.flagReset.call(this);\r\n\r\n      return this;\r\n\r\n    }\r\n\r\n  });\r\n\r\n  RadialGradient.MakeObservable(RadialGradient.prototype);\r\n\r\n})((typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : (undefined || self || window)).Two);\r\n\n(function(Two) {\r\n\r\n  var root = Two.root;\r\n  var _ = Two.Utils;\r\n  var anchor;\r\n  var regex = {\r\n    video: /\\.(mp4|webm|ogg)$/i,\r\n    image: /\\.(jpe?g|png|gif|tiff|webp)$/i,\r\n    effect: /texture|gradient/i\r\n  };\r\n\r\n  if (root.document) {\r\n    anchor = document.createElement('a');\r\n  }\r\n\r\n  /**\r\n   * @name Two.Texture\r\n   * @class\r\n   * @extends Two.Shape\r\n   * @param {String|ImageElement} [src] - The URL path to an image file or an `<img />` element.\r\n   * @param {Function} [callback] - An optional callback function once the image has been loaded.\r\n   * @description Fundamental to work with bitmap data, a.k.a. pregenerated imagery, in Two.js. Supported formats include jpg, png, gif, and tiff. See {@link Two.Texture.RegularExpressions} for a full list of supported formats.\r\n   */\r\n  var Texture = Two.Texture = function(src, callback) {\r\n\r\n    this._renderer = {};\r\n    this._renderer.type = 'texture';\r\n    this._renderer.flagOffset = _.bind(Texture.FlagOffset, this);\r\n    this._renderer.flagScale = _.bind(Texture.FlagScale, this);\r\n\r\n    this.id = Two.Identifier + Two.uniqueId();\r\n    this.classList = [];\r\n\r\n    /**\r\n     * @name Two.Texture#loaded\r\n     * @property {Boolean} - Shorthand value to determine if image has been loaded into the texture.\r\n     */\r\n    this.loaded = false;\r\n\r\n    /**\r\n     * @name Two.Texture#repeat\r\n     * @property {String} - CSS style declaration to tile {@link Two.Path}. Valid values include: `'no-repeat'`, `'repeat'`, `'repeat-x'`, `'repeat-y'`.\r\n     * @see {@link https://www.w3.org/TR/2dcontext/#dom-context-2d-createpattern}\r\n     */\r\n    this.repeat = 'no-repeat';\r\n\r\n    /**\r\n     * @name Two.Texture#offset\r\n     * @property {Two.Vector} - A two-component vector describing any pixel offset of the texture when applied to a {@link Two.Path}.\r\n     */\r\n    this.offset = new Two.Vector();\r\n\r\n    if (_.isFunction(callback)) {\r\n      var loaded = _.bind(function() {\r\n        this.unbind(Two.Events.load, loaded);\r\n        if (_.isFunction(callback)) {\r\n          callback();\r\n        }\r\n      }, this);\r\n      this.bind(Two.Events.load, loaded);\r\n    }\r\n\r\n    /**\r\n     * @name Two.Texture#src\r\n     * @property {String} - The URL path to the image data.\r\n     * @nota-bene This property is ultimately serialized in a {@link Two.Registry} to cache retrieval.\r\n     */\r\n    if (_.isString(src)) {\r\n      this.src = src;\r\n    } else if (_.isElement(src)) {\r\n      /**\r\n       * @name Two.Texture#image\r\n       * @property {Element} - The corresponding DOM Element of the texture. Can be a `<img />`, `<canvas />`, or `<video />` element. See {@link Two.Texture.RegularExpressions} for a full list of supported elements.\r\n       * @nota-bene In headless environments this is a `Canvas.Image` object. See {@link https://github.com/Automattic/node-canvas} for more information on headless image objects.\r\n       */\r\n      this.image = src;\r\n    }\r\n\r\n    this._update();\r\n\r\n  };\r\n\r\n  _.extend(Texture, {\r\n\r\n    /**\r\n     * @name Two.Texture.Properties\r\n     * @property {String[]} - A list of properties that are on every {@link Two.Texture}.\r\n     */\r\n    Properties: [\r\n      'src',\r\n      'loaded',\r\n      'repeat'\r\n    ],\r\n\r\n    /**\r\n     * @name Two.Texture.RegularExpressions\r\n     * @property {Object} - A map of compatible DOM Elements categorized by media format.\r\n     */\r\n    RegularExpressions: regex,\r\n\r\n    /**\r\n     * @name Two.Texture.ImageRegistry\r\n     * @property {Two.Registry} - A canonical listing of image data used in a single session of Two.js.\r\n     * @nota-bene This object is used to cache image data between different textures.\r\n     */\r\n    ImageRegistry: new Two.Registry(),\r\n\r\n    /**\r\n     * @name Two.Texture.getAbsoluteURL\r\n     * @property {Function} - Serializes a URL as an absolute path for canonical attribution in {@link Two.ImageRegistry}.\r\n     * @param {String} path\r\n     * @returns {String} - The serialized absolute path.\r\n     */\r\n    getAbsoluteURL: function(path) {\r\n      if (!anchor) {\r\n        // TODO: Fix for headless environments\r\n        return path;\r\n      }\r\n      anchor.href = path;\r\n      return anchor.href;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Texture.loadHeadlessBuffer\r\n     * @property {Function} - Loads an image as a buffer in headless environments.\r\n     * @param {Two.Texture} texture - The {@link Two.Texture} to be loaded.\r\n     * @param {Function} loaded - The callback function to be triggered once the image is loaded.\r\n     * @nota-bene - This function uses node's `fs.readFileSync` to spoof the `<img />` loading process in the browser.\r\n     */\r\n    loadHeadlessBuffer: new Function('texture', 'loaded', [\r\n      'var fs = require(\"fs\");',\r\n      'var buffer = fs.readFileSync(texture.src);',\r\n\r\n      'texture.image.src = buffer;',\r\n      'loaded();'\r\n    ].join('\\n')),\r\n\r\n    /**\r\n     * @name Two.Texture.getImage\r\n     * @property {Function} - Convenience function to set {@link Two.Texture#image} properties with canonincal versions set in {@link Two.Texture.ImageRegistry}.\r\n     * @param {String} src - The URL path of the image.\r\n     * @returns {ImageElement} - Returns either a cached version of the image or a new one that is registered in {@link Two.Texture.ImageRegistry}.\r\n     */\r\n    getImage: function(src) {\r\n\r\n      var absoluteSrc = Texture.getAbsoluteURL(src);\r\n\r\n      if (Texture.ImageRegistry.contains(absoluteSrc)) {\r\n        return Texture.ImageRegistry.get(absoluteSrc);\r\n      }\r\n\r\n      var image;\r\n\r\n      if (Two.Utils.Image) {\r\n\r\n        // TODO: Fix for headless environments\r\n        image = new Two.Utils.Image();\r\n        Two.CanvasRenderer.Utils.shim(image, 'img');\r\n\r\n      } else if (root.document) {\r\n\r\n        if (regex.video.test(absoluteSrc)) {\r\n          image = document.createElement('video');\r\n        } else {\r\n          image = document.createElement('img');\r\n        }\r\n\r\n      } else {\r\n\r\n        console.warn('Two.js: no prototypical image defined for Two.Texture');\r\n\r\n      }\r\n\r\n      image.crossOrigin = 'anonymous';\r\n\r\n      return image;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Register\r\n     * @interface\r\n     * @description A collection of functions to register different types of textures. Used internally by a {@link Two.Texture}.\r\n     */\r\n    Register: {\r\n      canvas: function(texture, callback) {\r\n        texture._src = '#' + texture.id;\r\n        Texture.ImageRegistry.add(texture.src, texture.image);\r\n        if (_.isFunction(callback)) {\r\n          callback();\r\n        }\r\n      },\r\n      img: function(texture, callback) {\r\n\r\n        var loaded = function(e) {\r\n          if (_.isFunction(texture.image.removeEventListener)) {\r\n            texture.image.removeEventListener('load', loaded, false);\r\n            texture.image.removeEventListener('error', error, false);\r\n          }\r\n          if (_.isFunction(callback)) {\r\n            callback();\r\n          }\r\n        };\r\n        var error = function(e) {\r\n          if (_.isFunction(texture.image.removeEventListener)) {\r\n            texture.image.removeEventListener('load', loaded, false);\r\n            texture.image.removeEventListener('error', error, false);\r\n          }\r\n          throw new Two.Utils.Error('unable to load ' + texture.src);\r\n        };\r\n\r\n        if (_.isNumber(texture.image.width) && texture.image.width > 0\r\n          && _.isNumber(texture.image.height) && texture.image.height > 0) {\r\n            loaded();\r\n        } else if (_.isFunction(texture.image.addEventListener)) {\r\n          texture.image.addEventListener('load', loaded, false);\r\n          texture.image.addEventListener('error', error, false);\r\n        }\r\n\r\n        texture._src = Texture.getAbsoluteURL(texture._src);\r\n\r\n        if (texture.image && texture.image.getAttribute('two-src')) {\r\n          return;\r\n        }\r\n\r\n        texture.image.setAttribute('two-src', texture.src);\r\n        Texture.ImageRegistry.add(texture.src, texture.image);\r\n\r\n        if (Two.Utils.isHeadless) {\r\n\r\n          Texture.loadHeadlessBuffer(texture, loaded);\r\n\r\n        } else {\r\n\r\n          texture.image.src = texture.src;\r\n\r\n        }\r\n\r\n      },\r\n      video: function(texture, callback) {\r\n\r\n        var loaded = function(e) {\r\n          texture.image.removeEventListener('canplaythrough', loaded, false);\r\n          texture.image.removeEventListener('error', error, false);\r\n          texture.image.width = texture.image.videoWidth;\r\n          texture.image.height = texture.image.videoHeight;\r\n          texture.image.play();\r\n          if (_.isFunction(callback)) {\r\n            callback();\r\n          }\r\n        };\r\n        var error = function(e) {\r\n          texture.image.removeEventListener('canplaythrough', loaded, false);\r\n          texture.image.removeEventListener('error', error, false);\r\n          throw new Two.Utils.Error('unable to load ' + texture.src);\r\n        };\r\n\r\n        texture._src = Texture.getAbsoluteURL(texture._src);\r\n        texture.image.addEventListener('canplaythrough', loaded, false);\r\n        texture.image.addEventListener('error', error, false);\r\n\r\n        if (texture.image && texture.image.getAttribute('two-src')) {\r\n          return;\r\n        }\r\n\r\n        if (Two.Utils.isHeadless) {\r\n          throw new Two.Utils.Error('video textures are not implemented in headless environments.');\r\n        }\r\n\r\n        texture.image.setAttribute('two-src', texture.src);\r\n        Texture.ImageRegistry.add(texture.src, texture.image);\r\n        texture.image.src = texture.src;\r\n        texture.image.loop = true;\r\n        texture.image.load();\r\n\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @name Two.Texture.load\r\n     * @function\r\n     * @param {Two.Texture} texture - The texture to load.\r\n     * @param {Function} callback - The function to be called once the texture is loaded.\r\n     */\r\n    load: function(texture, callback) {\r\n\r\n      var src = texture.src;\r\n      var image = texture.image;\r\n      var tag = image && image.nodeName.toLowerCase();\r\n\r\n      if (texture._flagImage) {\r\n        if (/canvas/i.test(tag)) {\r\n          Texture.Register.canvas(texture, callback);\r\n        } else {\r\n          texture._src = image.getAttribute('two-src') || image.src;\r\n          Texture.Register[tag](texture, callback);\r\n        }\r\n      }\r\n\r\n      if (texture._flagSrc) {\r\n        if (!image) {\r\n          texture.image = Texture.getImage(texture.src);\r\n        }\r\n        tag = texture.image.nodeName.toLowerCase();\r\n        Texture.Register[tag](texture, callback);\r\n      }\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Texture.FlagOffset\r\n     * @function\r\n     * @description Cached method to let renderers know `offset` has been updated on a {@link Two.Texture}.\r\n     */\r\n    FlagOffset: function() {\r\n      this._flagOffset = true;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Texture.FlagScale\r\n     * @function\r\n     * @description Cached method to let renderers know `scale` has been updated on a {@link Two.Texture}.\r\n     */\r\n    FlagScale: function() {\r\n      this._flagScale = true;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Texture.MakeObservable\r\n     * @function\r\n     * @param {Object} object - The object to make observable.\r\n     * @description Convenience function to apply observable qualities of a {@link Two.Texture} to any object. Handy if you'd like to extend or inherit the {@link Two.Texture} class on a custom class.\r\n     */\r\n    MakeObservable: function(object) {\r\n\r\n      _.each(Texture.Properties, Two.Utils.defineProperty, object);\r\n\r\n      Object.defineProperty(object, 'image', {\r\n        enumerable: true,\r\n        get: function() {\r\n          return this._image;\r\n        },\r\n        set: function(image) {\r\n\r\n          var tag = image && image.nodeName.toLowerCase();\r\n          var index;\r\n\r\n          switch (tag) {\r\n            case 'canvas':\r\n              index = '#' + image.id;\r\n              break;\r\n            default:\r\n              index = image.src;\r\n          }\r\n\r\n          if (Texture.ImageRegistry.contains(index)) {\r\n            this._image = Texture.ImageRegistry.get(image.src);\r\n          } else {\r\n            this._image = image;\r\n          }\r\n\r\n          this._flagImage = true;\r\n\r\n        }\r\n\r\n      });\r\n\r\n      Object.defineProperty(object, 'offset', {\r\n        enumerable: true,\r\n        get: function() {\r\n          return this._offset;\r\n        },\r\n        set: function(v) {\r\n          if (this._offset) {\r\n            this._offset.unbind(Two.Events.change, this._renderer.flagOffset);\r\n          }\r\n          this._offset = v;\r\n          this._offset.bind(Two.Events.change, this._renderer.flagOffset);\r\n          this._flagOffset = true;\r\n        }\r\n      });\r\n\r\n      Object.defineProperty(object, 'scale', {\r\n        enumerable: true,\r\n        get: function() {\r\n          return this._scale;\r\n        },\r\n        set: function(v) {\r\n\r\n          if (this._scale instanceof Two.Vector) {\r\n            this._scale.unbind(Two.Events.change, this._renderer.flagScale);\r\n          }\r\n\r\n          this._scale = v;\r\n\r\n          if (this._scale instanceof Two.Vector) {\r\n            this._scale.bind(Two.Events.change, this._renderer.flagScale);\r\n          }\r\n\r\n          this._flagScale = true;\r\n\r\n        }\r\n      });\r\n\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(Texture.prototype, Two.Utils.Events, Two.Shape.prototype, {\r\n\r\n    /**\r\n     * @name Two.Texture#_flagSrc\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Texture#src} needs updating.\r\n     */\r\n    _flagSrc: false,\r\n\r\n    /**\r\n     * @name Two.Texture#_flagImage\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Texture#image} needs updating.\r\n     */\r\n    _flagImage: false,\r\n\r\n    /**\r\n     * @name Two.Texture#_flagVideo\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Texture#video} needs updating.\r\n     */\r\n    _flagVideo: false,\r\n\r\n    /**\r\n     * @name Two.Texture#_flagLoaded\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Texture#loaded} needs updating.\r\n     */\r\n    _flagLoaded: false,\r\n\r\n    /**\r\n     * @name Two.Texture#_flagRepeat\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Texture#repeat} needs updating.\r\n     */\r\n    _flagRepeat: false,\r\n\r\n    /**\r\n     * @name Two.Texture#_flagOffset\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Texture#offset} needs updating.\r\n     */\r\n    _flagOffset: false,\r\n\r\n    /**\r\n     * @name Two.Texture#_flagScale\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Texture#scale} needs updating.\r\n     */\r\n    _flagScale: false,\r\n\r\n    /**\r\n     * @name Two.Texture#_src\r\n     * @private\r\n     * @see {@link Two.Texture#src}\r\n     */\r\n    _src: '',\r\n\r\n    /**\r\n     * @name Two.Texture#_image\r\n     * @private\r\n     * @see {@link Two.Texture#image}\r\n     */\r\n    _image: null,\r\n\r\n    /**\r\n     * @name Two.Texture#_loaded\r\n     * @private\r\n     * @see {@link Two.Texture#loaded}\r\n     */\r\n    _loaded: false,\r\n\r\n    /**\r\n     * @name Two.Texture#_repeat\r\n     * @private\r\n     * @see {@link Two.Texture#repeat}\r\n     */\r\n    _repeat: 'no-repeat',\r\n\r\n    /**\r\n     * @name Two.Texture#_scale\r\n     * @private\r\n     * @see {@link Two.Texture#scale}\r\n     */\r\n    _scale: 1,\r\n\r\n    /**\r\n     * @name Two.Texture#_offset\r\n     * @private\r\n     * @see {@link Two.Texture#offset}\r\n     */\r\n    _offset: null,\r\n\r\n    constructor: Texture,\r\n\r\n    /**\r\n     * @name Two.Texture#clone\r\n     * @function\r\n     * @returns {Two.Texture}\r\n     * @description Create a new instance of {@link Two.Texture} with the same properties of the current texture.\r\n     */\r\n    clone: function() {\r\n      var clone = new Texture(this.src);\r\n      clone.repeat = this.repeat;\r\n      clone.offset.copy(this.origin);\r\n      clone.scale = this.scale;\r\n      return clone;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Texture#toObject\r\n     * @function\r\n     * @returns {Object}\r\n     * @description Return a JSON compatible plain object that represents the texture.\r\n     */\r\n    toObject: function() {\r\n      return {\r\n        src: this.src,\r\n        // image: this.image,\r\n        repeat: this.repeat,\r\n        origin: this.origin.toObject(),\r\n        scale: _.isNumber(this.scale) ? this.scale : this.scale.toObject()\r\n      };\r\n    },\r\n\r\n    /**\r\n     * @name Two.Texture#_update\r\n     * @function\r\n     * @private\r\n     * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\r\n     * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\r\n     * @nota-bene Try not to call this method more than once a frame.\r\n     */\r\n    _update: function() {\r\n\r\n      if (this._flagSrc || this._flagImage) {\r\n\r\n        this.trigger(Two.Events.change);\r\n\r\n        if (this._flagSrc || this._flagImage) {\r\n          this.loaded = false;\r\n          Texture.load(this, _.bind(function() {\r\n            this.loaded = true;\r\n            this\r\n              .trigger(Two.Events.change)\r\n              .trigger(Two.Events.load);\r\n          }, this));\r\n        }\r\n\r\n      }\r\n\r\n      if (this._image && this._image.readyState >= 4) {\r\n        this._flagVideo = true;\r\n      }\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Texture#flagReset\r\n     * @function\r\n     * @private\r\n     * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\r\n     */\r\n    flagReset: function() {\r\n\r\n      this._flagSrc = this._flagImage = this._flagLoaded\r\n        = this._flagVideo = this._flagScale = this._flagOffset = false;\r\n\r\n      return this;\r\n\r\n    }\r\n\r\n  });\r\n\r\n  Texture.MakeObservable(Texture.prototype);\r\n\r\n})((typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : (undefined || self || window)).Two);\r\n\n(function(Two) {\r\n\r\n  var _ = Two.Utils;\r\n  var Path = Two.Path;\r\n  var Rectangle = Two.Rectangle;\r\n\r\n  /**\r\n   * @name Two.Sprite\r\n   * @class\r\n   * @extends Two.Rectangle\r\n   * @param {String|Two.Texture} [path] - The URL path or {@link Two.Texture} to be used as the bitmap data displayed on the sprite.\r\n   * @param {Number} [ox=0] - The initial `x` position of the Two.Sprite.\r\n   * @param {Number} [oy=0] - The initial `y` position of the Two.Sprite.\r\n   * @param {Integer} [cols=1] - The number of columns the sprite contains.\r\n   * @param {Integer} [rows=1] - The number of rows the sprite contains.\r\n   * @param {Integer} [frameRate=0] - The frame rate at which the partitions of the image should playback at.\r\n   * @description A convenient package to display still or animated images through a tiled image source. For more information on the principals of animated imagery through tiling see [Texture Atlas]{@link https://en.wikipedia.org/wiki/Texture_atlas} on Wikipedia..\r\n   */\r\n  var Sprite = Two.Sprite = function(path, ox, oy, cols, rows, frameRate) {\r\n\r\n    // Not using default constructor of Rectangle due to odd `beginning` / `ending` behavior.\r\n    // See: https://github.com/jonobr1/two.js/issues/383\r\n    Path.call(this, [\r\n      new Two.Anchor(),\r\n      new Two.Anchor(),\r\n      new Two.Anchor(),\r\n      new Two.Anchor()\r\n    ], true);\r\n\r\n    this.noStroke();\r\n    this.noFill();\r\n\r\n    /**\r\n     * @name Two.Sprite#texture\r\n     * @property {Two.Texture} - The texture to be used as bitmap data to display image in the scene.\r\n     */\r\n    if (path instanceof Two.Texture) {\r\n      this.texture = path;\r\n    } else if (_.isString(path)) {\r\n      this.texture = new Two.Texture(path);\r\n    }\r\n\r\n    this.origin = new Two.Vector();\r\n\r\n    this._update();\r\n    this.translation.set(ox || 0, oy || 0);\r\n\r\n    /**\r\n     * @name Two.Sprite#columns\r\n     * @property {Integer} - The number of columns to split the texture into. Defaults to `1`.\r\n     */\r\n    if (_.isNumber(cols)) {\r\n      this.columns = cols;\r\n    }\r\n\r\n    /**\r\n     * @name Two.Sprite#rows\r\n     * @property {Integer} - The number of rows to split the texture into. Defaults to `1`.\r\n     */\r\n    if (_.isNumber(rows)) {\r\n      this.rows = rows;\r\n    }\r\n\r\n    /**\r\n     * @name Two.Sprite#frameRate\r\n     * @property {Integer} - The number of frames to animate against per second. Defaults to `0` for non-animated sprites.\r\n     */\r\n    if (_.isNumber(frameRate)) {\r\n      this.frameRate = frameRate;\r\n    }\r\n\r\n    /**\r\n     * @name Two.Sprite#index\r\n     * @property {Integer} - The index of the current tile of the sprite to display. Defaults to `0`.\r\n     */\r\n    this.index = 0;\r\n\r\n  };\r\n\r\n  _.extend(Sprite, {\r\n\r\n    /**\r\n     * @name Two.Sprite.Properties\r\n     * @property {String[]} - A list of properties that are on every {@link Two.Sprite}.\r\n     */\r\n    Properties: [\r\n      'texture', 'columns', 'rows', 'frameRate', 'index'\r\n    ],\r\n\r\n    /**\r\n     * @name Two.Sprite.MakeObservable\r\n     * @function\r\n     * @param {Object} object - The object to make observable.\r\n     * @description Convenience function to apply observable qualities of a {@link Two.Sprite} to any object. Handy if you'd like to extend or inherit the {@link Two.Sprite} class on a custom class.\r\n     */\r\n    MakeObservable: function(obj) {\r\n\r\n      Rectangle.MakeObservable(obj);\r\n      _.each(Sprite.Properties, Two.Utils.defineProperty, obj);\r\n\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(Sprite.prototype, Rectangle.prototype, {\r\n\r\n    /**\r\n     * @name Two.Sprite#_flagTexture\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Sprite#texture} needs updating.\r\n     */\r\n    _flagTexture: false,\r\n\r\n    /**\r\n     * @name Two.Sprite#_flagColumns\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Sprite#columns} need updating.\r\n     */\r\n    _flagColumns: false,\r\n\r\n    /**\r\n     * @name Two.Sprite#_flagRows\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Sprite#rows} need updating.\r\n     */\r\n    _flagRows: false,\r\n\r\n    /**\r\n     * @name Two.Sprite#_flagFrameRate\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Sprite#flagFrameRate} needs updating.\r\n     */\r\n    _flagFrameRate: false,\r\n\r\n    /**\r\n     * @name Two.Sprite#_flagIndex\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Sprite#index} needs updating.\r\n     */\r\n    flagIndex: false,\r\n\r\n    // Private variables\r\n\r\n    /**\r\n     * @name Two.Sprite#_amount\r\n     * @private\r\n     * @property {Integer} - Number of frames for a given {@link Two.Sprite}.\r\n     */\r\n    _amount: 1,\r\n\r\n    /**\r\n     * @name Two.Sprite#_duration\r\n     * @private\r\n     * @property {Number} - Number of milliseconds a {@link Two.Sprite}.\r\n     */\r\n    _duration: 0,\r\n\r\n    /**\r\n     * @name Two.Sprite#_startTime\r\n     * @private\r\n     * @property {Milliseconds} - Epoch time in milliseconds of when the {@link Two.Sprite} started.\r\n     */\r\n    _startTime: 0,\r\n\r\n    /**\r\n     * @name Two.Sprite#_playing\r\n     * @private\r\n     * @property {Boolean} - Dictates whether the {@link Two.Sprite} is animating or not.\r\n     */\r\n    _playing: false,\r\n\r\n    /**\r\n     * @name Two.Sprite#_firstFrame\r\n     * @private\r\n     * @property {Integer} - The frame the {@link Two.Sprite} should start with.\r\n     */\r\n    _firstFrame: 0,\r\n\r\n    /**\r\n     * @name Two.Sprite#_lastFrame\r\n     * @private\r\n     * @property {Integer} - The frame the {@link Two.Sprite} should end with.\r\n     */\r\n    _lastFrame: 0,\r\n\r\n    /**\r\n     * @name Two.Sprite#_playing\r\n     * @private\r\n     * @property {Boolean} - Dictates whether the {@link Two.Sprite} should loop or not.\r\n     */\r\n    _loop: true,\r\n\r\n    // Exposed through getter-setter\r\n\r\n    /**\r\n     * @name Two.Sprite#_texture\r\n     * @private\r\n     * @see {@link Two.Sprite#texture}\r\n     */\r\n    _texture: null,\r\n\r\n    /**\r\n     * @name Two.Sprite#_columns\r\n     * @private\r\n     * @see {@link Two.Sprite#columns}\r\n     */\r\n    _columns: 1,\r\n\r\n    /**\r\n     * @name Two.Sprite#_rows\r\n     * @private\r\n     * @see {@link Two.Sprite#rows}\r\n     */\r\n    _rows: 1,\r\n\r\n    /**\r\n     * @name Two.Sprite#_frameRate\r\n     * @private\r\n     * @see {@link Two.Sprite#frameRate}\r\n     */\r\n    _frameRate: 0,\r\n\r\n    /**\r\n     * @name Two.Sprite#_index\r\n     * @private\r\n     * @property {Integer} - The current frame the {@link Two.Sprite} is currently displaying.\r\n     */\r\n    _index: 0,\r\n\r\n    /**\r\n     * @name Two.Sprite#_origin\r\n     * @private\r\n     * @see {@link Two.Sprite#origin}\r\n     */\r\n    _origin: null,\r\n\r\n    constructor: Sprite,\r\n\r\n    /**\r\n     * @name Two.Sprite#play\r\n     * @function\r\n     * @param {Integer} [firstFrame=0] - The index of the frame to start the animation with.\r\n     * @param {Integer} [lastFrame] - The index of the frame to end the animation with. Defaults to the last item in the {@link Two.Sprite#textures}.\r\n     * @param {Function} [onLastFrame] - Optional callback function to be triggered after playing the last frame. This fires multiple times when the sprite is looped.\r\n     * @description Initiate animation playback of a {@link Two.Sprite}.\r\n     */\r\n    play: function(firstFrame, lastFrame, onLastFrame) {\r\n\r\n      this._playing = true;\r\n      this._firstFrame = 0;\r\n      this._lastFrame = this.amount - 1;\r\n      this._startTime = _.performance.now();\r\n\r\n      if (_.isNumber(firstFrame)) {\r\n        this._firstFrame = firstFrame;\r\n      }\r\n      if (_.isNumber(lastFrame)) {\r\n        this._lastFrame = lastFrame;\r\n      }\r\n      if (_.isFunction(onLastFrame)) {\r\n        this._onLastFrame = onLastFrame;\r\n      } else {\r\n        delete this._onLastFrame;\r\n      }\r\n\r\n      if (this._index !== this._firstFrame) {\r\n        this._startTime -= 1000 * Math.abs(this._index - this._firstFrame)\r\n          / this._frameRate;\r\n      }\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Sprite#pause\r\n     * @function\r\n     * @description Halt animation playback of a {@link Two.Sprite}.\r\n     */\r\n    pause: function() {\r\n\r\n      this._playing = false;\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Sprite#stop\r\n     * @function\r\n     * @description Halt animation playback of a {@link Two.Sprite} and set the current frame back to the first frame.\r\n     */\r\n    stop: function() {\r\n\r\n      this._playing = false;\r\n      this._index = 0;\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Sprite#clone\r\n     * @function\r\n     * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\r\n     * @returns {Two.Sprite}\r\n     * @description Create a new instance of {@link Two.Sprite} with the same properties of the current sprite.\r\n     */\r\n    clone: function(parent) {\r\n\r\n      var clone = new Sprite(\r\n        this.texture, this.translation.x, this.translation.y,\r\n        this.columns, this.rows, this.frameRate\r\n      );\r\n\r\n      if (this.playing) {\r\n        clone.play(this._firstFrame, this._lastFrame);\r\n        clone._loop = this._loop;\r\n      }\r\n\r\n      if (parent) {\r\n        parent.add(clone);\r\n      }\r\n\r\n      return clone;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Sprite#toObject\r\n     * @function\r\n     * @returns {Object}\r\n     * @description Return a JSON compatible plain object that represents the path.\r\n     */\r\n    toObject: function() {\r\n      var object = Rectangle.prototype.toObject.call(this);\r\n      object.texture = this.texture.toObject();\r\n      object.columns = this.columns;\r\n      object.rows = this.rows;\r\n      object.frameRate = this.frameRate;\r\n      object.index = this.index;\r\n      object._firstFrame = this._firstFrame;\r\n      object._lastFrame = this._lastFrame;\r\n      object._loop = this._loop;\r\n      return object;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Sprite#_update\r\n     * @function\r\n     * @private\r\n     * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\r\n     * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\r\n     * @nota-bene Try not to call this method more than once a frame.\r\n     */\r\n    _update: function() {\r\n\r\n      var effect = this._texture;\r\n      var cols = this._columns;\r\n      var rows = this._rows;\r\n\r\n      var width, height, elapsed, amount, duration;\r\n      var index, iw, ih, isRange, frames;\r\n\r\n      if (this._flagColumns || this._flagRows) {\r\n        this._amount = this._columns * this._rows;\r\n      }\r\n\r\n      if (this._flagFrameRate) {\r\n        this._duration = 1000 * this._amount / this._frameRate;\r\n      }\r\n\r\n      if (this._flagTexture) {\r\n        this.fill = this._texture;\r\n      }\r\n\r\n      if (this._texture.loaded) {\r\n\r\n        iw = effect.image.width;\r\n        ih = effect.image.height;\r\n\r\n        width = iw / cols;\r\n        height = ih / rows;\r\n        amount = this._amount;\r\n\r\n        if (this.width !== width) {\r\n          this.width = width;\r\n        }\r\n        if (this.height !== height) {\r\n          this.height = height;\r\n        }\r\n\r\n        if (this._playing && this._frameRate > 0) {\r\n\r\n          if (_.isNaN(this._lastFrame)) {\r\n            this._lastFrame = amount - 1;\r\n          }\r\n\r\n          // TODO: Offload perf logic to instance of `Two`.\r\n          elapsed = _.performance.now() - this._startTime;\r\n          frames = this._lastFrame + 1;\r\n          duration = 1000 * (frames - this._firstFrame) / this._frameRate;\r\n\r\n          if (this._loop) {\r\n            elapsed = elapsed % duration;\r\n          } else {\r\n            elapsed = Math.min(elapsed, duration);\r\n          }\r\n\r\n          index = _.lerp(this._firstFrame, frames, elapsed / duration);\r\n          index = Math.floor(index);\r\n\r\n          if (index !== this._index) {\r\n            this._index = index;\r\n            if (index >= this._lastFrame - 1 && this._onLastFrame) {\r\n              this._onLastFrame();  // Shortcut for chainable sprite animations\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n        var col = this._index % cols;\r\n        var row = Math.floor(this._index / cols);\r\n\r\n        var ox = - width * col + (iw - width) / 2;\r\n        var oy = - height * row + (ih - height) / 2;\r\n\r\n        // TODO: Improve performance\r\n        if (ox !== effect.offset.x) {\r\n          effect.offset.x = ox;\r\n        }\r\n        if (oy !== effect.offset.y) {\r\n          effect.offset.y = oy;\r\n        }\r\n\r\n      }\r\n\r\n      Rectangle.prototype._update.call(this);\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Sprite#flagReset\r\n     * @function\r\n     * @private\r\n     * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\r\n     */\r\n    flagReset: function() {\r\n\r\n      this._flagTexture = this._flagColumns = this._flagRows\r\n        = this._flagFrameRate = false;\r\n\r\n      Rectangle.prototype.flagReset.call(this);\r\n\r\n      return this;\r\n    }\r\n\r\n\r\n  });\r\n\r\n  Sprite.MakeObservable(Sprite.prototype);\r\n\r\n})((typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : (undefined || self || window)).Two);\r\n\n(function(Two) {\r\n\r\n  var _ = Two.Utils;\r\n  var Path = Two.Path;\r\n  var Rectangle = Two.Rectangle;\r\n\r\n  /**\r\n   * @name Two.ImageSequence\r\n   * @class\r\n   * @extends Two.Rectangle\r\n   * @param {String|String[]|Two.Texture|Two.Texture[]} paths - A list of URLs or {@link Two.Texture}s.\r\n   * @param {Number} [ox=0] - The initial `x` position of the Two.ImageSequence.\r\n   * @param {Number} [oy=0] - The initial `y` position of the Two.ImageSequence.\r\n   * @param {Integer} [frameRate=30] - The frame rate at which the images should playback at.\r\n   * @description A convenient package to display still or animated images organized as a series of still images.\r\n   */\r\n  var ImageSequence = Two.ImageSequence = function(paths, ox, oy, frameRate) {\r\n\r\n    // Not using default constructor of Rectangle due to odd `beginning` / `ending` behavior.\r\n    // See: https://github.com/jonobr1/two.js/issues/383\r\n    Path.call(this, [\r\n      new Two.Anchor(),\r\n      new Two.Anchor(),\r\n      new Two.Anchor(),\r\n      new Two.Anchor()\r\n    ], true);\r\n\r\n    this._renderer.flagTextures = _.bind(ImageSequence.FlagTextures, this);\r\n    this._renderer.bindTextures = _.bind(ImageSequence.BindTextures, this);\r\n    this._renderer.unbindTextures = _.bind(ImageSequence.UnbindTextures, this);\r\n\r\n    this.noStroke();\r\n    this.noFill();\r\n\r\n    /**\r\n     * @name Two.ImageSequence#textures\r\n     * @property {Two.Texture[]} - A list of textures to be used as frames for animating the {@link Two.ImageSequence}.\r\n     */\r\n    if (_.isObject(paths)) {\r\n      this.textures = _.map(paths, ImageSequence.GenerateTexture, this);\r\n    } else {\r\n      // If just a single path convert into a single Two.Texture\r\n      this.textures = [ImageSequence.GenerateTexture(paths)];\r\n    }\r\n\r\n    this.origin = new Two.Vector();\r\n\r\n    this._update();\r\n    this.translation.set(ox || 0, oy || 0);\r\n\r\n    /**\r\n     * @name Two.ImageSequence#frameRate\r\n     * @property {Integer} - The number of frames to animate against per second.\r\n     */\r\n    if (_.isNumber(frameRate)) {\r\n      this.frameRate = frameRate;\r\n    } else {\r\n      this.frameRate = ImageSequence.DefaultFrameRate;\r\n    }\r\n\r\n    /**\r\n     * @name Two.ImageSequence#index\r\n     * @property {Integer} - The index of the current tile of the sprite to display. Defaults to `0`.\r\n     */\r\n    this.index = 0;\r\n\r\n  };\r\n\r\n  _.extend(ImageSequence, {\r\n\r\n    /**\r\n     * @name Two.ImageSequence.Properties\r\n     * @property {String[]} - A list of properties that are on every {@link Two.ImageSequence}.\r\n     */\r\n    Properties: [\r\n      'frameRate',\r\n      'index'\r\n    ],\r\n\r\n    /**\r\n     * @name Two.ImageSequence.DefaultFrameRate\r\n     * @property The default frame rate that {@link Two.ImageSequence#frameRate} is set to when instantiated.\r\n     */\r\n    DefaultFrameRate: 30,\r\n\r\n    /**\r\n     * @name Two.ImageSequence.FlagTextures\r\n     * @function\r\n     * @description Cached method to let renderers know textures have been updated on a {@link Two.ImageSequence}.\r\n     */\r\n    FlagTextures: function() {\r\n      this._flagTextures = true;\r\n    },\r\n\r\n    /**\r\n     * @name Two.ImageSequence.BindTextures\r\n     * @function\r\n     * @description Cached method to let {@link Two.ImageSequence} know textures have been added to the instance.\r\n     */\r\n    BindTextures: function(items) {\r\n\r\n      var i = items.length;\r\n      while (i--) {\r\n        items[i].bind(Two.Events.change, this._renderer.flagTextures);\r\n      }\r\n\r\n      this._renderer.flagTextures();\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.ImageSequence.UnbindVertices\r\n     * @function\r\n     * @description Cached method to let {@link Two.ImageSequence} know textures have been removed from the instance.\r\n     */\r\n    UnbindTextures: function(items) {\r\n\r\n      var i = items.length;\r\n      while (i--) {\r\n        items[i].unbind(Two.Events.change, this._renderer.flagTextures);\r\n      }\r\n\r\n      this._renderer.flagTextures();\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.ImageSequence.MakeObservable\r\n     * @function\r\n     * @param {Object} object - The object to make observable.\r\n     * @description Convenience function to apply observable qualities of a {@link Two.ImageSequence} to any object. Handy if you'd like to extend or inherit the {@link Two.ImageSequence} class on a custom class.\r\n     */\r\n    MakeObservable: function(obj) {\r\n\r\n      Rectangle.MakeObservable(obj);\r\n      _.each(ImageSequence.Properties, Two.Utils.defineProperty, obj);\r\n\r\n      Object.defineProperty(obj, 'textures', {\r\n\r\n        enumerable: true,\r\n\r\n        get: function() {\r\n          return this._textures;\r\n        },\r\n\r\n        set: function(textures) {\r\n\r\n          var updateTextures = this._renderer.flagTextures;\r\n          var bindTextures = this._renderer.bindTextures;\r\n          var unbindTextures = this._renderer.unbindTextures;\r\n\r\n          // Remove previous listeners\r\n          if (this._textures) {\r\n            this._textures\r\n              .unbind(Two.Events.insert, bindTextures)\r\n              .unbind(Two.Events.remove, unbindTextures);\r\n          }\r\n\r\n          // Create new Collection with copy of vertices\r\n          this._textures = new Two.Utils.Collection((textures || []).slice(0));\r\n\r\n          // Listen for Collection changes and bind / unbind\r\n          this._textures\r\n            .bind(Two.Events.insert, bindTextures)\r\n            .bind(Two.Events.remove, unbindTextures);\r\n\r\n          // Bind Initial Textures\r\n          bindTextures(this._textures);\r\n\r\n        }\r\n\r\n      });\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.ImageSequence.GenerateTexture\r\n     * @property {Function} - Shorthand function to prepare source image material into readable format by {@link Two.ImageSequence}.\r\n     * @param {String|Two.Texture} textureOrString - The texture or string to create a {@link Two.Texture} from.\r\n     * @description Function used internally by {@link Two.ImageSequence} to parse arguments and return {@link Two.Texture}s.\r\n     * @returns {Two.Texture}\r\n     */\r\n    GenerateTexture: function(obj) {\r\n      if (obj instanceof Two.Texture) {\r\n        return obj;\r\n      } else if (_.isString(obj)) {\r\n        return new Two.Texture(obj);\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(ImageSequence.prototype, Rectangle.prototype, {\r\n\r\n    /**\r\n     * @name Two.ImageSequence#_flagTextures\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.ImageSequence#textures} need updating.\r\n     */\r\n    _flagTextures: false,\r\n\r\n    /**\r\n     * @name Two.ImageSequence#_flagFrameRate\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.ImageSequence#frameRate} needs updating.\r\n     */\r\n    _flagFrameRate: false,\r\n\r\n    /**\r\n     * @name Two.ImageSequence#_flagIndex\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.ImageSequence#index} needs updating.\r\n     */\r\n    _flagIndex: false,\r\n\r\n    // Private variables\r\n\r\n    /**\r\n     * @name Two.ImageSequence#_amount\r\n     * @private\r\n     * @property {Integer} - Number of frames for a given {@link Two.ImageSequence}.\r\n     */\r\n    _amount: 1,\r\n\r\n    /**\r\n     * @name Two.ImageSequence#_duration\r\n     * @private\r\n     * @property {Number} - Number of milliseconds a {@link Two.ImageSequence}.\r\n     */\r\n    _duration: 0,\r\n\r\n    /**\r\n     * @name Two.ImageSequence#_index\r\n     * @private\r\n     * @property {Integer} - The current frame the {@link Two.ImageSequence} is currently displaying.\r\n     */\r\n    _index: 0,\r\n\r\n    /**\r\n     * @name Two.ImageSequence#_startTime\r\n     * @private\r\n     * @property {Milliseconds} - Epoch time in milliseconds of when the {@link Two.ImageSequence} started.\r\n     */\r\n    _startTime: 0,\r\n\r\n    /**\r\n     * @name Two.ImageSequence#_playing\r\n     * @private\r\n     * @property {Boolean} - Dictates whether the {@link Two.ImageSequence} is animating or not.\r\n     */\r\n    _playing: false,\r\n\r\n    /**\r\n     * @name Two.ImageSequence#_firstFrame\r\n     * @private\r\n     * @property {Integer} - The frame the {@link Two.ImageSequence} should start with.\r\n     */\r\n    _firstFrame: 0,\r\n\r\n    /**\r\n     * @name Two.ImageSequence#_lastFrame\r\n     * @private\r\n     * @property {Integer} - The frame the {@link Two.ImageSequence} should end with.\r\n     */\r\n    _lastFrame: 0,\r\n\r\n    /**\r\n     * @name Two.ImageSequence#_playing\r\n     * @private\r\n     * @property {Boolean} - Dictates whether the {@link Two.ImageSequence} should loop or not.\r\n     */\r\n    _loop: true,\r\n\r\n    // Exposed through getter-setter\r\n\r\n    /**\r\n     * @name Two.ImageSequence#_textures\r\n     * @private\r\n     * @see {@link Two.ImageSequence#textures}\r\n     */\r\n    _textures: null,\r\n\r\n    /**\r\n     * @name Two.ImageSequence#_frameRate\r\n     * @private\r\n     * @see {@link Two.ImageSequence#frameRate}\r\n     */\r\n    _frameRate: 0,\r\n\r\n    /**\r\n     * @name Two.ImageSequence#_origin\r\n     * @private\r\n     * @see {@link Two.ImageSequence#origin}\r\n     */\r\n    _origin: null,\r\n\r\n    constructor: ImageSequence,\r\n\r\n    /**\r\n     * @name Two.ImageSequence#play\r\n     * @function\r\n     * @param {Integer} [firstFrame=0] - The index of the frame to start the animation with.\r\n     * @param {Integer} [lastFrame] - The index of the frame to end the animation with. Defaults to the last item in the {@link Two.ImageSequence#textures}.\r\n     * @param {Function} [onLastFrame] - Optional callback function to be triggered after playing the last frame. This fires multiple times when the image sequence is looped.\r\n     * @description Initiate animation playback of a {@link Two.ImageSequence}.\r\n     */\r\n    play: function(firstFrame, lastFrame, onLastFrame) {\r\n\r\n      this._playing = true;\r\n      this._firstFrame = 0;\r\n      this._lastFrame = this.amount - 1;\r\n      this._startTime = _.performance.now();\r\n\r\n      if (_.isNumber(firstFrame)) {\r\n        this._firstFrame = firstFrame;\r\n      }\r\n      if (_.isNumber(lastFrame)) {\r\n        this._lastFrame = lastFrame;\r\n      }\r\n      if (_.isFunction(onLastFrame)) {\r\n        this._onLastFrame = onLastFrame;\r\n      } else {\r\n        delete this._onLastFrame;\r\n      }\r\n\r\n      if (this._index !== this._firstFrame) {\r\n        this._startTime -= 1000 * Math.abs(this._index - this._firstFrame)\r\n          / this._frameRate;\r\n      }\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.ImageSequence#pause\r\n     * @function\r\n     * @description Halt animation playback of a {@link Two.ImageSequence}.\r\n     */\r\n    pause: function() {\r\n\r\n      this._playing = false;\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.ImageSequence#stop\r\n     * @function\r\n     * @description Halt animation playback of a {@link Two.ImageSequence} and set the current frame back to the first frame.\r\n     */\r\n    stop: function() {\r\n\r\n      this._playing = false;\r\n      this._index = this._firstFrame;\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.ImageSequence#clone\r\n     * @function\r\n     * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\r\n     * @returns {Two.ImageSequence}\r\n     * @description Create a new instance of {@link Two.ImageSequence} with the same properties of the current image sequence.\r\n     */\r\n    clone: function(parent) {\r\n\r\n      var clone = new ImageSequence(this.textures, this.translation.x,\r\n        this.translation.y, this.frameRate);\r\n\r\n      clone._loop = this._loop;\r\n\r\n      if (this._playing) {\r\n        clone.play();\r\n      }\r\n\r\n      if (parent) {\r\n        parent.add(clone);\r\n      }\r\n\r\n      return clone;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.ImageSequence#toObject\r\n     * @function\r\n     * @returns {Object}\r\n     * @description Return a JSON compatible plain object that represents the path.\r\n     */\r\n    toObject: function() {\r\n      var object = Rectangle.prototype.toObject.call(this);\r\n      object.textures = _.map(this.textures, function(texture) {\r\n        return texture.toObject();\r\n      });\r\n      object.frameRate = this.frameRate;\r\n      object.index = this.index;\r\n      object._firstFrame = this._firstFrame;\r\n      object._lastFrame = this._lastFrame;\r\n      object._loop = this._loop;\r\n      return object;\r\n    },\r\n\r\n    /**\r\n     * @name Two.ImageSequence#_update\r\n     * @function\r\n     * @private\r\n     * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\r\n     * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\r\n     * @nota-bene Try not to call this method more than once a frame.\r\n     */\r\n    _update: function() {\r\n\r\n      var effects = this._textures;\r\n      var width, height, elapsed, amount, duration, texture;\r\n      var index, frames;\r\n\r\n      if (this._flagTextures) {\r\n        this._amount = effects.length;\r\n      }\r\n\r\n      if (this._flagFrameRate) {\r\n        this._duration = 1000 * this._amount / this._frameRate;\r\n      }\r\n\r\n      if (this._playing && this._frameRate > 0) {\r\n\r\n        amount = this._amount;\r\n\r\n        if (_.isNaN(this._lastFrame)) {\r\n          this._lastFrame = amount - 1;\r\n        }\r\n\r\n        // TODO: Offload perf logic to instance of `Two`.\r\n        elapsed = _.performance.now() - this._startTime;\r\n        frames = this._lastFrame + 1;\r\n        duration = 1000 * (frames - this._firstFrame) / this._frameRate;\r\n\r\n        if (this._loop) {\r\n          elapsed = elapsed % duration;\r\n        } else {\r\n          elapsed = Math.min(elapsed, duration);\r\n        }\r\n\r\n        index = _.lerp(this._firstFrame, frames, elapsed / duration);\r\n        index = Math.floor(index);\r\n\r\n        if (index !== this._index) {\r\n\r\n          this._index = index;\r\n          texture = effects[this._index];\r\n\r\n          if (texture.loaded) {\r\n\r\n            width = texture.image.width;\r\n            height = texture.image.height;\r\n\r\n            if (this.width !== width) {\r\n              this.width = width;\r\n            }\r\n            if (this.height !== height) {\r\n              this.height = height;\r\n            }\r\n\r\n            this.fill = texture;\r\n\r\n            if (index >= this._lastFrame - 1 && this._onLastFrame) {\r\n              this._onLastFrame();  // Shortcut for chainable sprite animations\r\n            }\r\n\r\n          }\r\n\r\n        }\r\n\r\n      } else if (this._flagIndex || !(this.fill instanceof Two.Texture)) {\r\n\r\n        texture = effects[this._index];\r\n\r\n        if (texture.loaded) {\r\n\r\n          width = texture.image.width;\r\n          height = texture.image.height;\r\n\r\n          if (this.width !== width) {\r\n            this.width = width;\r\n          }\r\n          if (this.height !== height) {\r\n            this.height = height;\r\n          }\r\n\r\n        }\r\n\r\n        this.fill = texture;\r\n\r\n      }\r\n\r\n      Rectangle.prototype._update.call(this);\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.ImageSequence#flagReset\r\n     * @function\r\n     * @private\r\n     * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\r\n     */\r\n    flagReset: function() {\r\n\r\n      this._flagTextures = this._flagFrameRate = false;\r\n      Rectangle.prototype.flagReset.call(this);\r\n\r\n      return this;\r\n\r\n    }\r\n\r\n  });\r\n\r\n  ImageSequence.MakeObservable(ImageSequence.prototype);\r\n\r\n})((typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : (undefined || self || window)).Two);\r\n\n(function(Two) {\r\n\r\n  // Constants\r\n\r\n  var min = Math.min, max = Math.max;\r\n  var _ = Two.Utils;\r\n\r\n  /**\r\n   * @class\r\n   * @name Two.Group.Children\r\n   * @extends Two.Utils.Collection\r\n   * @description A children collection which is accesible both by index and by object `id`.\r\n   */\r\n  var Children = function() {\r\n\r\n    Two.Utils.Collection.apply(this, arguments);\r\n\r\n    Object.defineProperty(this, '_events', {\r\n      value : {},\r\n      enumerable: false\r\n    });\r\n\r\n    /**\r\n     * @name Two.Group.Children#ids\r\n     * @property {Object} - Map of all elements in the list keyed by `id`s.\r\n     */\r\n    this.ids = {};\r\n\r\n    this.on(Two.Events.insert, this.attach);\r\n    this.on(Two.Events.remove, this.detach);\r\n    Children.prototype.attach.apply(this, arguments);\r\n\r\n  };\r\n\r\n  Children.prototype = new Two.Utils.Collection();\r\n\r\n  _.extend(Children.prototype, {\r\n\r\n    constructor: Children,\r\n\r\n    /**\r\n     * @function\r\n     * @name Two.Group.Children#attach\r\n     * @param {Two.Shape[]}\r\n     * @description Adds elements to the `ids` map.\r\n     */\r\n    attach: function(children) {\r\n      for (var i = 0; i < children.length; i++) {\r\n        this.ids[children[i].id] = children[i];\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @function\r\n     * @name Two.Group.Children#detach\r\n     * @param {Two.Shape[]}\r\n     * @description Removes elements to the `ids` map.\r\n     */\r\n    detach: function(children) {\r\n      for (var i = 0; i < children.length; i++) {\r\n        delete this.ids[children[i].id];\r\n      }\r\n      return this;\r\n    }\r\n\r\n  });\r\n\r\n  /**\r\n   * @class\r\n   * @name Two.Group\r\n   */\r\n  var Group = Two.Group = function(children) {\r\n\r\n    Two.Shape.call(this, true);\r\n\r\n    this._renderer.type = 'group';\r\n\r\n    /**\r\n     * @name Two.Group#additions\r\n     * @property {Two.Shape[]}\r\n     * @description An automatically updated list of children that need to be appended to the renderer's scenegraph.\r\n     */\r\n    this.additions = [];\r\n\r\n    /**\r\n     * @name Two.Group#subtractions\r\n     * @property {Two.Shape[]}\r\n     * @description An automatically updated list of children that need to be removed from the renderer's scenegraph.\r\n     */\r\n    this.subtractions = [];\r\n\r\n    /**\r\n     * @name Two.Group#additions\r\n     * @property {Two.Group.Children[]}\r\n     * @description A list of all the children in the scenegraph.\r\n     * @nota-bene Ther order of this list indicates the order each element is rendered to the screen.\r\n     */\r\n    this.children = _.isArray(children) ? children : arguments;\r\n\r\n  };\r\n\r\n  _.extend(Group, {\r\n\r\n    Children: Children,\r\n\r\n    /**\r\n     * @name Two.Group.InsertChildren\r\n     * @function\r\n     * @description Cached method to let renderers know children have been added to a {@link Two.Group}.\r\n     */\r\n    InsertChildren: function(children) {\r\n      for (var i = 0; i < children.length; i++) {\r\n        replaceParent.call(this, children[i], this);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @name Two.Group.RemoveChildren\r\n     * @function\r\n     * @description Cached method to let renderers know children have been removed from a {@link Two.Group}.\r\n     */\r\n    RemoveChildren: function(children) {\r\n      for (var i = 0; i < children.length; i++) {\r\n        replaceParent.call(this, children[i]);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @name Two.Group.OrderChildren\r\n     * @function\r\n     * @description Cached method to let renderers know order has been updated on a {@link Two.Group}.\r\n     */\r\n    OrderChildren: function(children) {\r\n      this._flagOrder = true;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Group.Properties\r\n     * @property {String[]} - A list of properties that are on every {@link Two.Group}.\r\n     */\r\n    Properties: [\r\n      'fill',\r\n      'stroke',\r\n      'linewidth',\r\n      'visible',\r\n      'cap',\r\n      'join',\r\n      'miter',\r\n\r\n      'closed',\r\n      'curved',\r\n      'automatic'\r\n    ],\r\n\r\n    /**\r\n     * @name Two.Group.MakeObservable\r\n     * @function\r\n     * @param {Object} object - The object to make observable.\r\n     * @description Convenience function to apply observable qualities of a {@link Two.Group} to any object. Handy if you'd like to extend the {@link Two.Group} class on a custom class.\r\n     */\r\n    MakeObservable: function(object) {\r\n\r\n      var properties = Two.Group.Properties;\r\n\r\n      Object.defineProperty(object, 'opacity', {\r\n\r\n        enumerable: true,\r\n\r\n        get: function() {\r\n          return this._opacity;\r\n        },\r\n\r\n        set: function(v) {\r\n          this._flagOpacity = this._opacity !== v;\r\n          this._opacity = v;\r\n        }\r\n\r\n      });\r\n\r\n      Object.defineProperty(object, 'beginning', {\r\n\r\n        enumerable: true,\r\n\r\n        get: function() {\r\n          return this._beginning;\r\n        },\r\n\r\n        set: function(v) {\r\n          this._flagBeginning = this._beginning !== v;\r\n          this._beginning = v;\r\n        }\r\n\r\n      });\r\n\r\n      Object.defineProperty(object, 'ending', {\r\n\r\n        enumerable: true,\r\n\r\n        get: function() {\r\n          return this._ending;\r\n        },\r\n\r\n        set: function(v) {\r\n          this._flagEnding = this._ending !== v;\r\n          this._ending = v;\r\n        }\r\n\r\n      });\r\n\r\n      Object.defineProperty(object, 'length', {\r\n\r\n        enumerable: true,\r\n\r\n        get: function() {\r\n          if (this._flagLength || this._length <= 0) {\r\n            this._length = 0;\r\n            if (!this.children) {\r\n              return this._length;\r\n            }\r\n            for (var i = 0; i < this.children.length; i++) {\r\n              var child = this.children[i];\r\n              this._length += child.length;\r\n            }\r\n          }\r\n          return this._length;\r\n        }\r\n\r\n      });\r\n\r\n      Two.Shape.MakeObservable(object);\r\n      Group.MakeGetterSetters(object, properties);\r\n\r\n      Object.defineProperty(object, 'children', {\r\n\r\n        enumerable: true,\r\n\r\n        get: function() {\r\n          return this._children;\r\n        },\r\n\r\n        set: function(children) {\r\n\r\n          var insertChildren = _.bind(Group.InsertChildren, this);\r\n          var removeChildren = _.bind(Group.RemoveChildren, this);\r\n          var orderChildren = _.bind(Group.OrderChildren, this);\r\n\r\n          if (this._children) {\r\n            this._children.unbind();\r\n          }\r\n\r\n          this._children = new Children(children);\r\n          this._children.bind(Two.Events.insert, insertChildren);\r\n          this._children.bind(Two.Events.remove, removeChildren);\r\n          this._children.bind(Two.Events.order, orderChildren);\r\n\r\n        }\r\n\r\n      });\r\n\r\n      Object.defineProperty(object, 'mask', {\r\n\r\n        enumerable: true,\r\n\r\n        get: function() {\r\n          return this._mask;\r\n        },\r\n\r\n        set: function(v) {\r\n          this._mask = v;\r\n          this._flagMask = true;\r\n          if (!v.clip) {\r\n            v.clip = true;\r\n          }\r\n        }\r\n\r\n      });\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Group.MakeGetterSetters\r\n     * @function\r\n     * @param {Two.Group} group - The group to apply getters and setters.\r\n     * @param {Object} properties - A key / value object containing properties to inherit.\r\n     */\r\n    MakeGetterSetters: function(group, properties) {\r\n\r\n      if (!_.isArray(properties)) {\r\n        properties = [properties];\r\n      }\r\n\r\n      _.each(properties, function(k) {\r\n        Group.MakeGetterSetter(group, k);\r\n      });\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Group.MakeGetterSetter\r\n     * @function\r\n     * @param {Two.Group} group - The group to apply getters and setters.\r\n     * @param {String} key - The key which will become a property on the group.\r\n     */\r\n    MakeGetterSetter: function(group, key) {\r\n\r\n      var secret = '_' + key;\r\n\r\n      Object.defineProperty(group, key, {\r\n\r\n        enumerable: true,\r\n\r\n        get: function() {\r\n          return this[secret];\r\n        },\r\n\r\n        set: function(v) {\r\n          this[secret] = v;\r\n          // Trickle down styles\r\n          for (var i = 0; i < this.children.length; i++) {\r\n            var child = this.children[i];\r\n            child[key] = v;\r\n          }\r\n        }\r\n\r\n      });\r\n\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(Group.prototype, Two.Shape.prototype, {\r\n\r\n    // Flags\r\n    // http://en.wikipedia.org/wiki/Flag\r\n\r\n    /**\r\n     * @name Two.Group#_flagAdditions\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Group#additions} need updating.\r\n     */\r\n    _flagAdditions: false,\r\n\r\n    /**\r\n     * @name Two.Group#_flagSubtractions\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Group#subtractions} need updating.\r\n     */\r\n    _flagSubtractions: false,\r\n\r\n    /**\r\n     * @name Two.Group#_flagOrder\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Group#order} need updating.\r\n     */\r\n    _flagOrder: false,\r\n\r\n    /**\r\n     * @name Two.Group#_flagOpacity\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Group#opacity} need updating.\r\n     */\r\n    _flagOpacity: true,\r\n\r\n    /**\r\n     * @name Two.Group#_flagBeginning\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Group#beginning} need updating.\r\n     */\r\n    _flagBeginning: false,\r\n\r\n    /**\r\n     * @name Two.Group#_flagEnding\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Group#ending} need updating.\r\n     */\r\n    _flagEnding: false,\r\n\r\n    /**\r\n     * @name Two.Group#_flagLength\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Group#length} need updating.\r\n     */\r\n    _flagLength: false,\r\n\r\n    /**\r\n     * @name Two.Group#_flagMask\r\n     * @private\r\n     * @property {Boolean} - Determines whether the {@link Two.Group#mask} need updating.\r\n     */\r\n    _flagMask: false,\r\n\r\n    // Underlying Properties\r\n\r\n    /**\r\n     * @name Two.Group#fill\r\n     * @property {(CssColor|Two.Gradient|Two.Texture)} - The value of what all child shapes should be filled in with.\r\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value} for more information on CSS Colors.\r\n     */\r\n    _fill: '#fff',\r\n\r\n    /**\r\n     * @name Two.Group#stroke\r\n     * @property {(CssColor|Two.Gradient|Two.Texture)} - The value of what all child shapes should be outlined in with.\r\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value} for more information on CSS Colors.\r\n     */\r\n    _stroke: '#000',\r\n\r\n    /**\r\n     * @name Two.Group#linewidth\r\n     * @property {Number} - The thickness in pixels of the stroke for all child shapes.\r\n     */\r\n    _linewidth: 1.0,\r\n\r\n    /**\r\n     * @name Two.Group#opacity\r\n     * @property {Number} - The opaqueness of all child shapes.\r\n     * @nota-bene Becomes multiplied by the individual child's opacity property.\r\n     */\r\n    _opacity: 1.0,\r\n\r\n    /**\r\n     * @name Two.Group#visible\r\n     * @property {Boolean} - Display the path or not.\r\n     * @nota-bene For {@link Two.CanvasRenderer} and {@link Two.WebGLRenderer} when set to false all updating is disabled improving performance dramatically with many objects in the scene.\r\n     */\r\n    _visible: true,\r\n\r\n    /**\r\n     * @name Two.Group#cap\r\n     * @property {String}\r\n     * @see {@link https://www.w3.org/TR/SVG11/painting.html#StrokeLinecapProperty}\r\n     */\r\n    _cap: 'round',\r\n\r\n    /**\r\n     * @name Two.Group#join\r\n     * @property {String}\r\n     * @see {@link https://www.w3.org/TR/SVG11/painting.html#StrokeLinejoinProperty}\r\n     */\r\n    _join: 'round',\r\n\r\n    /**\r\n     * @name Two.Group#miter\r\n     * @property {String}\r\n     * @see {@link https://www.w3.org/TR/SVG11/painting.html#StrokeMiterlimitProperty}\r\n     */\r\n    _miter: 4,\r\n\r\n    /**\r\n     * @name Two.Group#closed\r\n     * @property {Boolean} - Determines whether a final line is drawn between the final point in the `vertices` array and the first point of all child shapes.\r\n     */\r\n    _closed: true,\r\n\r\n    /**\r\n     * @name Two.Group#curved\r\n     * @property {Boolean} - When the child's path is `automatic = true` this boolean determines whether the lines between the points are curved or not.\r\n     */\r\n    _curved: false,\r\n\r\n    /**\r\n     * @name Two.Group#automatic\r\n     * @property {Boolean} - Determines whether or not Two.js should calculate curves, lines, and commands automatically for you or to let the developer manipulate them for themselves.\r\n     */\r\n    _automatic: true,\r\n\r\n    /**\r\n     * @name Two.Group#beginning\r\n     * @property {Number} - Number between zero and one to state the beginning of where the path is rendered.\r\n     * @description {@link Two.Group#beginning} is a percentage value that represents at what percentage into all child shapes should the renderer start drawing.\r\n     * @nota-bene This is great for animating in and out stroked paths in conjunction with {@link Two.Group#ending}.\r\n     */\r\n    _beginning: 0,\r\n\r\n    /**\r\n     * @name Two.Group#ending\r\n     * @property {Number} - Number between zero and one to state the ending of where the path is rendered.\r\n     * @description {@link Two.Group#ending} is a percentage value that represents at what percentage into all child shapes should the renderer start drawing.\r\n     * @nota-bene This is great for animating in and out stroked paths in conjunction with {@link Two.Group#beginning}.\r\n     */\r\n    _ending: 1.0,\r\n\r\n    /**\r\n     * @name Two.Group#length\r\n     * @property {Number} - The sum of distances between all child lengths.\r\n     */\r\n    _length: 0,\r\n\r\n    /**\r\n     * @name Two.Group#mask\r\n     * @property {Two.Shape} - The Two.js object to clip from a group's rendering.\r\n     */\r\n    _mask: null,\r\n\r\n    constructor: Group,\r\n\r\n    /**\r\n     * @name Two.Group#clone\r\n     * @function\r\n     * @param {Two.Group} [parent] - The parent group or scene to add the clone to.\r\n     * @returns {Two.Group}\r\n     * @description Create a new instance of {@link Two.Group} with the same properties of the current group.\r\n     */\r\n    clone: function(parent) {\r\n\r\n      // /**\r\n      //  * TODO: Group has a gotcha in that it's at the moment required to be bound to\r\n      //  * an instance of two in order to add elements correctly. This needs to\r\n      //  * be rethought and fixed.\r\n      //  */\r\n\r\n      var clone = new Group();\r\n      var children = _.map(this.children, function(child) {\r\n        return child.clone();\r\n      });\r\n\r\n      clone.add(children);\r\n\r\n      clone.opacity = this.opacity;\r\n\r\n      if (this.mask) {\r\n        clone.mask = this.mask;\r\n      }\r\n\r\n      clone.translation.copy(this.translation);\r\n      clone.rotation = this.rotation;\r\n      clone.scale = this.scale;\r\n      clone.className = this.className;\r\n\r\n      if (this.matrix.manual) {\r\n        clone.matrix.copy(this.matrix);\r\n      }\r\n\r\n      if (parent) {\r\n        parent.add(clone);\r\n      }\r\n\r\n      return clone._update();\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Group#toObject\r\n     * @function\r\n     * @returns {Object}\r\n     * @description Return a JSON compatible plain object that represents the group.\r\n     */\r\n    toObject: function() {\r\n\r\n      var result = {\r\n        children: [],\r\n        translation: this.translation.toObject(),\r\n        rotation: this.rotation,\r\n        scale: this.scale instanceof Two.Vector ? this.scale.toObject() : this.scale,\r\n        opacity: this.opacity,\r\n        className: this.className,\r\n        mask: (this.mask ? this.mask.toObject() : null)\r\n      };\r\n\r\n      if (this.matrix.manual) {\r\n        result.matrix = this.matrix.toObject();\r\n      }\r\n\r\n      _.each(this.children, function(child, i) {\r\n        result.children[i] = child.toObject();\r\n      }, this);\r\n\r\n      return result;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Group#corner\r\n     * @function\r\n     * @description Orient the children of the group to the upper left-hand corner of that group.\r\n     */\r\n    corner: function() {\r\n\r\n      var rect = this.getBoundingClientRect(true);\r\n      var corner = { x: rect.left, y: rect.top };\r\n\r\n      this.children.forEach(function(child) {\r\n        child.translation.sub(corner);\r\n      });\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Group#center\r\n     * @function\r\n     * @description Orient the children of the group to the center of that group.\r\n     */\r\n    center: function() {\r\n\r\n      var rect = this.getBoundingClientRect(true);\r\n\r\n      rect.centroid = {\r\n        x: rect.left + rect.width / 2 - this.translation.x,\r\n        y: rect.top + rect.height / 2 - this.translation.y\r\n      };\r\n\r\n      this.children.forEach(function(child) {\r\n        if (child.isShape) {\r\n          child.translation.sub(rect.centroid);\r\n        }\r\n      });\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Group#getById\r\n     * @function\r\n     * @description Recursively search for id. Returns the first element found.\r\n     * @returns {Two.Shape} - Or `null` if nothing is found.\r\n     */\r\n    getById: function (id) {\r\n      var found = null;\r\n      function search(node) {\r\n        if (node.id === id) {\r\n          return node;\r\n        } else if (node.children) {\r\n          for (var i = 0; i < node.children.length; i++) {\r\n            found = search(node.children[i], id);\r\n            if (found) {\r\n              return found;\r\n            }\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n      return search(this);\r\n    },\r\n\r\n    /**\r\n     * @name Two.Group#getByClassName\r\n     * @function\r\n     * @description Recursively search for classes. Returns an array of matching elements.\r\n     * @returns {Two.Shape[]} - Or empty array if nothing is found.\r\n     */\r\n    getByClassName: function(className) {\r\n      var found = [];\r\n      function search(node) {\r\n        if (_.indexOf(node.classList, className) >= 0) {\r\n          found.push(node);\r\n        }\r\n        if (node.children) {\r\n          for (var i = 0; i < node.children.length; i++) {\r\n            var child = node.children[i];\r\n            search(child, className);\r\n          }\r\n        }\r\n        return found;\r\n      }\r\n      return search(this);\r\n    },\r\n\r\n    /**\r\n     * @name Two.Group#getByType\r\n     * @function\r\n     * @description Recursively search for children of a specific type, e.g. {@link Two.Path}. Pass a reference to this type as the param. Returns an array of matching elements.\r\n     * @returns {Two.Shape[]} - Empty array if nothing is found.\r\n     */\r\n    getByType: function(type) {\r\n      var found = [];\r\n      function search(node) {\r\n        if (node instanceof type) {\r\n          found.push(node);\r\n        }\r\n        if (node.children) {\r\n          for (var i = 0; i < node.children.length; i++) {\r\n            var child = node.children[i];\r\n            search(child);\r\n          }\r\n        }\r\n        return found;\r\n      }\r\n      return search(this, type);\r\n    },\r\n\r\n    /**\r\n     * @name Two.Group#add\r\n     * @function\r\n     * @param {Two.Shape[]} objects - An array of objects to be added. Can be also added as individual arguments.\r\n     * @description Add objects to the group.\r\n     */\r\n    add: function(objects) {\r\n\r\n      // Allow to pass multiple objects either as array or as multiple arguments\r\n      // If it's an array also create copy of it in case we're getting passed\r\n      // a childrens array directly.\r\n      if (!(objects instanceof Array)) {\r\n        objects = _.toArray(arguments);\r\n      } else {\r\n        objects = objects.slice();\r\n      }\r\n\r\n      // Add the objects\r\n      for (var i = 0; i < objects.length; i++) {\r\n        var child = objects[i];\r\n        if (!(child && child.id)) {\r\n          continue;\r\n        }\r\n        var index = _.indexOf(this.children, child);\r\n        if (index >= 0) {\r\n          this.children.splice(index, 1);\r\n        }\r\n        this.children.push(child);\r\n      }\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Group#add\r\n     * @function\r\n     * @param {Two.Shape[]} objects - An array of objects to be removed. Can be also removed as individual arguments.\r\n     * @description Remove objects from the group.\r\n     */\r\n    remove: function(objects) {\r\n\r\n      var l = arguments.length,\r\n        grandparent = this.parent;\r\n\r\n      // Allow to call remove without arguments\r\n      // This will detach the object from its own parent.\r\n      if (l <= 0 && grandparent) {\r\n        grandparent.remove(this);\r\n        return this;\r\n      }\r\n\r\n      // Allow to pass multiple objects either as array or as multiple arguments\r\n      // If it's an array also create copy of it in case we're getting passed\r\n      // a childrens array directly.\r\n      if (!(objects instanceof Array)) {\r\n        objects = _.toArray(arguments);\r\n      } else {\r\n        objects = objects.slice();\r\n      }\r\n\r\n      // Remove the objects\r\n      for (var i = 0; i < objects.length; i++) {\r\n        if (!objects[i] || !(this.children.ids[objects[i].id])) continue;\r\n        this.children.splice(_.indexOf(this.children, objects[i]), 1);\r\n      }\r\n\r\n      return this;\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Group#getBoundingClientRect\r\n     * @function\r\n     * @param {Boolean} [shallow=false] - Describes whether to calculate off local matrix or world matrix.\r\n     * @returns {Object} - Returns object with top, left, right, bottom, width, height attributes.\r\n     * @description Return an object with top, left, right, bottom, width, and height parameters of the group.\r\n     */\r\n    getBoundingClientRect: function(shallow) {\r\n      var rect;\r\n\r\n      // TODO: Update this to not __always__ update. Just when it needs to.\r\n      this._update(true);\r\n\r\n      // Variables need to be defined here, because of nested nature of groups.\r\n      var left = Infinity, right = -Infinity,\r\n          top = Infinity, bottom = -Infinity;\r\n\r\n      var regex = Two.Texture.RegularExpressions.effect;\r\n\r\n      for (var i = 0; i < this.children.length; i++) {\r\n\r\n        var child = this.children[i];\r\n\r\n        if (!child.visible || regex.test(child._renderer.type)) {\r\n          continue;\r\n        }\r\n\r\n        rect = child.getBoundingClientRect(shallow);\r\n\r\n        if (!_.isNumber(rect.top)   || !_.isNumber(rect.left)   ||\r\n            !_.isNumber(rect.right) || !_.isNumber(rect.bottom)) {\r\n          continue;\r\n        }\r\n\r\n        top = min(rect.top, top);\r\n        left = min(rect.left, left);\r\n        right = max(rect.right, right);\r\n        bottom = max(rect.bottom, bottom);\r\n\r\n      }\r\n\r\n      return {\r\n        top: top,\r\n        left: left,\r\n        right: right,\r\n        bottom: bottom,\r\n        width: right - left,\r\n        height: bottom - top\r\n      };\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Group#noFill\r\n     * @function\r\n     * @description Apply `noFill` method to all child shapes.\r\n     */\r\n    noFill: function() {\r\n      this.children.forEach(function(child) {\r\n        child.noFill();\r\n      });\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Group#noStroke\r\n     * @function\r\n     * @description Apply `noStroke` method to all child shapes.\r\n     */\r\n    noStroke: function() {\r\n      this.children.forEach(function(child) {\r\n        child.noStroke();\r\n      });\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Group#subdivide\r\n     * @function\r\n     * @description Apply `subdivide` method to all child shapes.\r\n     */\r\n    subdivide: function() {\r\n      var args = arguments;\r\n      this.children.forEach(function(child) {\r\n        child.subdivide.apply(child, args);\r\n      });\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @name Two.Group#_update\r\n     * @function\r\n     * @private\r\n     * @param {Boolean} [bubbles=false] - Force the parent to `_update` as well.\r\n     * @description This is called before rendering happens by the renderer. This applies all changes necessary so that rendering is up-to-date but not updated more than it needs to be.\r\n     * @nota-bene Try not to call this method more than once a frame.\r\n     */\r\n    _update: function() {\r\n\r\n      if (this._flagBeginning || this._flagEnding) {\r\n\r\n        var beginning = Math.min(this._beginning, this._ending);\r\n        var ending = Math.max(this._beginning, this._ending);\r\n        var length = this.length;\r\n        var sum = 0;\r\n\r\n        var bd = beginning * length;\r\n        var ed = ending * length;\r\n        var distance = (ed - bd);\r\n\r\n        for (var i = 0; i < this.children.length; i++) {\r\n\r\n          var child = this.children[i];\r\n          var l = child.length;\r\n\r\n          if (bd > sum + l) {\r\n            child.beginning = 1;\r\n            child.ending = 1;\r\n          } else if (ed < sum) {\r\n            child.beginning = 0;\r\n            child.ending = 0;\r\n          } else if (bd > sum && bd < sum + l) {\r\n            child.beginning = (bd - sum) / l;\r\n            child.ending = 1;\r\n          } else if (ed > sum && ed < sum + l) {\r\n            child.beginning = 0;\r\n            child.ending = (ed - sum) / l;\r\n          } else {\r\n            child.beginning = 0;\r\n            child.ending = 1;\r\n          }\r\n\r\n          sum += l;\r\n\r\n        }\r\n\r\n      }\r\n\r\n      return Two.Shape.prototype._update.apply(this, arguments);\r\n\r\n    },\r\n\r\n    /**\r\n     * @name Two.Group#flagReset\r\n     * @function\r\n     * @private\r\n     * @description Called internally to reset all flags. Ensures that only properties that change are updated before being sent to the renderer.\r\n     */\r\n    flagReset: function() {\r\n\r\n      if (this._flagAdditions) {\r\n        this.additions.length = 0;\r\n        this._flagAdditions = false;\r\n      }\r\n\r\n      if (this._flagSubtractions) {\r\n        this.subtractions.length = 0;\r\n        this._flagSubtractions = false;\r\n      }\r\n\r\n      this._flagOrder = this._flagMask = this._flagOpacity =\r\n        this._flagBeginning = this._flagEnding = false;\r\n\r\n      Two.Shape.prototype.flagReset.call(this);\r\n\r\n      return this;\r\n\r\n    }\r\n\r\n  });\r\n\r\n  Group.MakeObservable(Group.prototype);\r\n\r\n  // /**\r\n  //  * Helper function used to sync parent-child relationship within the\r\n  //  * `Two.Group.children` object.\r\n  //  *\r\n  //  * Set the parent of the passed object to another object\r\n  //  * and updates parent-child relationships\r\n  //  * Calling with one arguments will simply remove the parenting\r\n  //  */\r\n  function replaceParent(child, newParent) {\r\n\r\n    var parent = child.parent;\r\n    var index;\r\n\r\n    if (parent === newParent) {\r\n      add();\r\n      return;\r\n    }\r\n\r\n    if (parent && parent.children.ids[child.id]) {\r\n\r\n      index = _.indexOf(parent.children, child);\r\n      parent.children.splice(index, 1);\r\n\r\n      splice();\r\n\r\n    }\r\n\r\n    if (newParent) {\r\n      add();\r\n      return;\r\n    }\r\n\r\n    splice();\r\n\r\n    if (parent._flagAdditions && parent.additions.length === 0) {\r\n      parent._flagAdditions = false;\r\n    }\r\n    if (parent._flagSubtractions && parent.subtractions.length === 0) {\r\n      parent._flagSubtractions = false;\r\n    }\r\n\r\n    delete child.parent;\r\n\r\n    function add() {\r\n\r\n      if (newParent.subtractions.length > 0) {\r\n        index = _.indexOf(newParent.subtractions, child);\r\n\r\n        if (index >= 0) {\r\n          newParent.subtractions.splice(index, 1);\r\n        }\r\n      }\r\n\r\n      if (newParent.additions.length > 0) {\r\n        index = _.indexOf(newParent.additions, child);\r\n\r\n        if (index >= 0) {\r\n          newParent.additions.splice(index, 1);\r\n        }\r\n      }\r\n\r\n      child.parent = newParent;\r\n      newParent.additions.push(child);\r\n      newParent._flagAdditions = true;\r\n\r\n    }\r\n\r\n    function splice() {\r\n\r\n      index = _.indexOf(parent.additions, child);\r\n\r\n      if (index >= 0) {\r\n        parent.additions.splice(index, 1);\r\n      }\r\n\r\n      index = _.indexOf(parent.subtractions, child);\r\n\r\n      if (index < 0) {\r\n        parent.subtractions.push(child);\r\n        parent._flagSubtractions = true;\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n})((typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : (undefined || self || window)).Two);\r\n\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((undefined || window).Two);\r\n\n\n//# sourceURL=webpack://nathankim7.github.io/./node_modules/two.js/build/two.module.js?");

/***/ }),

/***/ "./src/App.vue":
/*!*********************!*\
  !*** ./src/App.vue ***!
  \*********************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony import */ var _App_vue_vue_type_template_id_7ba5bd90__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./App.vue?vue&type=template&id=7ba5bd90 */ \"./src/App.vue?vue&type=template&id=7ba5bd90\");\n/* harmony import */ var _App_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./App.vue?vue&type=script&lang=js */ \"./src/App.vue?vue&type=script&lang=js\");\n/* harmony import */ var _App_vue_vue_type_style_index_0_id_7ba5bd90_lang_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./App.vue?vue&type=style&index=0&id=7ba5bd90&lang=css */ \"./src/App.vue?vue&type=style&index=0&id=7ba5bd90&lang=css\");\n\n\n\n\n;\n_App_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__.default.render = _App_vue_vue_type_template_id_7ba5bd90__WEBPACK_IMPORTED_MODULE_0__.render\n/* hot reload */\nif (false) {}\n\n_App_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__.default.__file = \"src/App.vue\"\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_App_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__.default);\n\n//# sourceURL=webpack://nathankim7.github.io/./src/App.vue?");

/***/ }),

/***/ "./src/components/Ants.vue":
/*!*********************************!*\
  !*** ./src/components/Ants.vue ***!
  \*********************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony import */ var _Ants_vue_vue_type_template_id_8c764cc8__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Ants.vue?vue&type=template&id=8c764cc8 */ \"./src/components/Ants.vue?vue&type=template&id=8c764cc8\");\n/* harmony import */ var _Ants_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Ants.vue?vue&type=script&lang=js */ \"./src/components/Ants.vue?vue&type=script&lang=js\");\n\n\n\n_Ants_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__.default.render = _Ants_vue_vue_type_template_id_8c764cc8__WEBPACK_IMPORTED_MODULE_0__.render\n/* hot reload */\nif (false) {}\n\n_Ants_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__.default.__file = \"src/components/Ants.vue\"\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_Ants_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__.default);\n\n//# sourceURL=webpack://nathankim7.github.io/./src/components/Ants.vue?");

/***/ }),

/***/ "./src/App.vue?vue&type=script&lang=js":
/*!*********************************************!*\
  !*** ./src/App.vue?vue&type=script&lang=js ***!
  \*********************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./src/App.vue?vue&type=script&lang=js .default */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* reexport safe */ _node_modules_babel_loader_lib_index_js_clonedRuleSet_1_use_node_modules_vue_loader_dist_index_js_ruleSet_1_rules_8_use_0_App_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__.default\n/* harmony export */ });\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_1_use_node_modules_vue_loader_dist_index_js_ruleSet_1_rules_8_use_0_App_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./App.vue?vue&type=script&lang=js */ \"./node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./src/App.vue?vue&type=script&lang=js\");\n \n\n//# sourceURL=webpack://nathankim7.github.io/./src/App.vue?");

/***/ }),

/***/ "./src/components/Ants.vue?vue&type=script&lang=js":
/*!*********************************************************!*\
  !*** ./src/components/Ants.vue?vue&type=script&lang=js ***!
  \*********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./src/components/Ants.vue?vue&type=script&lang=js .default */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* reexport safe */ _node_modules_babel_loader_lib_index_js_clonedRuleSet_1_use_node_modules_vue_loader_dist_index_js_ruleSet_1_rules_8_use_0_Ants_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__.default\n/* harmony export */ });\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_1_use_node_modules_vue_loader_dist_index_js_ruleSet_1_rules_8_use_0_Ants_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./Ants.vue?vue&type=script&lang=js */ \"./node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./src/components/Ants.vue?vue&type=script&lang=js\");\n \n\n//# sourceURL=webpack://nathankim7.github.io/./src/components/Ants.vue?");

/***/ }),

/***/ "./src/App.vue?vue&type=template&id=7ba5bd90":
/*!***************************************************!*\
  !*** ./src/App.vue?vue&type=template&id=7ba5bd90 ***!
  \***************************************************/
/*! namespace exports */
/*! export render [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./src/App.vue?vue&type=template&id=7ba5bd90 .render */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"render\": () => /* reexport safe */ _node_modules_babel_loader_lib_index_js_clonedRuleSet_1_use_node_modules_vue_loader_dist_templateLoader_js_ruleSet_1_rules_2_node_modules_vue_loader_dist_index_js_ruleSet_1_rules_8_use_0_App_vue_vue_type_template_id_7ba5bd90__WEBPACK_IMPORTED_MODULE_0__.render\n/* harmony export */ });\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_1_use_node_modules_vue_loader_dist_templateLoader_js_ruleSet_1_rules_2_node_modules_vue_loader_dist_index_js_ruleSet_1_rules_8_use_0_App_vue_vue_type_template_id_7ba5bd90__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./App.vue?vue&type=template&id=7ba5bd90 */ \"./node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./src/App.vue?vue&type=template&id=7ba5bd90\");\n\n\n//# sourceURL=webpack://nathankim7.github.io/./src/App.vue?");

/***/ }),

/***/ "./src/components/Ants.vue?vue&type=template&id=8c764cc8":
/*!***************************************************************!*\
  !*** ./src/components/Ants.vue?vue&type=template&id=8c764cc8 ***!
  \***************************************************************/
/*! namespace exports */
/*! export render [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./src/components/Ants.vue?vue&type=template&id=8c764cc8 .render */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"render\": () => /* reexport safe */ _node_modules_babel_loader_lib_index_js_clonedRuleSet_1_use_node_modules_vue_loader_dist_templateLoader_js_ruleSet_1_rules_2_node_modules_vue_loader_dist_index_js_ruleSet_1_rules_8_use_0_Ants_vue_vue_type_template_id_8c764cc8__WEBPACK_IMPORTED_MODULE_0__.render\n/* harmony export */ });\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_1_use_node_modules_vue_loader_dist_templateLoader_js_ruleSet_1_rules_2_node_modules_vue_loader_dist_index_js_ruleSet_1_rules_8_use_0_Ants_vue_vue_type_template_id_8c764cc8__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./Ants.vue?vue&type=template&id=8c764cc8 */ \"./node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./src/components/Ants.vue?vue&type=template&id=8c764cc8\");\n\n\n//# sourceURL=webpack://nathankim7.github.io/./src/components/Ants.vue?");

/***/ }),

/***/ "./src/App.vue?vue&type=style&index=0&id=7ba5bd90&lang=css":
/*!*****************************************************************!*\
  !*** ./src/App.vue?vue&type=style&index=0&id=7ba5bd90&lang=css ***!
  \*****************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_style_loader_dist_cjs_js_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_dist_stylePostLoader_js_node_modules_vue_loader_dist_index_js_ruleSet_1_rules_8_use_0_App_vue_vue_type_style_index_0_id_7ba5bd90_lang_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../node_modules/style-loader/dist/cjs.js!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./App.vue?vue&type=style&index=0&id=7ba5bd90&lang=css */ \"./node_modules/style-loader/dist/cjs.js!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[8].use[0]!./src/App.vue?vue&type=style&index=0&id=7ba5bd90&lang=css\");\n\n\n//# sourceURL=webpack://nathankim7.github.io/./src/App.vue?");

/***/ }),

/***/ "./node_modules/vue/dist/vue.runtime.esm-bundler.js":
/*!**********************************************************!*\
  !*** ./node_modules/vue/dist/vue.runtime.esm-bundler.js ***!
  \**********************************************************/
/*! namespace exports */
/*! export BaseTransition [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .BaseTransition */
/*! export Comment [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .Comment */
/*! export Fragment [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .Fragment */
/*! export KeepAlive [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .KeepAlive */
/*! export Static [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .Static */
/*! export Suspense [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .Suspense */
/*! export Teleport [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .Teleport */
/*! export Text [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .Text */
/*! export Transition [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js .Transition */
/*! export TransitionGroup [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js .TransitionGroup */
/*! export callWithAsyncErrorHandling [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .callWithAsyncErrorHandling */
/*! export callWithErrorHandling [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .callWithErrorHandling */
/*! export camelize [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/shared/dist/shared.esm-bundler.js .camelize */
/*! export capitalize [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/shared/dist/shared.esm-bundler.js .capitalize */
/*! export cloneVNode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .cloneVNode */
/*! export compile [provided] [no usage info] [missing usage info prevents renaming] */
/*! export computed [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .computed */
/*! export createApp [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js .createApp */
/*! export createBlock [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .createBlock */
/*! export createCommentVNode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .createCommentVNode */
/*! export createHydrationRenderer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .createHydrationRenderer */
/*! export createRenderer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .createRenderer */
/*! export createSSRApp [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js .createSSRApp */
/*! export createSlots [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .createSlots */
/*! export createStaticVNode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .createStaticVNode */
/*! export createTextVNode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .createTextVNode */
/*! export createVNode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .createVNode */
/*! export customRef [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .customRef */
/*! export defineAsyncComponent [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .defineAsyncComponent */
/*! export defineComponent [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .defineComponent */
/*! export defineEmit [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .defineEmit */
/*! export defineProps [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .defineProps */
/*! export devtools [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .devtools */
/*! export getCurrentInstance [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .getCurrentInstance */
/*! export getTransitionRawChildren [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .getTransitionRawChildren */
/*! export h [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .h */
/*! export handleError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .handleError */
/*! export hydrate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js .hydrate */
/*! export initCustomFormatter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .initCustomFormatter */
/*! export inject [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .inject */
/*! export isProxy [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .isProxy */
/*! export isReactive [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .isReactive */
/*! export isReadonly [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .isReadonly */
/*! export isRef [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .isRef */
/*! export isVNode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .isVNode */
/*! export markRaw [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .markRaw */
/*! export mergeProps [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .mergeProps */
/*! export nextTick [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .nextTick */
/*! export onActivated [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .onActivated */
/*! export onBeforeMount [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .onBeforeMount */
/*! export onBeforeUnmount [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .onBeforeUnmount */
/*! export onBeforeUpdate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .onBeforeUpdate */
/*! export onDeactivated [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .onDeactivated */
/*! export onErrorCaptured [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .onErrorCaptured */
/*! export onMounted [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .onMounted */
/*! export onRenderTracked [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .onRenderTracked */
/*! export onRenderTriggered [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .onRenderTriggered */
/*! export onUnmounted [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .onUnmounted */
/*! export onUpdated [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .onUpdated */
/*! export openBlock [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .openBlock */
/*! export popScopeId [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .popScopeId */
/*! export provide [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .provide */
/*! export proxyRefs [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .proxyRefs */
/*! export pushScopeId [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .pushScopeId */
/*! export queuePostFlushCb [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .queuePostFlushCb */
/*! export reactive [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .reactive */
/*! export readonly [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .readonly */
/*! export ref [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .ref */
/*! export registerRuntimeCompiler [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .registerRuntimeCompiler */
/*! export render [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js .render */
/*! export renderList [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .renderList */
/*! export renderSlot [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .renderSlot */
/*! export resolveComponent [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .resolveComponent */
/*! export resolveDirective [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .resolveDirective */
/*! export resolveDynamicComponent [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .resolveDynamicComponent */
/*! export resolveTransitionHooks [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .resolveTransitionHooks */
/*! export setBlockTracking [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .setBlockTracking */
/*! export setDevtoolsHook [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .setDevtoolsHook */
/*! export setTransitionHooks [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .setTransitionHooks */
/*! export shallowReactive [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .shallowReactive */
/*! export shallowReadonly [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .shallowReadonly */
/*! export shallowRef [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .shallowRef */
/*! export ssrContextKey [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .ssrContextKey */
/*! export ssrUtils [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .ssrUtils */
/*! export toDisplayString [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/shared/dist/shared.esm-bundler.js .toDisplayString */
/*! export toHandlerKey [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/shared/dist/shared.esm-bundler.js .toHandlerKey */
/*! export toHandlers [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .toHandlers */
/*! export toRaw [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .toRaw */
/*! export toRef [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .toRef */
/*! export toRefs [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .toRefs */
/*! export transformVNodeArgs [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .transformVNodeArgs */
/*! export triggerRef [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .triggerRef */
/*! export unref [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js .unref */
/*! export useContext [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .useContext */
/*! export useCssModule [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js .useCssModule */
/*! export useCssVars [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js .useCssVars */
/*! export useSSRContext [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .useSSRContext */
/*! export useTransitionState [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .useTransitionState */
/*! export vModelCheckbox [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js .vModelCheckbox */
/*! export vModelDynamic [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js .vModelDynamic */
/*! export vModelRadio [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js .vModelRadio */
/*! export vModelSelect [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js .vModelSelect */
/*! export vModelText [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js .vModelText */
/*! export vShow [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js .vShow */
/*! export version [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .version */
/*! export warn [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .warn */
/*! export watch [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .watch */
/*! export watchEffect [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .watchEffect */
/*! export withCtx [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .withCtx */
/*! export withDirectives [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .withDirectives */
/*! export withKeys [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js .withKeys */
/*! export withModifiers [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js .withModifiers */
/*! export withScopeId [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js .withScopeId */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BaseTransition\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.BaseTransition,\n/* harmony export */   \"Comment\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.Comment,\n/* harmony export */   \"Fragment\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.Fragment,\n/* harmony export */   \"KeepAlive\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.KeepAlive,\n/* harmony export */   \"Static\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.Static,\n/* harmony export */   \"Suspense\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.Suspense,\n/* harmony export */   \"Teleport\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.Teleport,\n/* harmony export */   \"Text\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.Text,\n/* harmony export */   \"Transition\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.Transition,\n/* harmony export */   \"TransitionGroup\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.TransitionGroup,\n/* harmony export */   \"callWithAsyncErrorHandling\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.callWithAsyncErrorHandling,\n/* harmony export */   \"callWithErrorHandling\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.callWithErrorHandling,\n/* harmony export */   \"camelize\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.camelize,\n/* harmony export */   \"capitalize\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.capitalize,\n/* harmony export */   \"cloneVNode\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.cloneVNode,\n/* harmony export */   \"computed\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.computed,\n/* harmony export */   \"createApp\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.createApp,\n/* harmony export */   \"createBlock\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.createBlock,\n/* harmony export */   \"createCommentVNode\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode,\n/* harmony export */   \"createHydrationRenderer\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.createHydrationRenderer,\n/* harmony export */   \"createRenderer\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.createRenderer,\n/* harmony export */   \"createSSRApp\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.createSSRApp,\n/* harmony export */   \"createSlots\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.createSlots,\n/* harmony export */   \"createStaticVNode\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.createStaticVNode,\n/* harmony export */   \"createTextVNode\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.createTextVNode,\n/* harmony export */   \"createVNode\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.createVNode,\n/* harmony export */   \"customRef\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.customRef,\n/* harmony export */   \"defineAsyncComponent\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.defineAsyncComponent,\n/* harmony export */   \"defineComponent\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.defineComponent,\n/* harmony export */   \"defineEmit\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.defineEmit,\n/* harmony export */   \"defineProps\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.defineProps,\n/* harmony export */   \"devtools\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.devtools,\n/* harmony export */   \"getCurrentInstance\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.getCurrentInstance,\n/* harmony export */   \"getTransitionRawChildren\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.getTransitionRawChildren,\n/* harmony export */   \"h\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.h,\n/* harmony export */   \"handleError\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.handleError,\n/* harmony export */   \"hydrate\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.hydrate,\n/* harmony export */   \"initCustomFormatter\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.initCustomFormatter,\n/* harmony export */   \"inject\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.inject,\n/* harmony export */   \"isProxy\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.isProxy,\n/* harmony export */   \"isReactive\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.isReactive,\n/* harmony export */   \"isReadonly\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.isReadonly,\n/* harmony export */   \"isRef\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.isRef,\n/* harmony export */   \"isVNode\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.isVNode,\n/* harmony export */   \"markRaw\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.markRaw,\n/* harmony export */   \"mergeProps\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.mergeProps,\n/* harmony export */   \"nextTick\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.nextTick,\n/* harmony export */   \"onActivated\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.onActivated,\n/* harmony export */   \"onBeforeMount\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.onBeforeMount,\n/* harmony export */   \"onBeforeUnmount\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.onBeforeUnmount,\n/* harmony export */   \"onBeforeUpdate\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.onBeforeUpdate,\n/* harmony export */   \"onDeactivated\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.onDeactivated,\n/* harmony export */   \"onErrorCaptured\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.onErrorCaptured,\n/* harmony export */   \"onMounted\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.onMounted,\n/* harmony export */   \"onRenderTracked\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.onRenderTracked,\n/* harmony export */   \"onRenderTriggered\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.onRenderTriggered,\n/* harmony export */   \"onUnmounted\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.onUnmounted,\n/* harmony export */   \"onUpdated\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.onUpdated,\n/* harmony export */   \"openBlock\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.openBlock,\n/* harmony export */   \"popScopeId\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.popScopeId,\n/* harmony export */   \"provide\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.provide,\n/* harmony export */   \"proxyRefs\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.proxyRefs,\n/* harmony export */   \"pushScopeId\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.pushScopeId,\n/* harmony export */   \"queuePostFlushCb\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.queuePostFlushCb,\n/* harmony export */   \"reactive\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.reactive,\n/* harmony export */   \"readonly\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.readonly,\n/* harmony export */   \"ref\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.ref,\n/* harmony export */   \"registerRuntimeCompiler\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.registerRuntimeCompiler,\n/* harmony export */   \"render\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.render,\n/* harmony export */   \"renderList\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.renderList,\n/* harmony export */   \"renderSlot\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.renderSlot,\n/* harmony export */   \"resolveComponent\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.resolveComponent,\n/* harmony export */   \"resolveDirective\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.resolveDirective,\n/* harmony export */   \"resolveDynamicComponent\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.resolveDynamicComponent,\n/* harmony export */   \"resolveTransitionHooks\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.resolveTransitionHooks,\n/* harmony export */   \"setBlockTracking\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.setBlockTracking,\n/* harmony export */   \"setDevtoolsHook\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.setDevtoolsHook,\n/* harmony export */   \"setTransitionHooks\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.setTransitionHooks,\n/* harmony export */   \"shallowReactive\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.shallowReactive,\n/* harmony export */   \"shallowReadonly\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.shallowReadonly,\n/* harmony export */   \"shallowRef\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.shallowRef,\n/* harmony export */   \"ssrContextKey\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.ssrContextKey,\n/* harmony export */   \"ssrUtils\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.ssrUtils,\n/* harmony export */   \"toDisplayString\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.toDisplayString,\n/* harmony export */   \"toHandlerKey\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.toHandlerKey,\n/* harmony export */   \"toHandlers\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.toHandlers,\n/* harmony export */   \"toRaw\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.toRaw,\n/* harmony export */   \"toRef\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.toRef,\n/* harmony export */   \"toRefs\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.toRefs,\n/* harmony export */   \"transformVNodeArgs\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.transformVNodeArgs,\n/* harmony export */   \"triggerRef\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.triggerRef,\n/* harmony export */   \"unref\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.unref,\n/* harmony export */   \"useContext\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.useContext,\n/* harmony export */   \"useCssModule\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.useCssModule,\n/* harmony export */   \"useCssVars\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.useCssVars,\n/* harmony export */   \"useSSRContext\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.useSSRContext,\n/* harmony export */   \"useTransitionState\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.useTransitionState,\n/* harmony export */   \"vModelCheckbox\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.vModelCheckbox,\n/* harmony export */   \"vModelDynamic\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.vModelDynamic,\n/* harmony export */   \"vModelRadio\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.vModelRadio,\n/* harmony export */   \"vModelSelect\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.vModelSelect,\n/* harmony export */   \"vModelText\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.vModelText,\n/* harmony export */   \"vShow\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.vShow,\n/* harmony export */   \"version\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.version,\n/* harmony export */   \"warn\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.warn,\n/* harmony export */   \"watch\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.watch,\n/* harmony export */   \"watchEffect\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.watchEffect,\n/* harmony export */   \"withCtx\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.withCtx,\n/* harmony export */   \"withDirectives\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.withDirectives,\n/* harmony export */   \"withKeys\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.withKeys,\n/* harmony export */   \"withModifiers\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.withModifiers,\n/* harmony export */   \"withScopeId\": () => /* reexport safe */ _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__.withScopeId,\n/* harmony export */   \"compile\": () => /* binding */ compile\n/* harmony export */ });\n/* harmony import */ var _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vue/runtime-dom */ \"./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js\");\n/* harmony import */ var _vue_runtime_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vue/runtime-dom */ \"./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js\");\n/* harmony import */ var _vue_shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vue/shared */ \"./node_modules/@vue/shared/dist/shared.esm-bundler.js\");\n\n\n\n\nfunction initDev() {\r\n    const target = (0,_vue_shared__WEBPACK_IMPORTED_MODULE_1__.getGlobalThis)();\r\n    target.__VUE__ = true;\r\n    (0,_vue_runtime_dom__WEBPACK_IMPORTED_MODULE_2__.setDevtoolsHook)(target.__VUE_DEVTOOLS_GLOBAL_HOOK__);\r\n    {\r\n        (0,_vue_runtime_dom__WEBPACK_IMPORTED_MODULE_2__.initCustomFormatter)();\r\n    }\r\n}\n\n// This entry exports the runtime only, and is built as\r\n( true) && initDev();\r\nconst compile = () => {\r\n    if ((true)) {\r\n        (0,_vue_runtime_dom__WEBPACK_IMPORTED_MODULE_2__.warn)(`Runtime compilation is not supported in this build of Vue.` +\r\n            ( ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                ) /* should not happen */);\r\n    }\r\n};\n\n\n\n\n//# sourceURL=webpack://nathankim7.github.io/./node_modules/vue/dist/vue.runtime.esm-bundler.js?");

/***/ }),

/***/ "./src/favicon.svg":
/*!*************************!*\
  !*** ./src/favicon.svg ***!
  \*************************/
/*! default exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: module, __webpack_require__.p, __webpack_require__.* */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"65bcb10752d8f3fda36f.svg\";\n\n//# sourceURL=webpack://nathankim7.github.io/./src/favicon.svg?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/amd options */
/******/ 	(() => {
/******/ 		__webpack_require__.amdO = {};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => module['default'] :
/******/ 				() => module;
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/harmony module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.hmd = (module) => {
/******/ 			module = Object.create(module);
/******/ 			if (!module.children) module.children = [];
/******/ 			Object.defineProperty(module, 'exports', {
/******/ 				enumerable: true,
/******/ 				set: () => {
/******/ 					throw new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);
/******/ 				}
/******/ 			});
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./src/App.js");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;